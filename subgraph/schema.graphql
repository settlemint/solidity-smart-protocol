# --------------------------------------------------
# SMART Indexer
# --------------------------------------------------

type Account @entity(immutable: true) {
  id: Bytes!
  isContract: Boolean!
}

type Event @entity(immutable: true) {
  id: Bytes!
  eventName: String!
  txIndex: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  emitter: Account!
  sender: Account!
  involved: [Account!]!
  values: [EventValue!]! @derivedFrom(field: "entry")
}

type EventValue @entity(immutable: true) {
  id: Bytes!
  name: String!
  value: String!
  entry: Event!
}

type AccessControl @entity(immutable: false) {
  id: Bytes!
  admin: [Account!]!
  registrar: [Account!]!
  registrarAdmin: [Account!]!
  registrarGovernor: [Account!]!
  claimManager: [Account!]!
  identityIssuer: [Account!]!
  tokenIdentityIssuer: [Account!]!
  tokenIdentityIssuerAdmin: [Account!]!
  tokenDeployer: [Account!]!
  storageModifier: [Account!]!
  manageRegistries: [Account!]!
  tokenGovernance: [Account!]!
  supplyManagement: [Account!]!
  custodian: [Account!]!
  emergency: [Account!]!
  tokenAdmin: [Account!]!
  complianceAdmin: [Account!]!
  verificationAdmin: [Account!]!
  minter: [Account!]!
  burner: [Account!]!
  freezer: [Account!]!
  forcedTransfer: [Account!]!
  recovery: [Account!]!
  pauser: [Account!]!
  globalListManager: [Account!]!
  operator: [Account!]!
}

type System @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account
  compliance: Compliance
  identityRegistryStorage: IdentityRegistryStorage
  identityFactory: IdentityFactory
  identityRegistry: IdentityRegistry
  trustedIssuersRegistry: TrustedIssuersRegistry
  tokenFactories: [TokenFactory!]! @derivedFrom(field: "system")
}

type Compliance @entity(immutable: false) {
  id: Bytes!
  account: Account!
}

type IdentityRegistryStorage @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account!
}

type IdentityFactory @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account!
}

type IdentityRegistry @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account!
}

type TrustedIssuersRegistry @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account!
}

type TokenFactory @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  type: String!
  system: System
  account: Account!
  tokens: [Token!]! @derivedFrom(field: "tokenFactory")
}

type Token @entity(immutable: false) {
  id: Bytes!
  account: Account!
  accessControl: AccessControl!
  identity: TokenIdentity
  type: String!
  tokenFactory: TokenFactory
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  pausable: TokenPausable
}

type TokenPausable @entity(immutable: false) {
  id: Bytes!
  paused: Boolean!
}

type TokenIdentity @entity(immutable: true) {
  id: Bytes!
  claims: [TokenIdentityClaim!]! @derivedFrom(field: "tokenIdentity")
}

type TokenIdentityClaim @entity(immutable: false) {
  id: Bytes!
  tokenIdentity: TokenIdentity!
  topic: BigInt
  scheme: BigInt
  issuer: Account
  signature: Bytes
  data: Bytes
  uri: String
  revoked: Boolean!
}
