# --------------------------------------------------
# SMART Indexer
# --------------------------------------------------

type Account @entity(immutable: true) {
  id: Bytes!
  isContract: Boolean!
}

type Event @entity(immutable: true) {
  id: Bytes!
  eventName: String!
  txIndex: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  emitter: Account!
  sender: Account!
  involved: [Account!]!
  values: [EventValue!]! @derivedFrom(field: "entry")
}

type EventValue @entity(immutable: true) {
  id: Bytes!
  name: String!
  value: String!
  entry: Event!
}

type AccessControl @entity(immutable: false) {
  id: Bytes!
  admin: [Account!]!
  burner: [Account!]!
  complianceAdmin: [Account!]!
  deploymentOwner: [Account!]!
  freezer: [Account!]!
  forcedTransfer: [Account!]!
  minter: [Account!]!
  pauser: [Account!]!
  recovery: [Account!]!
  signer: [Account!]!
  storageModifier: [Account!]!
  verificationAdmin: [Account!]!
}

type System @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account
  compliance: Compliance
  identityRegistryStorage: IdentityRegistryStorage
  identityFactory: IdentityFactory
  identityRegistry: IdentityRegistry
  trustedIssuersRegistry: TrustedIssuersRegistry
}

type Compliance @entity(immutable: false) {
  id: Bytes!
  account: Account
  implementation: Account
}

type IdentityRegistryStorage @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account
  implementation: Account
}

type IdentityFactory @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account
  implementation: Account
}

type IdentityRegistry @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account
  implementation: Account
}

type TrustedIssuersRegistry @entity(immutable: false) {
  id: Bytes!
  accessControl: AccessControl!
  account: Account
  implementation: Account
}
