{
  "id": "4baaf492db11900babf1b4f1118414b4",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@onchainid/contracts/Identity.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\nimport \"./interface/IIdentity.sol\";\nimport \"./interface/IClaimIssuer.sol\";\nimport \"./version/Version.sol\";\nimport \"./storage/Storage.sol\";\n\n/**\n * @dev Implementation of the `IERC734` \"KeyHolder\" and the `IERC735` \"ClaimHolder\" interfaces\n * into a common Identity Contract.\n * This implementation has a separate contract were it declares all storage,\n * allowing for it to be used as an upgradable logic contract.\n */\ncontract Identity is Storage, IIdentity, Version {\n\n    /**\n     * @notice Prevent any direct calls to the implementation contract (marked by _canInteract = false).\n     */\n    modifier delegatedOnly() {\n        require(_canInteract == true, \"Interacting with the library contract is forbidden.\");\n        _;\n    }\n\n    /**\n     * @notice requires management key to call this function, or internal call\n     */\n    modifier onlyManager() {\n        require(msg.sender == address(this) || keyHasPurpose(keccak256(abi.encode(msg.sender)), 1)\n        , \"Permissions: Sender does not have management key\");\n        _;\n    }\n\n    /**\n     * @notice requires claim key to call this function, or internal call\n     */\n    modifier onlyClaimKey() {\n        require(msg.sender == address(this) || keyHasPurpose(keccak256(abi.encode(msg.sender)), 3)\n        , \"Permissions: Sender does not have claim signer key\");\n        _;\n    }\n\n    /**\n     * @notice constructor of the Identity contract\n     * @param initialManagementKey the address of the management key at deployment\n     * @param _isLibrary boolean value stating if the contract is library or not\n     * calls __Identity_init if contract is not library\n     */\n    constructor(address initialManagementKey, bool _isLibrary) {\n\n        if (!_isLibrary) {\n    require(initialManagementKey != address(0), \"invalid argument - zero address\");            __Identity_init(initialManagementKey);\n        } else {\n            _initialized = true;\n        }\n    }\n\n    /**\n     * @notice When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\n     *\n     * @param initialManagementKey The ethereum address to be set as the management key of the ONCHAINID.\n     */\n    function initialize(address initialManagementKey) external {\n        require(initialManagementKey != address(0), \"invalid argument - zero address\");\n        __Identity_init(initialManagementKey);\n    }\n\n    /**\n     * @dev See {IERC734-execute}.\n     * @notice Passes an execution instruction to the keymanager.\n     * If the sender is an ACTION key and the destination address is not the identity contract itself, then the\n     * execution is immediately approved and performed.\n     * If the destination address is the identity itself, then the execution would be performed immediately only if\n     * the sender is a MANAGEMENT key.\n     * Otherwise the execution request must be approved via the `approve` method.\n     * @return executionId to use in the approve function, to approve or reject this execution.\n     */\n    function execute(address _to, uint256 _value, bytes memory _data)\n    external\n    delegatedOnly\n    override\n    payable\n    returns (uint256 executionId)\n    {\n        uint256 _executionId = _executionNonce;\n        _executions[_executionId].to = _to;\n        _executions[_executionId].value = _value;\n        _executions[_executionId].data = _data;\n        _executionNonce++;\n\n        emit ExecutionRequested(_executionId, _to, _value, _data);\n\n        if (keyHasPurpose(keccak256(abi.encode(msg.sender)), 1)) {\n            approve(_executionId, true);\n        }\n        else if (_to != address(this) && keyHasPurpose(keccak256(abi.encode(msg.sender)), 2)){\n            approve(_executionId, true);\n        }\n\n        return _executionId;\n    }\n\n    /**\n     * @dev See {IERC734-getKey}.\n     * @notice Implementation of the getKey function from the ERC-734 standard\n     * @param _key The public key.  for non-hex and long keys, its the Keccak256 hash of the key\n     * @return purposes Returns the full key data, if present in the identity.\n     * @return keyType Returns the full key data, if present in the identity.\n     * @return key Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key)\n    external\n    override\n    view\n    returns(uint256[] memory purposes, uint256 keyType, bytes32 key)\n    {\n        return (_keys[_key].purposes, _keys[_key].keyType, _keys[_key].key);\n    }\n\n    /**\n    * @dev See {IERC734-getKeyPurposes}.\n    * @notice gets the purposes of a key\n    * @param _key The public key.  for non-hex and long keys, its the Keccak256 hash of the key\n    * @return _purposes Returns the purposes of the specified key\n    */\n    function getKeyPurposes(bytes32 _key)\n    external\n    override\n    view\n    returns(uint256[] memory _purposes)\n    {\n        return (_keys[_key].purposes);\n    }\n\n    /**\n    * @dev See {IERC734-getKeysByPurpose}.\n    * @notice gets all the keys with a specific purpose from an identity\n    * @param _purpose a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\n    * @return keys Returns an array of public key bytes32 hold by this identity and having the specified purpose\n    */\n    function getKeysByPurpose(uint256 _purpose)\n    external\n    override\n    view\n    returns(bytes32[] memory keys)\n    {\n        return _keysByPurpose[_purpose];\n    }\n\n    /**\n    * @dev See {IERC735-getClaimIdsByTopic}.\n    * @notice Implementation of the getClaimIdsByTopic function from the ERC-735 standard.\n    * used to get all the claims from the specified topic\n    * @param _topic The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\n    * @return claimIds Returns an array of claim IDs by topic.\n    */\n    function getClaimIdsByTopic(uint256 _topic)\n    external\n    override\n    view\n    returns(bytes32[] memory claimIds)\n    {\n        return _claimsByTopic[_topic];\n    }\n\n    /**\n    * @notice implementation of the addKey function of the ERC-734 standard\n    * Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes:\n    * 1: MANAGEMENT keys, which can manage the identity\n    * 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.)\n    * 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable.\n    * 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims.\n    * MUST only be done by keys of purpose 1, or the identity itself.\n    * If its the identity itself, the approval process will determine its approval.\n    * @param _key keccak256 representation of an ethereum address\n    * @param _type type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\n    * @param _purpose a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\n    * @return success Returns TRUE if the addition was successful and FALSE if not\n    */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _type)\n    public\n    delegatedOnly\n    onlyManager\n    override\n    returns (bool success)\n    {\n        if (_keys[_key].key == _key) {\n            uint256[] memory _purposes = _keys[_key].purposes;\n            for (uint keyPurposeIndex = 0; keyPurposeIndex < _purposes.length; keyPurposeIndex++) {\n                uint256 purpose = _purposes[keyPurposeIndex];\n\n                if (purpose == _purpose) {\n                    revert(\"Conflict: Key already has purpose\");\n                }\n            }\n\n            _keys[_key].purposes.push(_purpose);\n        } else {\n            _keys[_key].key = _key;\n            _keys[_key].purposes = [_purpose];\n            _keys[_key].keyType = _type;\n        }\n\n        _keysByPurpose[_purpose].push(_key);\n\n        emit KeyAdded(_key, _purpose, _type);\n\n        return true;\n    }\n\n    /**\n     *  @dev See {IERC734-approve}.\n     *  @notice Approves an execution.\n     *  If the sender is an ACTION key and the destination address is not the identity contract itself, then the\n     *  approval is authorized and the operation would be performed.\n     *  If the destination address is the identity itself, then the execution would be authorized and performed only\n     *  if the sender is a MANAGEMENT key.\n     */\n    function approve(uint256 _id, bool _approve)\n    public\n    delegatedOnly\n    override\n    returns (bool success)\n    {\n        require(_id < _executionNonce, \"Cannot approve a non-existing execution\");\n        require(!_executions[_id].executed, \"Request already executed\");\n\n        if(_executions[_id].to == address(this)) {\n            require(keyHasPurpose(keccak256(abi.encode(msg.sender)), 1), \"Sender does not have management key\");\n        }\n        else {\n            require(keyHasPurpose(keccak256(abi.encode(msg.sender)), 2), \"Sender does not have action key\");\n        }\n\n        emit Approved(_id, _approve);\n\n        if (_approve == true) {\n            _executions[_id].approved = true;\n\n            // solhint-disable-next-line avoid-low-level-calls\n            (success,) = _executions[_id].to.call{value:(_executions[_id].value)}(_executions[_id].data);\n\n            if (success) {\n                _executions[_id].executed = true;\n\n                emit Executed(\n                    _id,\n                    _executions[_id].to,\n                    _executions[_id].value,\n                    _executions[_id].data\n                );\n\n                return true;\n            } else {\n                emit ExecutionFailed(\n                    _id,\n                    _executions[_id].to,\n                    _executions[_id].value,\n                    _executions[_id].data\n                );\n\n                return false;\n            }\n        } else {\n            _executions[_id].approved = false;\n        }\n        return false;\n    }\n\n    /**\n    * @dev See {IERC734-removeKey}.\n    * @notice Remove the purpose from a key.\n    */\n    function removeKey(bytes32 _key, uint256 _purpose)\n    public\n    delegatedOnly\n    onlyManager\n    override\n    returns (bool success)\n    {\n        require(_keys[_key].key == _key, \"NonExisting: Key isn't registered\");\n        uint256[] memory _purposes = _keys[_key].purposes;\n\n        uint purposeIndex = 0;\n        while (_purposes[purposeIndex] != _purpose) {\n            purposeIndex++;\n\n            if (purposeIndex == _purposes.length) {\n                revert(\"NonExisting: Key doesn't have such purpose\");\n            }\n        }\n\n        _purposes[purposeIndex] = _purposes[_purposes.length - 1];\n        _keys[_key].purposes = _purposes;\n        _keys[_key].purposes.pop();\n\n        uint keyIndex = 0;\n        uint arrayLength = _keysByPurpose[_purpose].length;\n\n        while (_keysByPurpose[_purpose][keyIndex] != _key) {\n            keyIndex++;\n\n            if (keyIndex >= arrayLength) {\n                break;\n            }\n        }\n\n        _keysByPurpose[_purpose][keyIndex] = _keysByPurpose[_purpose][arrayLength - 1];\n        _keysByPurpose[_purpose].pop();\n\n        uint keyType = _keys[_key].keyType;\n\n        if (_purposes.length - 1 == 0) {\n            delete _keys[_key];\n        }\n\n        emit KeyRemoved(_key, _purpose, keyType);\n\n        return true;\n    }\n\n    /**\n    * @dev See {IERC735-addClaim}.\n    * @notice Implementation of the addClaim function from the ERC-735 standard\n    *  Require that the msg.sender has claim signer key.\n    *\n    * @param _topic The type of claim\n    * @param _scheme The scheme with which this claim SHOULD be verified or how it should be processed.\n    * @param _issuer The issuers identity contract address, or the address used to sign the above signature.\n    * @param _signature Signature which is the proof that the claim issuer issued a claim of topic for this identity.\n    * it MUST be a signed message of the following structure:\n    * keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\n    * @param _data The hash of the claim data, sitting in another\n    * location, a bit-mask, call data, or actual data based on the claim scheme.\n    * @param _uri The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\n    *\n    * @return claimRequestId Returns claimRequestId: COULD be\n    * send to the approve function, to approve or reject this claim.\n    * triggers ClaimAdded event.\n    */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address _issuer,\n        bytes memory _signature,\n        bytes memory _data,\n        string memory _uri\n    )\n    public\n    delegatedOnly\n    onlyClaimKey\n    override\n    returns (bytes32 claimRequestId)\n    {\n        if (_issuer != address(this)) {\n            require(IClaimIssuer(_issuer).isClaimValid(IIdentity(address(this)), _topic, _signature, _data), \"invalid claim\");\n        }\n\n        bytes32 claimId = keccak256(abi.encode(_issuer, _topic));\n        _claims[claimId].topic = _topic;\n        _claims[claimId].scheme = _scheme;\n        _claims[claimId].signature = _signature;\n        _claims[claimId].data = _data;\n        _claims[claimId].uri = _uri;\n\n        if (_claims[claimId].issuer != _issuer) {\n            _claimsByTopic[_topic].push(claimId);\n            _claims[claimId].issuer = _issuer;\n\n            emit ClaimAdded(claimId, _topic, _scheme, _issuer, _signature, _data, _uri);\n        }\n        else {\n            emit ClaimChanged(claimId, _topic, _scheme, _issuer, _signature, _data, _uri);\n        }\n        return claimId;\n    }\n\n    /**\n    * @dev See {IERC735-removeClaim}.\n    * @notice Implementation of the removeClaim function from the ERC-735 standard\n    * Require that the msg.sender has management key.\n    * Can only be removed by the claim issuer, or the claim holder itself.\n    *\n    * @param _claimId The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\n    *\n    * @return success Returns TRUE when the claim was removed.\n    * triggers ClaimRemoved event\n    */\n    function removeClaim(bytes32 _claimId)\n    public\n    delegatedOnly\n    onlyClaimKey\n    override\n    returns\n    (bool success) {\n        uint256 _topic = _claims[_claimId].topic;\n        if (_topic == 0) {\n            revert(\"NonExisting: There is no claim with this ID\");\n        }\n\n        uint claimIndex = 0;\n        uint arrayLength = _claimsByTopic[_topic].length;\n        while (_claimsByTopic[_topic][claimIndex] != _claimId) {\n            claimIndex++;\n\n            if (claimIndex >= arrayLength) {\n                break;\n            }\n        }\n\n        _claimsByTopic[_topic][claimIndex] =\n        _claimsByTopic[_topic][arrayLength - 1];\n        _claimsByTopic[_topic].pop();\n\n        emit ClaimRemoved(\n            _claimId,\n            _topic,\n            _claims[_claimId].scheme,\n            _claims[_claimId].issuer,\n            _claims[_claimId].signature,\n            _claims[_claimId].data,\n            _claims[_claimId].uri\n        );\n\n        delete _claims[_claimId];\n\n        return true;\n    }\n\n    /**\n    * @dev See {IERC735-getClaim}.\n    * @notice Implementation of the getClaim function from the ERC-735 standard.\n    *\n    * @param _claimId The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\n    *\n    * @return topic Returns all the parameters of the claim for the\n    * specified _claimId (topic, scheme, signature, issuer, data, uri) .\n    * @return scheme Returns all the parameters of the claim for the\n    * specified _claimId (topic, scheme, signature, issuer, data, uri) .\n    * @return issuer Returns all the parameters of the claim for the\n    * specified _claimId (topic, scheme, signature, issuer, data, uri) .\n    * @return signature Returns all the parameters of the claim for the\n    * specified _claimId (topic, scheme, signature, issuer, data, uri) .\n    * @return data Returns all the parameters of the claim for the\n    * specified _claimId (topic, scheme, signature, issuer, data, uri) .\n    * @return uri Returns all the parameters of the claim for the\n    * specified _claimId (topic, scheme, signature, issuer, data, uri) .\n    */\n    function getClaim(bytes32 _claimId)\n    public\n    override\n    view\n    returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri\n    )\n    {\n        return (\n        _claims[_claimId].topic,\n        _claims[_claimId].scheme,\n        _claims[_claimId].issuer,\n        _claims[_claimId].signature,\n        _claims[_claimId].data,\n        _claims[_claimId].uri\n        );\n    }\n\n    /**\n    * @dev See {IERC734-keyHasPurpose}.\n    * @notice Returns true if the key has MANAGEMENT purpose or the specified purpose.\n    */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose)\n    public\n    override\n    view\n    returns(bool result)\n    {\n        Key memory key = _keys[_key];\n        if (key.key == 0) return false;\n\n        for (uint keyPurposeIndex = 0; keyPurposeIndex < key.purposes.length; keyPurposeIndex++) {\n            uint256 purpose = key.purposes[keyPurposeIndex];\n\n            if (purpose == 1 || purpose == _purpose) return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @dev Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a\n     * built-in revocation mechanism and are considered valid as long as their signature is valid and they are still\n     * stored by the identity contract.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes memory sig,\n        bytes memory data)\n    public override virtual view returns (bool claimValid)\n    {\n        bytes32 dataHash = keccak256(abi.encode(_identity, claimTopic, data));\n        // Use abi.encodePacked to concatenate the message prefix and the message to sign.\n        bytes32 prefixedHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", dataHash));\n\n        // Recover address of data signer\n        address recovered = getRecoveredAddress(sig, prefixedHash);\n\n        // Take hash of recovered address\n        bytes32 hashedAddr = keccak256(abi.encode(recovered));\n\n        // Does the trusted identifier have they key which signed the user's claim?\n        //  && (isClaimRevoked(_claimId) == false)\n        if (keyHasPurpose(hashedAddr, 3)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes memory sig, bytes32 dataHash)\n    public\n    pure\n    returns (address addr)\n    {\n        bytes32 ra;\n        bytes32 sa;\n        uint8 va;\n\n        // Check the signature length\n        if (sig.length != 65) {\n            return address(0);\n        }\n\n        // Divide the signature in r, s and v variables\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            ra := mload(add(sig, 32))\n            sa := mload(add(sig, 64))\n            va := byte(0, mload(add(sig, 96)))\n        }\n\n        if (va < 27) {\n            va += 27;\n        }\n\n        address recoveredAddress = ecrecover(dataHash, va, ra, sa);\n\n        return (recoveredAddress);\n    }\n\n    /**\n     * @notice Initializer internal function for the Identity contract.\n     *\n     * @param initialManagementKey The ethereum address to be set as the management key of the ONCHAINID.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __Identity_init(address initialManagementKey) internal {\n        require(!_initialized || _isConstructor(), \"Initial key was already setup.\");\n        _initialized = true;\n        _canInteract = true;\n\n        bytes32 _key = keccak256(abi.encode(initialManagementKey));\n        _keys[_key].key = _key;\n        _keys[_key].purposes = [1];\n        _keys[_key].keyType = 1;\n        _keysByPurpose[1].push(_key);\n        emit KeyAdded(_key, 1, 1);\n    }\n\n    /**\n     * @notice Computes if the context in which the function is called is a constructor or not.\n     *\n     * @return true if the context is a constructor.\n     */\n    function _isConstructor() private view returns (bool) {\n        address self = address(this);\n        uint256 cs;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { cs := extcodesize(self) }\n        return cs == 0;\n    }\n}\n"
      },
      "@onchainid/contracts/interface/IClaimIssuer.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
      },
      "@onchainid/contracts/interface/IERC734.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
      },
      "@onchainid/contracts/interface/IERC735.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
      },
      "@onchainid/contracts/interface/IIdentity.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n}\n"
      },
      "@onchainid/contracts/storage/Storage.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\nimport \"./Structs.sol\";\n\ncontract Storage is Structs {\n    // nonce used by the execute/approve function\n    uint256 internal _executionNonce;\n\n    // keys as defined by IERC734\n    mapping(bytes32 => Key) internal _keys;\n\n    // keys for a given purpose\n    // purpose 1 = MANAGEMENT\n    // purpose 2 = ACTION\n    // purpose 3 = CLAIM\n    mapping(uint256 => bytes32[]) internal _keysByPurpose;\n\n    // execution data\n    mapping(uint256 => Execution) internal _executions;\n\n    // claims held by the ONCHAINID\n    mapping(bytes32 => Claim) internal _claims;\n\n    // array of claims for a given topic\n    mapping(uint256 => bytes32[]) internal _claimsByTopic;\n\n    // status on initialization\n    bool internal _initialized = false;\n\n    // status on potential interactions with the contract\n    bool internal _canInteract = false;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     */\n    uint256[49] private __gap;\n}\n"
      },
      "@onchainid/contracts/storage/Structs.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\ncontract Structs {\n\n   /**\n    *  @dev Definition of the structure of a Key.\n    *\n    *  Specification: Keys are cryptographic public keys, or contract addresses associated with this identity.\n    *  The structure should be as follows:\n    *  key: A public key owned by this identity\n    *  purposes: uint256[] Array of the key purposes, like 1 = MANAGEMENT, 2 = EXECUTION\n    *  keyType: The type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\n    *  key: bytes32 The public key. // Its the Keccak256 hash of the key\n    */\n    struct Key {\n        uint256[] purposes;\n        uint256 keyType;\n        bytes32 key;\n    }\n\n    /**\n    *  @dev Definition of the structure of an Execution\n    *\n    *  Specification: Executions are requests for transactions to be issued by the ONCHAINID\n    *  to: address of contract to interact with, can be address(this)\n    *  value: ETH to transfer with the transaction\n    *  data: payload of the transaction to execute\n    *  approved: approval status of the Execution\n    *  executed: execution status of the Execution (set as false when the Execution is created\n    *  and updated to true when the Execution is processed)\n    */\n    struct Execution {\n        address to;\n        uint256 value;\n        bytes data;\n        bool approved;\n        bool executed;\n    }\n\n   /**\n    *  @dev Definition of the structure of a Claim.\n    *\n    *  Specification: Claims are information an issuer has about the identity holder.\n    *  The structure should be as follows:\n    *  claim: A claim published for the Identity.\n    *  topic: A uint256 number which represents the topic of the claim. (e.g. 1 biometric, 2 residence (ToBeDefined:\n    *  number schemes, sub topics based on number ranges??))\n    *  scheme : The scheme with which this claim SHOULD be verified or how it should be processed. Its a uint256 for\n    *  different schemes. E.g. could 3 mean contract verification, where the data will be call data, and the issuer a\n    *  contract address to call (ToBeDefined). Those can also mean different key types e.g. 1 = ECDSA, 2 = RSA, etc.\n    *  (ToBeDefined)\n    *  issuer: The issuers identity contract address, or the address used to sign the above signature. If an\n    *  identity contract, it should hold the key with which the above message was signed, if the key is not present\n    *  anymore, the claim SHOULD be treated as invalid. The issuer can also be a contract address itself, at which the\n    *  claim can be verified using the call data.\n    *  signature: Signature which is the proof that the claim issuer issued a claim of topic for this identity. it\n    *  MUST be a signed message of the following structure: `keccak256(abi.encode(identityHolder_address, topic, data))`\n    *  data: The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on\n    *  the claim scheme.\n    *  uri: The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\n    */\n    struct Claim {\n        uint256 topic;\n        uint256 scheme;\n        address issuer;\n        bytes signature;\n        bytes data;\n        string uri;\n    }\n}\n"
      },
      "@onchainid/contracts/version/Version.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.17;\n\n/**\n * @dev Version contract gives the versioning information of the implementation contract\n */\ncontract Version {\n    /**\n     * @dev Returns the string of the current version.\n     */\n    function version() external pure returns (string memory) {\n        // version 2.2.0\n        return \"2.2.1\";\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/system/identity-factory/identities/SMARTIdentityImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\nimport { Identity } from \"@onchainid/contracts/Identity.sol\";\nimport { IIdentity } from \"@onchainid/contracts/interface/IIdentity.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport { ERC165Upgradeable } from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\n\n// TODO: fix to be ERC-2771 compatible\n// TODO: fix to be ERC-165 initialization\ncontract SMARTIdentityImplementation is Identity, ERC165Upgradeable {\n    constructor() Identity(address(0), true) { }\n\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return interfaceId == type(IIdentity).interfaceId || interfaceId == type(IERC165).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n}\n"
      },
      "contracts/system/identity-factory/identities/SMARTTokenIdentityImplementation.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.17;\n\nimport { Identity } from \"@onchainid/contracts/Identity.sol\";\nimport { IIdentity } from \"@onchainid/contracts/interface/IIdentity.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport { ERC165Upgradeable } from \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\n\n// TODO: fix this so that it can be managed by the tokens Access Control\n// TODO: fix to be ERC-2771 compatible\n// TODO: fix to be ERC-165 initialization\ncontract SMARTTokenIdentityImplementation is Identity, ERC165Upgradeable {\n    constructor() Identity(address(0), true) { }\n\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return interfaceId == type(IIdentity).interfaceId || interfaceId == type(IERC165).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@onchainid/contracts/Identity.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/Identity.sol",
          "exportedSymbols": {
            "IClaimIssuer": [
              1351
            ],
            "IERC734": [
              1498
            ],
            "IERC735": [
              1606
            ],
            "IIdentity": [
              1630
            ],
            "Identity": [
              1301
            ],
            "Storage": [
              1674
            ],
            "Structs": [
              1712
            ],
            "Version": [
              1725
            ]
          },
          "id": 1302,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:0"
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IIdentity.sol",
              "file": "./interface/IIdentity.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1302,
              "sourceUnit": 1631,
              "src": "62:35:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IClaimIssuer.sol",
              "file": "./interface/IClaimIssuer.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1302,
              "sourceUnit": 1352,
              "src": "98:38:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@onchainid/contracts/version/Version.sol",
              "file": "./version/Version.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1302,
              "sourceUnit": 1726,
              "src": "137:31:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@onchainid/contracts/storage/Storage.sol",
              "file": "./storage/Storage.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1302,
              "sourceUnit": 1675,
              "src": "169:31:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "Storage",
                    "nameLocations": [
                      "502:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1674,
                    "src": "502:7:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "502:7:0"
                },
                {
                  "baseName": {
                    "id": 9,
                    "name": "IIdentity",
                    "nameLocations": [
                      "511:9:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1630,
                    "src": "511:9:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "511:9:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "Version",
                    "nameLocations": [
                      "522:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1725,
                    "src": "522:7:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "522:7:0"
                }
              ],
              "canonicalName": "Identity",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 6,
                "nodeType": "StructuredDocumentation",
                "src": "202:278:0",
                "text": " @dev Implementation of the `IERC734` \"KeyHolder\" and the `IERC735` \"ClaimHolder\" interfaces\n into a common Identity Contract.\n This implementation has a separate contract were it declares all storage,\n allowing for it to be used as an upgradable logic contract."
              },
              "fullyImplemented": true,
              "id": 1301,
              "linearizedBaseContracts": [
                1301,
                1725,
                1630,
                1606,
                1498,
                1674,
                1712
              ],
              "name": "Identity",
              "nameLocation": "490:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 23,
                    "nodeType": "Block",
                    "src": "683:112:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 18,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 16,
                                "name": "_canInteract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "701:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 17,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "717:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "701:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e746572616374696e67207769746820746865206c69627261727920636f6e747261637420697320666f7262696464656e2e",
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "723:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3c5bfa18ac85c8d1f4d8c63a7d33e2c24b63b20654ca46146bece560cc5642df",
                                "typeString": "literal_string \"Interacting with the library contract is forbidden.\""
                              },
                              "value": "Interacting with the library contract is forbidden."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3c5bfa18ac85c8d1f4d8c63a7d33e2c24b63b20654ca46146bece560cc5642df",
                                "typeString": "literal_string \"Interacting with the library contract is forbidden.\""
                              }
                            ],
                            "id": 15,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "693:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "693:84:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "693:84:0"
                      },
                      {
                        "id": 22,
                        "nodeType": "PlaceholderStatement",
                        "src": "787:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 13,
                    "nodeType": "StructuredDocumentation",
                    "src": "537:116:0",
                    "text": " @notice Prevent any direct calls to the implementation contract (marked by _canInteract = false)."
                  },
                  "id": 24,
                  "name": "delegatedOnly",
                  "nameLocation": "667:13:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "680:2:0"
                  },
                  "src": "658:137:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 50,
                    "nodeType": "Block",
                    "src": "919:180:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 45,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 34,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 28,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "937:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 29,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "941:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "937:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 32,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "959:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Identity_$1301",
                                        "typeString": "contract Identity"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Identity_$1301",
                                        "typeString": "contract Identity"
                                      }
                                    ],
                                    "id": 31,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "951:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 30,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "951:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 33,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "951:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "937:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 39,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "1003:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 40,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1007:6:0",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1003:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 37,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "992:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 38,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "996:6:0",
                                          "memberName": "encode",
                                          "nodeType": "MemberAccess",
                                          "src": "992:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 41,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "992:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 36,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "982:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 42,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "982:33:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 43,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1017:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 35,
                                  "name": "keyHasPurpose",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1093,
                                  "src": "968:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,uint256) view returns (bool)"
                                  }
                                },
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "968:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "937:82:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579",
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1030:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f6b3247450dc94fc6574303b07d6b95320782b0ece8a8d742601c64b874e995",
                                "typeString": "literal_string \"Permissions: Sender does not have management key\""
                              },
                              "value": "Permissions: Sender does not have management key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f6b3247450dc94fc6574303b07d6b95320782b0ece8a8d742601c64b874e995",
                                "typeString": "literal_string \"Permissions: Sender does not have management key\""
                              }
                            ],
                            "id": 27,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "929:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "929:152:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "929:152:0"
                      },
                      {
                        "id": 49,
                        "nodeType": "PlaceholderStatement",
                        "src": "1091:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:90:0",
                    "text": " @notice requires management key to call this function, or internal call"
                  },
                  "id": 51,
                  "name": "onlyManager",
                  "nameLocation": "905:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "916:2:0"
                  },
                  "src": "896:203:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 77,
                    "nodeType": "Block",
                    "src": "1219:182:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 61,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 55,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1237:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 56,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1241:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1237:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 59,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1259:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Identity_$1301",
                                        "typeString": "contract Identity"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Identity_$1301",
                                        "typeString": "contract Identity"
                                      }
                                    ],
                                    "id": 58,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1251:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 57,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1251:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 60,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1251:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1237:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 66,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "1303:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 67,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1307:6:0",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1303:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 64,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "1292:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 65,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "1296:6:0",
                                          "memberName": "encode",
                                          "nodeType": "MemberAccess",
                                          "src": "1292:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1292:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 63,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1282:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 69,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1282:33:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "33",
                                    "id": 70,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1317:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    }
                                  ],
                                  "id": 62,
                                  "name": "keyHasPurpose",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1093,
                                  "src": "1268:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,uint256) view returns (bool)"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1268:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1237:82:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766520636c61696d207369676e6572206b6579",
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1330:52:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b35df432d579b46a32d099f957987ceecae8614c49c5a100b4430714240d197",
                                "typeString": "literal_string \"Permissions: Sender does not have claim signer key\""
                              },
                              "value": "Permissions: Sender does not have claim signer key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b35df432d579b46a32d099f957987ceecae8614c49c5a100b4430714240d197",
                                "typeString": "literal_string \"Permissions: Sender does not have claim signer key\""
                              }
                            ],
                            "id": 54,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1229:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1229:154:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "1229:154:0"
                      },
                      {
                        "id": 76,
                        "nodeType": "PlaceholderStatement",
                        "src": "1393:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 52,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:85:0",
                    "text": " @notice requires claim key to call this function, or internal call"
                  },
                  "id": 78,
                  "name": "onlyClaimKey",
                  "nameLocation": "1204:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1216:2:0"
                  },
                  "src": "1195:206:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1754:229:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1769:11:0",
                          "subExpression": {
                            "id": 86,
                            "name": "_isLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "1770:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 107,
                          "nodeType": "Block",
                          "src": "1933:44:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 103,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1665,
                                  "src": "1947:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1962:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1947:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 106,
                              "nodeType": "ExpressionStatement",
                              "src": "1947:19:0"
                            }
                          ]
                        },
                        "id": 108,
                        "nodeType": "IfStatement",
                        "src": "1765:212:0",
                        "trueBody": {
                          "id": 102,
                          "nodeType": "Block",
                          "src": "1782:145:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 94,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 89,
                                      "name": "initialManagementKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81,
                                      "src": "1796:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 92,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1828:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 91,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1820:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 90,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1820:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 93,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1820:10:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "1796:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
                                    "id": 95,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1832:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
                                      "typeString": "literal_string \"invalid argument - zero address\""
                                    },
                                    "value": "invalid argument - zero address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
                                      "typeString": "literal_string \"invalid argument - zero address\""
                                    }
                                  ],
                                  "id": 88,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "1788:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 96,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1788:78:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 97,
                              "nodeType": "ExpressionStatement",
                              "src": "1788:78:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 99,
                                    "name": "initialManagementKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81,
                                    "src": "1895:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 98,
                                  "name": "__Identity_init",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1278,
                                  "src": "1879:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1879:37:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 101,
                              "nodeType": "ExpressionStatement",
                              "src": "1879:37:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "1407:283:0",
                    "text": " @notice constructor of the Identity contract\n @param initialManagementKey the address of the management key at deployment\n @param _isLibrary boolean value stating if the contract is library or not\n calls __Identity_init if contract is not library"
                  },
                  "id": 110,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "initialManagementKey",
                        "nameLocation": "1715:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 110,
                        "src": "1707:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1707:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "_isLibrary",
                        "nameLocation": "1742:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 110,
                        "src": "1737:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1737:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1706:47:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1754:0:0"
                  },
                  "scope": 1301,
                  "src": "1695:288:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "2294:142:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 117,
                                "name": "initialManagementKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "2312:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2344:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2336:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 118,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2336:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2336:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2312:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2348:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
                                "typeString": "literal_string \"invalid argument - zero address\""
                              },
                              "value": "invalid argument - zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
                                "typeString": "literal_string \"invalid argument - zero address\""
                              }
                            ],
                            "id": 116,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2304:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2304:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2304:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 127,
                              "name": "initialManagementKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2408:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 126,
                            "name": "__Identity_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "2392:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2392:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "2392:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 111,
                    "nodeType": "StructuredDocumentation",
                    "src": "1989:241:0",
                    "text": " @notice When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\n @param initialManagementKey The ethereum address to be set as the management key of the ONCHAINID."
                  },
                  "functionSelector": "c4d66de8",
                  "id": 131,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2244:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "initialManagementKey",
                        "nameLocation": "2263:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "2255:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2255:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2254:30:0"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2294:0:0"
                  },
                  "scope": 1301,
                  "src": "2235:201:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1456
                  ],
                  "body": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "3220:587:0",
                    "statements": [
                      {
                        "assignments": [
                          147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 147,
                            "mutability": "mutable",
                            "name": "_executionId",
                            "nameLocation": "3238:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 224,
                            "src": "3230:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 146,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3230:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 149,
                        "initialValue": {
                          "id": 148,
                          "name": "_executionNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1637,
                          "src": "3253:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3230:38:0"
                      },
                      {
                        "expression": {
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 150,
                                "name": "_executions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "3278:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                  "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                }
                              },
                              "id": 152,
                              "indexExpression": {
                                "id": 151,
                                "name": "_executionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "3290:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3278:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                "typeString": "struct Structs.Execution storage ref"
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3304:2:0",
                            "memberName": "to",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1688,
                            "src": "3278:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 154,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "3309:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3278:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "3278:34:0"
                      },
                      {
                        "expression": {
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 157,
                                "name": "_executions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "3322:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                  "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                }
                              },
                              "id": 159,
                              "indexExpression": {
                                "id": 158,
                                "name": "_executionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "3334:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3322:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                "typeString": "struct Structs.Execution storage ref"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3348:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1690,
                            "src": "3322:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 161,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "3356:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3322:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 163,
                        "nodeType": "ExpressionStatement",
                        "src": "3322:40:0"
                      },
                      {
                        "expression": {
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 164,
                                "name": "_executions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "3372:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                  "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                }
                              },
                              "id": 166,
                              "indexExpression": {
                                "id": 165,
                                "name": "_executionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "3384:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3372:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                "typeString": "struct Structs.Execution storage ref"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3398:4:0",
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1692,
                            "src": "3372:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 168,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "3405:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "3372:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "3372:38:0"
                      },
                      {
                        "expression": {
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3420:17:0",
                          "subExpression": {
                            "id": 171,
                            "name": "_executionNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "3420:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "3420:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 175,
                              "name": "_executionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "3472:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 176,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "3486:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 177,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "3491:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 178,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "3499:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 174,
                            "name": "ExecutionRequested",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "3453:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,address,uint256,bytes memory)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3453:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 180,
                        "nodeType": "EmitStatement",
                        "src": "3448:57:0"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 185,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3555:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3559:6:0",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3555:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 183,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "3544:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3548:6:0",
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "3544:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3544:22:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 182,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "3534:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3534:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3569:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 181,
                            "name": "keyHasPurpose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "3520:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view returns (bool)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3520:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 197,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "3643:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 200,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3658:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Identity_$1301",
                                      "typeString": "contract Identity"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Identity_$1301",
                                      "typeString": "contract Identity"
                                    }
                                  ],
                                  "id": 199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3650:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 198,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3650:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3650:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3643:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 207,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "3702:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 208,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3706:6:0",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3702:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 205,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "3691:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 206,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "3695:6:0",
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "3691:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 209,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3691:22:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 204,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "3681:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3681:33:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "hexValue": "32",
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3716:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "id": 203,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "3667:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3667:51:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3643:75:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 220,
                          "nodeType": "IfStatement",
                          "src": "3639:132:0",
                          "trueBody": {
                            "id": 219,
                            "nodeType": "Block",
                            "src": "3719:52:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 215,
                                      "name": "_executionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 147,
                                      "src": "3741:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 216,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3755:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 214,
                                    "name": "approve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 575,
                                    "src": "3733:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                      "typeString": "function (uint256,bool) returns (bool)"
                                    }
                                  },
                                  "id": 217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3733:27:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 218,
                                "nodeType": "ExpressionStatement",
                                "src": "3733:27:0"
                              }
                            ]
                          }
                        },
                        "id": 221,
                        "nodeType": "IfStatement",
                        "src": "3516:255:0",
                        "trueBody": {
                          "id": 196,
                          "nodeType": "Block",
                          "src": "3573:52:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 192,
                                    "name": "_executionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 147,
                                    "src": "3595:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 193,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3609:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 191,
                                  "name": "approve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 575,
                                  "src": "3587:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                    "typeString": "function (uint256,bool) returns (bool)"
                                  }
                                },
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3587:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 195,
                              "nodeType": "ExpressionStatement",
                              "src": "3587:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 222,
                          "name": "_executionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "3788:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 145,
                        "id": 223,
                        "nodeType": "Return",
                        "src": "3781:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 132,
                    "nodeType": "StructuredDocumentation",
                    "src": "2442:613:0",
                    "text": " @dev See {IERC734-execute}.\n @notice Passes an execution instruction to the keymanager.\n If the sender is an ACTION key and the destination address is not the identity contract itself, then the\n execution is immediately approved and performed.\n If the destination address is the identity itself, then the execution would be performed immediately only if\n the sender is a MANAGEMENT key.\n Otherwise the execution request must be approved via the `approve` method.\n @return executionId to use in the approve function, to approve or reject this execution."
                  },
                  "functionSelector": "b61d27f6",
                  "id": 225,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 141,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 140,
                        "name": "delegatedOnly",
                        "nameLocations": [
                          "3143:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "3143:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3143:13:0"
                    }
                  ],
                  "name": "execute",
                  "nameLocation": "3069:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 142,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3161:8:0"
                  },
                  "parameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "3085:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "3077:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3077:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "3098:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "3090:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3090:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "3119:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "3106:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3106:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3076:49:0"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "executionId",
                        "nameLocation": "3203:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "3195:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3195:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3194:21:0"
                  },
                  "scope": 1301,
                  "src": "3060:747:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1469
                  ],
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "4408:84:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 239,
                                  "name": "_keys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "4426:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                  }
                                },
                                "id": 241,
                                "indexExpression": {
                                  "id": 240,
                                  "name": "_key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "4432:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4426:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$1685_storage",
                                  "typeString": "struct Structs.Key storage ref"
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4438:8:0",
                              "memberName": "purposes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1680,
                              "src": "4426:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 243,
                                  "name": "_keys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "4448:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                  }
                                },
                                "id": 245,
                                "indexExpression": {
                                  "id": 244,
                                  "name": "_key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "4454:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4448:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$1685_storage",
                                  "typeString": "struct Structs.Key storage ref"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4460:7:0",
                              "memberName": "keyType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1682,
                              "src": "4448:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 247,
                                  "name": "_keys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "4469:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                  }
                                },
                                "id": 249,
                                "indexExpression": {
                                  "id": 248,
                                  "name": "_key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "4475:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4469:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$1685_storage",
                                  "typeString": "struct Structs.Key storage ref"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4481:3:0",
                              "memberName": "key",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1684,
                              "src": "4469:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 251,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4425:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_storage_$_t_uint256_$_t_bytes32_$",
                            "typeString": "tuple(uint256[] storage ref,uint256,bytes32)"
                          }
                        },
                        "functionReturnParameters": 238,
                        "id": 252,
                        "nodeType": "Return",
                        "src": "4418:67:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 226,
                    "nodeType": "StructuredDocumentation",
                    "src": "3813:452:0",
                    "text": " @dev See {IERC734-getKey}.\n @notice Implementation of the getKey function from the ERC-734 standard\n @param _key The public key.  for non-hex and long keys, its the Keccak256 hash of the key\n @return purposes Returns the full key data, if present in the identity.\n @return keyType Returns the full key data, if present in the identity.\n @return key Returns the full key data, if present in the identity."
                  },
                  "functionSelector": "12aaac70",
                  "id": 254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKey",
                  "nameLocation": "4279:6:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 230,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4317:8:0"
                  },
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "4294:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "4286:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4286:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4285:14:0"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "purposes",
                        "nameLocation": "4364:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "4347:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 231,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4347:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 232,
                          "nodeType": "ArrayTypeName",
                          "src": "4347:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "keyType",
                        "nameLocation": "4382:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "4374:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "key",
                        "nameLocation": "4399:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "4391:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4346:57:0"
                  },
                  "scope": 1301,
                  "src": "4270:222:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1478
                  ],
                  "body": {
                    "id": 270,
                    "nodeType": "Block",
                    "src": "4874:46:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 264,
                                  "name": "_keys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "4892:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                  }
                                },
                                "id": 266,
                                "indexExpression": {
                                  "id": 265,
                                  "name": "_key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 257,
                                  "src": "4898:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4892:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$1685_storage",
                                  "typeString": "struct Structs.Key storage ref"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4904:8:0",
                              "memberName": "purposes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1680,
                              "src": "4892:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            }
                          ],
                          "id": 268,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4891:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 263,
                        "id": 269,
                        "nodeType": "Return",
                        "src": "4884:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "4498:254:0",
                    "text": " @dev See {IERC734-getKeyPurposes}.\n @notice gets the purposes of a key\n @param _key The public key.  for non-hex and long keys, its the Keccak256 hash of the key\n @return _purposes Returns the purposes of the specified key"
                  },
                  "functionSelector": "fb307b34",
                  "id": 271,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKeyPurposes",
                  "nameLocation": "4766:14:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 259,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4812:8:0"
                  },
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "4789:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "4781:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4781:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4780:14:0"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "_purposes",
                        "nameLocation": "4859:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "4842:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 260,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4842:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 261,
                          "nodeType": "ArrayTypeName",
                          "src": "4842:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4841:28:0"
                  },
                  "scope": 1301,
                  "src": "4757:163:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1487
                  ],
                  "body": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "5405:48:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 281,
                            "name": "_keysByPurpose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1647,
                            "src": "5422:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                              "typeString": "mapping(uint256 => bytes32[] storage ref)"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "id": 282,
                            "name": "_purpose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "5437:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5422:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "functionReturnParameters": 280,
                        "id": 284,
                        "nodeType": "Return",
                        "src": "5415:31:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "4926:356:0",
                    "text": " @dev See {IERC734-getKeysByPurpose}.\n @notice gets all the keys with a specific purpose from an identity\n @param _purpose a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\n @return keys Returns an array of public key bytes32 hold by this identity and having the specified purpose"
                  },
                  "functionSelector": "9010f726",
                  "id": 286,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKeysByPurpose",
                  "nameLocation": "5296:16:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 276,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5348:8:0"
                  },
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "5321:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "5313:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5313:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5312:18:0"
                  },
                  "returnParameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "keys",
                        "nameLocation": "5395:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "5378:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 277,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5378:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 278,
                          "nodeType": "ArrayTypeName",
                          "src": "5378:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5377:23:0"
                  },
                  "scope": 1301,
                  "src": "5287:166:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1605
                  ],
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "5943:46:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 296,
                            "name": "_claimsByTopic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "5960:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                              "typeString": "mapping(uint256 => bytes32[] storage ref)"
                            }
                          },
                          "id": 298,
                          "indexExpression": {
                            "id": 297,
                            "name": "_topic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "5975:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5960:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        "functionReturnParameters": 295,
                        "id": 299,
                        "nodeType": "Return",
                        "src": "5953:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 287,
                    "nodeType": "StructuredDocumentation",
                    "src": "5459:357:0",
                    "text": " @dev See {IERC735-getClaimIdsByTopic}.\n @notice Implementation of the getClaimIdsByTopic function from the ERC-735 standard.\n used to get all the claims from the specified topic\n @param _topic The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\n @return claimIds Returns an array of claim IDs by topic."
                  },
                  "functionSelector": "80e9e9e1",
                  "id": 301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimIdsByTopic",
                  "nameLocation": "5830:18:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 291,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5882:8:0"
                  },
                  "parameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "_topic",
                        "nameLocation": "5857:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "5849:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5849:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5848:16:0"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "claimIds",
                        "nameLocation": "5929:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "5912:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 292,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5912:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 293,
                          "nodeType": "ArrayTypeName",
                          "src": "5912:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5911:27:0"
                  },
                  "scope": 1301,
                  "src": "5821:168:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1424
                  ],
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "7214:728:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 318,
                                "name": "_keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "7228:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                }
                              },
                              "id": 320,
                              "indexExpression": {
                                "id": 319,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "7234:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7228:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_storage",
                                "typeString": "struct Structs.Key storage ref"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7240:3:0",
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1684,
                            "src": "7228:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 322,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "7247:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "7228:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 393,
                          "nodeType": "Block",
                          "src": "7686:135:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 371,
                                      "name": "_keys",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1642,
                                      "src": "7700:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                        "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                      }
                                    },
                                    "id": 373,
                                    "indexExpression": {
                                      "id": 372,
                                      "name": "_key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 304,
                                      "src": "7706:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7700:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$1685_storage",
                                      "typeString": "struct Structs.Key storage ref"
                                    }
                                  },
                                  "id": 374,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7712:3:0",
                                  "memberName": "key",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1684,
                                  "src": "7700:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 375,
                                  "name": "_key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 304,
                                  "src": "7718:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "7700:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 377,
                              "nodeType": "ExpressionStatement",
                              "src": "7700:22:0"
                            },
                            {
                              "expression": {
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 378,
                                      "name": "_keys",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1642,
                                      "src": "7736:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                        "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                      }
                                    },
                                    "id": 380,
                                    "indexExpression": {
                                      "id": 379,
                                      "name": "_key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 304,
                                      "src": "7742:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7736:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$1685_storage",
                                      "typeString": "struct Structs.Key storage ref"
                                    }
                                  },
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7748:8:0",
                                  "memberName": "purposes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1680,
                                  "src": "7736:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "id": 382,
                                      "name": "_purpose",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 306,
                                      "src": "7760:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 383,
                                  "isConstant": false,
                                  "isInlineArray": true,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7759:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                                    "typeString": "uint256[1] memory"
                                  }
                                },
                                "src": "7736:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 385,
                              "nodeType": "ExpressionStatement",
                              "src": "7736:33:0"
                            },
                            {
                              "expression": {
                                "id": 391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 386,
                                      "name": "_keys",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1642,
                                      "src": "7783:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                        "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                      }
                                    },
                                    "id": 388,
                                    "indexExpression": {
                                      "id": 387,
                                      "name": "_key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 304,
                                      "src": "7789:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7783:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$1685_storage",
                                      "typeString": "struct Structs.Key storage ref"
                                    }
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7795:7:0",
                                  "memberName": "keyType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1682,
                                  "src": "7783:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 390,
                                  "name": "_type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "7805:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7783:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 392,
                              "nodeType": "ExpressionStatement",
                              "src": "7783:27:0"
                            }
                          ]
                        },
                        "id": 394,
                        "nodeType": "IfStatement",
                        "src": "7224:597:0",
                        "trueBody": {
                          "id": 370,
                          "nodeType": "Block",
                          "src": "7253:427:0",
                          "statements": [
                            {
                              "assignments": [
                                328
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 328,
                                  "mutability": "mutable",
                                  "name": "_purposes",
                                  "nameLocation": "7284:9:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 370,
                                  "src": "7267:26:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 326,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7267:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 327,
                                    "nodeType": "ArrayTypeName",
                                    "src": "7267:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 333,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 329,
                                    "name": "_keys",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1642,
                                    "src": "7296:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                      "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                    }
                                  },
                                  "id": 331,
                                  "indexExpression": {
                                    "id": 330,
                                    "name": "_key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 304,
                                    "src": "7302:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7296:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Key_$1685_storage",
                                    "typeString": "struct Structs.Key storage ref"
                                  }
                                },
                                "id": 332,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7308:8:0",
                                "memberName": "purposes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1680,
                                "src": "7296:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7267:49:0"
                            },
                            {
                              "body": {
                                "id": 360,
                                "nodeType": "Block",
                                "src": "7416:204:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      346
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 346,
                                        "mutability": "mutable",
                                        "name": "purpose",
                                        "nameLocation": "7442:7:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 360,
                                        "src": "7434:15:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 345,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7434:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 350,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 347,
                                        "name": "_purposes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 328,
                                        "src": "7452:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 349,
                                      "indexExpression": {
                                        "id": 348,
                                        "name": "keyPurposeIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 335,
                                        "src": "7462:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7452:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "7434:44:0"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 351,
                                        "name": "purpose",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 346,
                                        "src": "7501:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 352,
                                        "name": "_purpose",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 306,
                                        "src": "7512:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7501:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 359,
                                    "nodeType": "IfStatement",
                                    "src": "7497:109:0",
                                    "trueBody": {
                                      "id": 358,
                                      "nodeType": "Block",
                                      "src": "7522:84:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "hexValue": "436f6e666c6963743a204b657920616c72656164792068617320707572706f7365",
                                                "id": 355,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7551:35:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_ced1bafc369b7e2b0ca5f6ed9c6c1eb753593d516580b4f3f74fc55e230be91e",
                                                  "typeString": "literal_string \"Conflict: Key already has purpose\""
                                                },
                                                "value": "Conflict: Key already has purpose"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_ced1bafc369b7e2b0ca5f6ed9c6c1eb753593d516580b4f3f74fc55e230be91e",
                                                  "typeString": "literal_string \"Conflict: Key already has purpose\""
                                                }
                                              ],
                                              "id": 354,
                                              "name": "revert",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                -19,
                                                -19
                                              ],
                                              "referencedDeclaration": -19,
                                              "src": "7544:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) pure"
                                              }
                                            },
                                            "id": 356,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7544:43:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 357,
                                          "nodeType": "ExpressionStatement",
                                          "src": "7544:43:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 338,
                                  "name": "keyPurposeIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "7361:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 339,
                                    "name": "_purposes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 328,
                                    "src": "7379:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7389:6:0",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7379:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7361:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 361,
                              "initializationExpression": {
                                "assignments": [
                                  335
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 335,
                                    "mutability": "mutable",
                                    "name": "keyPurposeIndex",
                                    "nameLocation": "7340:15:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 361,
                                    "src": "7335:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 334,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7335:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 337,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7358:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "7335:24:0"
                              },
                              "isSimpleCounterLoop": true,
                              "loopExpression": {
                                "expression": {
                                  "id": 343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "7397:17:0",
                                  "subExpression": {
                                    "id": 342,
                                    "name": "keyPurposeIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 335,
                                    "src": "7397:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 344,
                                "nodeType": "ExpressionStatement",
                                "src": "7397:17:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "7330:290:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 367,
                                    "name": "_purpose",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 306,
                                    "src": "7660:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 362,
                                        "name": "_keys",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1642,
                                        "src": "7634:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                          "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                        }
                                      },
                                      "id": 364,
                                      "indexExpression": {
                                        "id": 363,
                                        "name": "_key",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 304,
                                        "src": "7640:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7634:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Key_$1685_storage",
                                        "typeString": "struct Structs.Key storage ref"
                                      }
                                    },
                                    "id": 365,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7646:8:0",
                                    "memberName": "purposes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1680,
                                    "src": "7634:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7655:4:0",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "7634:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer,uint256)"
                                  }
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7634:35:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 369,
                              "nodeType": "ExpressionStatement",
                              "src": "7634:35:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 399,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "7861:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 395,
                                "name": "_keysByPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "7831:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 397,
                              "indexExpression": {
                                "id": 396,
                                "name": "_purpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 306,
                                "src": "7846:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7831:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7856:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7831:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer,bytes32)"
                            }
                          },
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7831:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 401,
                        "nodeType": "ExpressionStatement",
                        "src": "7831:35:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 403,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "7891:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 404,
                              "name": "_purpose",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "7897:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 405,
                              "name": "_type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "7907:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 402,
                            "name": "KeyAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "7882:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256)"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7882:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 407,
                        "nodeType": "EmitStatement",
                        "src": "7877:36:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 317,
                        "id": 409,
                        "nodeType": "Return",
                        "src": "7924:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 302,
                    "nodeType": "StructuredDocumentation",
                    "src": "5995:1062:0",
                    "text": " @notice implementation of the addKey function of the ERC-734 standard\n Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes:\n 1: MANAGEMENT keys, which can manage the identity\n 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.)\n 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable.\n 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims.\n MUST only be done by keys of purpose 1, or the identity itself.\n If its the identity itself, the approval process will determine its approval.\n @param _key keccak256 representation of an ethereum address\n @param _type type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\n @param _purpose a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\n @return success Returns TRUE if the addition was successful and FALSE if not"
                  },
                  "functionSelector": "1d381240",
                  "id": 411,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 311,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 310,
                        "name": "delegatedOnly",
                        "nameLocations": [
                          "7140:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "7140:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7140:13:0"
                    },
                    {
                      "id": 313,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 312,
                        "name": "onlyManager",
                        "nameLocations": [
                          "7158:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51,
                        "src": "7158:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7158:11:0"
                    }
                  ],
                  "name": "addKey",
                  "nameLocation": "7071:6:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 314,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7174:8:0"
                  },
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "7086:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "7078:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7078:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "7100:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "7092:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7092:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "_type",
                        "nameLocation": "7118:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "7110:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7110:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7077:47:0"
                  },
                  "returnParameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "7201:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "7196:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7196:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7195:14:0"
                  },
                  "scope": 1301,
                  "src": "7062:880:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1434
                  ],
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "8499:1442:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 425,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 414,
                                "src": "8517:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 426,
                                "name": "_executionNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1637,
                                "src": "8523:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8517:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657865637574696f6e",
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8540:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85cd2d081d7959c57a96f49baa9fa739dfbf7e1912aade9eb40af14280ad7541",
                                "typeString": "literal_string \"Cannot approve a non-existing execution\""
                              },
                              "value": "Cannot approve a non-existing execution"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_85cd2d081d7959c57a96f49baa9fa739dfbf7e1912aade9eb40af14280ad7541",
                                "typeString": "literal_string \"Cannot approve a non-existing execution\""
                              }
                            ],
                            "id": 424,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8509:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8509:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "8509:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "8600:26:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 432,
                                    "name": "_executions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1652,
                                    "src": "8601:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                      "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                    }
                                  },
                                  "id": 434,
                                  "indexExpression": {
                                    "id": 433,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 414,
                                    "src": "8613:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8601:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                    "typeString": "struct Structs.Execution storage ref"
                                  }
                                },
                                "id": 435,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8618:8:0",
                                "memberName": "executed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1696,
                                "src": "8601:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265717565737420616c7265616479206578656375746564",
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8628:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc19110080635aec99dc557ad4811906a7652ab8b55ee08c9da40da18655b60f",
                                "typeString": "literal_string \"Request already executed\""
                              },
                              "value": "Request already executed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc19110080635aec99dc557ad4811906a7652ab8b55ee08c9da40da18655b60f",
                                "typeString": "literal_string \"Request already executed\""
                              }
                            ],
                            "id": 431,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8592:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8592:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "ExpressionStatement",
                        "src": "8592:63:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 440,
                                "name": "_executions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "8669:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                  "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                }
                              },
                              "id": 442,
                              "indexExpression": {
                                "id": 441,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 414,
                                "src": "8681:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8669:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                "typeString": "struct Structs.Execution storage ref"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8686:2:0",
                            "memberName": "to",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1688,
                            "src": "8669:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 446,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8700:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Identity_$1301",
                                  "typeString": "contract Identity"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Identity_$1301",
                                  "typeString": "contract Identity"
                                }
                              ],
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8692:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 444,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8692:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8692:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8669:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 478,
                          "nodeType": "Block",
                          "src": "8845:120:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 469,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "8902:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 470,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "8906:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "8902:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "id": 467,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "8891:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 468,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "8895:6:0",
                                              "memberName": "encode",
                                              "nodeType": "MemberAccess",
                                              "src": "8891:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 471,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8891:22:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 466,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "8881:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 472,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8881:33:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "hexValue": "32",
                                        "id": 473,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8916:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        }
                                      ],
                                      "id": 465,
                                      "name": "keyHasPurpose",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1093,
                                      "src": "8867:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (bytes32,uint256) view returns (bool)"
                                      }
                                    },
                                    "id": 474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8867:51:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "53656e64657220646f6573206e6f74206861766520616374696f6e206b6579",
                                    "id": 475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8920:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2239811702909a77ce5c35bc6905c72e29655cd69df6a5b32bf74fddbc156a6c",
                                      "typeString": "literal_string \"Sender does not have action key\""
                                    },
                                    "value": "Sender does not have action key"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2239811702909a77ce5c35bc6905c72e29655cd69df6a5b32bf74fddbc156a6c",
                                      "typeString": "literal_string \"Sender does not have action key\""
                                    }
                                  ],
                                  "id": 464,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8859:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8859:95:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 477,
                              "nodeType": "ExpressionStatement",
                              "src": "8859:95:0"
                            }
                          ]
                        },
                        "id": 479,
                        "nodeType": "IfStatement",
                        "src": "8666:299:0",
                        "trueBody": {
                          "id": 463,
                          "nodeType": "Block",
                          "src": "8707:124:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 454,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "8764:3:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 455,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "8768:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "8764:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "id": 452,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "8753:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 453,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "8757:6:0",
                                              "memberName": "encode",
                                              "nodeType": "MemberAccess",
                                              "src": "8753:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 456,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8753:22:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 451,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "8743:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 457,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8743:33:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "hexValue": "31",
                                        "id": 458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8778:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "id": 450,
                                      "name": "keyHasPurpose",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1093,
                                      "src": "8729:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (bytes32,uint256) view returns (bool)"
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8729:51:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579",
                                    "id": 460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8782:37:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                      "typeString": "literal_string \"Sender does not have management key\""
                                    },
                                    "value": "Sender does not have management key"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                      "typeString": "literal_string \"Sender does not have management key\""
                                    }
                                  ],
                                  "id": 449,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8721:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8721:99:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 462,
                              "nodeType": "ExpressionStatement",
                              "src": "8721:99:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 481,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "8989:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 482,
                              "name": "_approve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "8994:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 480,
                            "name": "Approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "8980:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,bool)"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8980:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "EmitStatement",
                        "src": "8975:28:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 485,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "9018:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9030:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9018:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 570,
                          "nodeType": "Block",
                          "src": "9855:58:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 563,
                                      "name": "_executions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1652,
                                      "src": "9869:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                        "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                      }
                                    },
                                    "id": 565,
                                    "indexExpression": {
                                      "id": 564,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 414,
                                      "src": "9881:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9869:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                      "typeString": "struct Structs.Execution storage ref"
                                    }
                                  },
                                  "id": 566,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "9886:8:0",
                                  "memberName": "approved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1694,
                                  "src": "9869:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9897:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "9869:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 569,
                              "nodeType": "ExpressionStatement",
                              "src": "9869:33:0"
                            }
                          ]
                        },
                        "id": 571,
                        "nodeType": "IfStatement",
                        "src": "9014:899:0",
                        "trueBody": {
                          "id": 562,
                          "nodeType": "Block",
                          "src": "9036:813:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 488,
                                      "name": "_executions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1652,
                                      "src": "9050:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                        "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                      }
                                    },
                                    "id": 490,
                                    "indexExpression": {
                                      "id": 489,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 414,
                                      "src": "9062:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9050:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                      "typeString": "struct Structs.Execution storage ref"
                                    }
                                  },
                                  "id": 491,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "9067:8:0",
                                  "memberName": "approved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1694,
                                  "src": "9050:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9078:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9050:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 494,
                              "nodeType": "ExpressionStatement",
                              "src": "9050:32:0"
                            },
                            {
                              "expression": {
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 495,
                                      "name": "success",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 422,
                                      "src": "9161:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 496,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "9160:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$__$",
                                    "typeString": "tuple(bool,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 508,
                                          "name": "_executions",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1652,
                                          "src": "9230:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                            "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                          }
                                        },
                                        "id": 510,
                                        "indexExpression": {
                                          "id": 509,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 414,
                                          "src": "9242:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9230:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                          "typeString": "struct Structs.Execution storage ref"
                                        }
                                      },
                                      "id": 511,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9247:4:0",
                                      "memberName": "data",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1692,
                                      "src": "9230:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage",
                                        "typeString": "bytes storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_storage",
                                        "typeString": "bytes storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_storage",
                                          "typeString": "bytes storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 497,
                                            "name": "_executions",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1652,
                                            "src": "9173:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                              "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                            }
                                          },
                                          "id": 499,
                                          "indexExpression": {
                                            "id": 498,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 414,
                                            "src": "9185:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9173:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                            "typeString": "struct Structs.Execution storage ref"
                                          }
                                        },
                                        "id": 500,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9190:2:0",
                                        "memberName": "to",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1688,
                                        "src": "9173:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 501,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9193:4:0",
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "9173:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "components": [
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 502,
                                                "name": "_executions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1652,
                                                "src": "9205:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                  "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                                }
                                              },
                                              "id": 504,
                                              "indexExpression": {
                                                "id": 503,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 414,
                                                "src": "9217:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "9205:16:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                                "typeString": "struct Structs.Execution storage ref"
                                              }
                                            },
                                            "id": 505,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "9222:5:0",
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1690,
                                            "src": "9205:22:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 506,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9204:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "9173:56:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 512,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9173:79:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "9160:92:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 514,
                              "nodeType": "ExpressionStatement",
                              "src": "9160:92:0"
                            },
                            {
                              "condition": {
                                "id": 515,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 422,
                                "src": "9271:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 560,
                                "nodeType": "Block",
                                "src": "9584:255:0",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 543,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 414,
                                          "src": "9644:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 544,
                                              "name": "_executions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1652,
                                              "src": "9669:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                              }
                                            },
                                            "id": 546,
                                            "indexExpression": {
                                              "id": 545,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "9681:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9669:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                              "typeString": "struct Structs.Execution storage ref"
                                            }
                                          },
                                          "id": 547,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9686:2:0",
                                          "memberName": "to",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1688,
                                          "src": "9669:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 548,
                                              "name": "_executions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1652,
                                              "src": "9710:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                              }
                                            },
                                            "id": 550,
                                            "indexExpression": {
                                              "id": 549,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "9722:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9710:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                              "typeString": "struct Structs.Execution storage ref"
                                            }
                                          },
                                          "id": 551,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9727:5:0",
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1690,
                                          "src": "9710:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 552,
                                              "name": "_executions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1652,
                                              "src": "9754:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                              }
                                            },
                                            "id": 554,
                                            "indexExpression": {
                                              "id": 553,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "9766:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9754:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                              "typeString": "struct Structs.Execution storage ref"
                                            }
                                          },
                                          "id": 555,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9771:4:0",
                                          "memberName": "data",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1692,
                                          "src": "9754:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                          }
                                        ],
                                        "id": 542,
                                        "name": "ExecutionFailed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1394,
                                        "src": "9607:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (uint256,address,uint256,bytes memory)"
                                        }
                                      },
                                      "id": 556,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9607:186:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 557,
                                    "nodeType": "EmitStatement",
                                    "src": "9602:191:0"
                                  },
                                  {
                                    "expression": {
                                      "hexValue": "66616c7365",
                                      "id": 558,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9819:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "functionReturnParameters": 423,
                                    "id": 559,
                                    "nodeType": "Return",
                                    "src": "9812:12:0"
                                  }
                                ]
                              },
                              "id": 561,
                              "nodeType": "IfStatement",
                              "src": "9267:572:0",
                              "trueBody": {
                                "id": 541,
                                "nodeType": "Block",
                                "src": "9280:298:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 521,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 516,
                                            "name": "_executions",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1652,
                                            "src": "9298:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                              "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                            }
                                          },
                                          "id": 518,
                                          "indexExpression": {
                                            "id": 517,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 414,
                                            "src": "9310:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9298:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                            "typeString": "struct Structs.Execution storage ref"
                                          }
                                        },
                                        "id": 519,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "9315:8:0",
                                        "memberName": "executed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1696,
                                        "src": "9298:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 520,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9326:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "9298:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 522,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9298:32:0"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 524,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 414,
                                          "src": "9384:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 525,
                                              "name": "_executions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1652,
                                              "src": "9409:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                              }
                                            },
                                            "id": 527,
                                            "indexExpression": {
                                              "id": 526,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "9421:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9409:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                              "typeString": "struct Structs.Execution storage ref"
                                            }
                                          },
                                          "id": 528,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9426:2:0",
                                          "memberName": "to",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1688,
                                          "src": "9409:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 529,
                                              "name": "_executions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1652,
                                              "src": "9450:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                              }
                                            },
                                            "id": 531,
                                            "indexExpression": {
                                              "id": 530,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "9462:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9450:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                              "typeString": "struct Structs.Execution storage ref"
                                            }
                                          },
                                          "id": 532,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9467:5:0",
                                          "memberName": "value",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1690,
                                          "src": "9450:22:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 533,
                                              "name": "_executions",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1652,
                                              "src": "9494:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                                                "typeString": "mapping(uint256 => struct Structs.Execution storage ref)"
                                              }
                                            },
                                            "id": 535,
                                            "indexExpression": {
                                              "id": 534,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "9506:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9494:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Execution_$1697_storage",
                                              "typeString": "struct Structs.Execution storage ref"
                                            }
                                          },
                                          "id": 536,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9511:4:0",
                                          "memberName": "data",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1692,
                                          "src": "9494:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                          }
                                        ],
                                        "id": 523,
                                        "name": "Executed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1372,
                                        "src": "9354:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (uint256,address,uint256,bytes memory)"
                                        }
                                      },
                                      "id": 537,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9354:179:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 538,
                                    "nodeType": "EmitStatement",
                                    "src": "9349:184:0"
                                  },
                                  {
                                    "expression": {
                                      "hexValue": "74727565",
                                      "id": 539,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9559:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 423,
                                    "id": 540,
                                    "nodeType": "Return",
                                    "src": "9552:11:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9929:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 423,
                        "id": 573,
                        "nodeType": "Return",
                        "src": "9922:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 412,
                    "nodeType": "StructuredDocumentation",
                    "src": "7948:428:0",
                    "text": "  @dev See {IERC734-approve}.\n  @notice Approves an execution.\n  If the sender is an ACTION key and the destination address is not the identity contract itself, then the\n  approval is authorized and the operation would be performed.\n  If the destination address is the identity itself, then the execution would be authorized and performed only\n  if the sender is a MANAGEMENT key."
                  },
                  "functionSelector": "747442d3",
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 419,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 418,
                        "name": "delegatedOnly",
                        "nameLocations": [
                          "8441:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "8441:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8441:13:0"
                    }
                  ],
                  "name": "approve",
                  "nameLocation": "8390:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 420,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8459:8:0"
                  },
                  "parameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "8406:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "8398:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8398:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "_approve",
                        "nameLocation": "8416:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "8411:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8411:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8397:28:0"
                  },
                  "returnParameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 422,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "8486:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "8481:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 421,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8481:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8480:14:0"
                  },
                  "scope": 1301,
                  "src": "8381:1560:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1444
                  ],
                  "body": {
                    "id": 736,
                    "nodeType": "Block",
                    "src": "10183:1148:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 591,
                                    "name": "_keys",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1642,
                                    "src": "10201:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                      "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                    }
                                  },
                                  "id": 593,
                                  "indexExpression": {
                                    "id": 592,
                                    "name": "_key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 578,
                                    "src": "10207:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10201:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Key_$1685_storage",
                                    "typeString": "struct Structs.Key storage ref"
                                  }
                                },
                                "id": 594,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10213:3:0",
                                "memberName": "key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1684,
                                "src": "10201:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 595,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "10220:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "10201:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f6e4578697374696e673a204b65792069736e27742072656769737465726564",
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10226:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecf72bc49d7f73c31e2e6c0aa61a9da361706713b0b2d9f242245b62877b78d2",
                                "typeString": "literal_string \"NonExisting: Key isn't registered\""
                              },
                              "value": "NonExisting: Key isn't registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecf72bc49d7f73c31e2e6c0aa61a9da361706713b0b2d9f242245b62877b78d2",
                                "typeString": "literal_string \"NonExisting: Key isn't registered\""
                              }
                            ],
                            "id": 590,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10193:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10193:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 599,
                        "nodeType": "ExpressionStatement",
                        "src": "10193:69:0"
                      },
                      {
                        "assignments": [
                          604
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 604,
                            "mutability": "mutable",
                            "name": "_purposes",
                            "nameLocation": "10289:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "10272:26:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 602,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10272:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 603,
                              "nodeType": "ArrayTypeName",
                              "src": "10272:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 609,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 605,
                              "name": "_keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "10301:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                              }
                            },
                            "id": 607,
                            "indexExpression": {
                              "id": 606,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "10307:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10301:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$1685_storage",
                              "typeString": "struct Structs.Key storage ref"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10313:8:0",
                          "memberName": "purposes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1680,
                          "src": "10301:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10272:49:0"
                      },
                      {
                        "assignments": [
                          611
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 611,
                            "mutability": "mutable",
                            "name": "purposeIndex",
                            "nameLocation": "10337:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "10332:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 610,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10332:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 613,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10352:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10332:21:0"
                      },
                      {
                        "body": {
                          "id": 632,
                          "nodeType": "Block",
                          "src": "10407:176:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "10421:14:0",
                                "subExpression": {
                                  "id": 619,
                                  "name": "purposeIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 611,
                                  "src": "10421:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 621,
                              "nodeType": "ExpressionStatement",
                              "src": "10421:14:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 622,
                                  "name": "purposeIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 611,
                                  "src": "10454:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 623,
                                    "name": "_purposes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 604,
                                    "src": "10470:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10480:6:0",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "10470:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10454:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 631,
                              "nodeType": "IfStatement",
                              "src": "10450:123:0",
                              "trueBody": {
                                "id": 630,
                                "nodeType": "Block",
                                "src": "10488:85:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375636820707572706f7365",
                                          "id": 627,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10513:44:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5c6d7bd64c120db0a0dc884afccd0850100d55ba7968801315e930cfbbcdba6",
                                            "typeString": "literal_string \"NonExisting: Key doesn't have such purpose\""
                                          },
                                          "value": "NonExisting: Key doesn't have such purpose"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_c5c6d7bd64c120db0a0dc884afccd0850100d55ba7968801315e930cfbbcdba6",
                                            "typeString": "literal_string \"NonExisting: Key doesn't have such purpose\""
                                          }
                                        ],
                                        "id": 626,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "10506:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10506:52:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 629,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10506:52:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 614,
                              "name": "_purposes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "10370:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 616,
                            "indexExpression": {
                              "id": 615,
                              "name": "purposeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "10380:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10370:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 617,
                            "name": "_purpose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "10397:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10370:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 633,
                        "nodeType": "WhileStatement",
                        "src": "10363:220:0"
                      },
                      {
                        "expression": {
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 634,
                              "name": "_purposes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "10593:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 636,
                            "indexExpression": {
                              "id": 635,
                              "name": "purposeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "10603:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10593:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 637,
                              "name": "_purposes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "10619:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 642,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 638,
                                  "name": "_purposes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 604,
                                  "src": "10629:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10639:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10629:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10648:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "10629:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10619:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10593:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "10593:57:0"
                      },
                      {
                        "expression": {
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 645,
                                "name": "_keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "10660:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                }
                              },
                              "id": 647,
                              "indexExpression": {
                                "id": 646,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "10666:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10660:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_storage",
                                "typeString": "struct Structs.Key storage ref"
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10672:8:0",
                            "memberName": "purposes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1680,
                            "src": "10660:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 649,
                            "name": "_purposes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 604,
                            "src": "10683:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "10660:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 651,
                        "nodeType": "ExpressionStatement",
                        "src": "10660:32:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 652,
                                  "name": "_keys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "10702:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                  }
                                },
                                "id": 654,
                                "indexExpression": {
                                  "id": 653,
                                  "name": "_key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "10708:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10702:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$1685_storage",
                                  "typeString": "struct Structs.Key storage ref"
                                }
                              },
                              "id": 655,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10714:8:0",
                              "memberName": "purposes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1680,
                              "src": "10702:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10723:3:0",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "10702:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer)"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10702:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 658,
                        "nodeType": "ExpressionStatement",
                        "src": "10702:26:0"
                      },
                      {
                        "assignments": [
                          660
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 660,
                            "mutability": "mutable",
                            "name": "keyIndex",
                            "nameLocation": "10744:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "10739:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 659,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10739:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 662,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10755:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10739:17:0"
                      },
                      {
                        "assignments": [
                          664
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 664,
                            "mutability": "mutable",
                            "name": "arrayLength",
                            "nameLocation": "10771:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "10766:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 663,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10766:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 669,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 665,
                              "name": "_keysByPurpose",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1647,
                              "src": "10785:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                "typeString": "mapping(uint256 => bytes32[] storage ref)"
                              }
                            },
                            "id": 667,
                            "indexExpression": {
                              "id": 666,
                              "name": "_purpose",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "10800:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10785:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10810:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10785:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10766:50:0"
                      },
                      {
                        "body": {
                          "id": 686,
                          "nodeType": "Block",
                          "src": "10878:116:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "10892:10:0",
                                "subExpression": {
                                  "id": 677,
                                  "name": "keyIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 660,
                                  "src": "10892:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 679,
                              "nodeType": "ExpressionStatement",
                              "src": "10892:10:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 680,
                                  "name": "keyIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 660,
                                  "src": "10921:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 681,
                                  "name": "arrayLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 664,
                                  "src": "10933:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10921:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 685,
                              "nodeType": "IfStatement",
                              "src": "10917:67:0",
                              "trueBody": {
                                "id": 684,
                                "nodeType": "Block",
                                "src": "10946:38:0",
                                "statements": [
                                  {
                                    "id": 683,
                                    "nodeType": "Break",
                                    "src": "10964:5:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 670,
                                "name": "_keysByPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "10834:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 672,
                              "indexExpression": {
                                "id": 671,
                                "name": "_purpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "10849:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10834:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 674,
                            "indexExpression": {
                              "id": 673,
                              "name": "keyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "10859:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10834:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 675,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "10872:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10834:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 687,
                        "nodeType": "WhileStatement",
                        "src": "10827:167:0"
                      },
                      {
                        "expression": {
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 688,
                                "name": "_keysByPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "11004:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 691,
                              "indexExpression": {
                                "id": 689,
                                "name": "_purpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "11019:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11004:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 692,
                            "indexExpression": {
                              "id": 690,
                              "name": "keyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "11029:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11004:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 693,
                                "name": "_keysByPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "11041:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 695,
                              "indexExpression": {
                                "id": 694,
                                "name": "_purpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "11056:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11041:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 699,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 696,
                                "name": "arrayLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "11066:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11080:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "11066:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11041:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11004:78:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "11004:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 702,
                                "name": "_keysByPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "11092:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 704,
                              "indexExpression": {
                                "id": 703,
                                "name": "_purpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "11107:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11092:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11117:3:0",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "11092:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11092:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "11092:30:0"
                      },
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "mutability": "mutable",
                            "name": "keyType",
                            "nameLocation": "11138:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 736,
                            "src": "11133:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11133:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 714,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 710,
                              "name": "_keys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "11148:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                              }
                            },
                            "id": 712,
                            "indexExpression": {
                              "id": 711,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "11154:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11148:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$1685_storage",
                              "typeString": "struct Structs.Key storage ref"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11160:7:0",
                          "memberName": "keyType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1682,
                          "src": "11148:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11133:34:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 715,
                                "name": "_purposes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 604,
                                "src": "11182:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11192:6:0",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11182:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11201:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11182:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11206:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11182:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 727,
                        "nodeType": "IfStatement",
                        "src": "11178:74:0",
                        "trueBody": {
                          "id": 726,
                          "nodeType": "Block",
                          "src": "11209:43:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11223:18:0",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 721,
                                    "name": "_keys",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1642,
                                    "src": "11230:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                      "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                    }
                                  },
                                  "id": 723,
                                  "indexExpression": {
                                    "id": 722,
                                    "name": "_key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 578,
                                    "src": "11236:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11230:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Key_$1685_storage",
                                    "typeString": "struct Structs.Key storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 725,
                              "nodeType": "ExpressionStatement",
                              "src": "11223:18:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 729,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "11278:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 730,
                              "name": "_purpose",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "11284:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 731,
                              "name": "keyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "11294:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 728,
                            "name": "KeyRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "11267:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256)"
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11267:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 733,
                        "nodeType": "EmitStatement",
                        "src": "11262:40:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11320:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 589,
                        "id": 735,
                        "nodeType": "Return",
                        "src": "11313:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 576,
                    "nodeType": "StructuredDocumentation",
                    "src": "9947:91:0",
                    "text": " @dev See {IERC734-removeKey}.\n @notice Remove the purpose from a key."
                  },
                  "functionSelector": "53d413c5",
                  "id": 737,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 583,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 582,
                        "name": "delegatedOnly",
                        "nameLocations": [
                          "10109:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "10109:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10109:13:0"
                    },
                    {
                      "id": 585,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 584,
                        "name": "onlyManager",
                        "nameLocations": [
                          "10127:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51,
                        "src": "10127:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10127:11:0"
                    }
                  ],
                  "name": "removeKey",
                  "nameLocation": "10052:9:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 586,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "10143:8:0"
                  },
                  "parameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "10070:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 737,
                        "src": "10062:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10062:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "10084:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 737,
                        "src": "10076:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10076:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10061:32:0"
                  },
                  "returnParameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "10170:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 737,
                        "src": "10165:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10165:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10164:14:0"
                  },
                  "scope": 1301,
                  "src": "10043:1288:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1570
                  ],
                  "body": {
                    "id": 876,
                    "nodeType": "Block",
                    "src": "12760:848:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 760,
                            "name": "_issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 744,
                            "src": "12774:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 763,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12793:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Identity_$1301",
                                  "typeString": "contract Identity"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Identity_$1301",
                                  "typeString": "contract Identity"
                                }
                              ],
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12785:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 761,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12785:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12785:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12774:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 785,
                        "nodeType": "IfStatement",
                        "src": "12770:168:0",
                        "trueBody": {
                          "id": 784,
                          "nodeType": "Block",
                          "src": "12800:138:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 774,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "12875:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Identity_$1301",
                                                  "typeString": "contract Identity"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Identity_$1301",
                                                  "typeString": "contract Identity"
                                                }
                                              ],
                                              "id": 773,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "12867:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 772,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "12867:7:0",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 775,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "12867:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 771,
                                          "name": "IIdentity",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1630,
                                          "src": "12857:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IIdentity_$1630_$",
                                            "typeString": "type(contract IIdentity)"
                                          }
                                        },
                                        "id": 776,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12857:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IIdentity_$1630",
                                          "typeString": "contract IIdentity"
                                        }
                                      },
                                      {
                                        "id": 777,
                                        "name": "_topic",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 740,
                                        "src": "12883:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 778,
                                        "name": "_signature",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 746,
                                        "src": "12891:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "id": 779,
                                        "name": "_data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 748,
                                        "src": "12903:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IIdentity_$1630",
                                          "typeString": "contract IIdentity"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 768,
                                            "name": "_issuer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 744,
                                            "src": "12835:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 767,
                                          "name": "IClaimIssuer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1351,
                                          "src": "12822:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IClaimIssuer_$1351_$",
                                            "typeString": "type(contract IClaimIssuer)"
                                          }
                                        },
                                        "id": 769,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12822:21:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IClaimIssuer_$1351",
                                          "typeString": "contract IClaimIssuer"
                                        }
                                      },
                                      "id": 770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12844:12:0",
                                      "memberName": "isClaimValid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1350,
                                      "src": "12822:34:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_contract$_IIdentity_$1630_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                        "typeString": "function (contract IIdentity,uint256,bytes memory,bytes memory) view external returns (bool)"
                                      }
                                    },
                                    "id": 780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12822:87:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "696e76616c696420636c61696d",
                                    "id": 781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12911:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e9e226b41dd13e4bf485a8343776a4175fce41b57c826fba9a745a2aa2da8747",
                                      "typeString": "literal_string \"invalid claim\""
                                    },
                                    "value": "invalid claim"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e9e226b41dd13e4bf485a8343776a4175fce41b57c826fba9a745a2aa2da8747",
                                      "typeString": "literal_string \"invalid claim\""
                                    }
                                  ],
                                  "id": 766,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "12814:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12814:113:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 783,
                              "nodeType": "ExpressionStatement",
                              "src": "12814:113:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          787
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 787,
                            "mutability": "mutable",
                            "name": "claimId",
                            "nameLocation": "12956:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 876,
                            "src": "12948:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 786,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12948:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 795,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 791,
                                  "name": "_issuer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 744,
                                  "src": "12987:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 792,
                                  "name": "_topic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 740,
                                  "src": "12996:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 789,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "12976:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12980:6:0",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "12976:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12976:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 788,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "12966:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12966:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12948:56:0"
                      },
                      {
                        "expression": {
                          "id": 801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 796,
                                "name": "_claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "13014:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                }
                              },
                              "id": 798,
                              "indexExpression": {
                                "id": 797,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "13022:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13014:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                "typeString": "struct Structs.Claim storage ref"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13031:5:0",
                            "memberName": "topic",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1700,
                            "src": "13014:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 800,
                            "name": "_topic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "13039:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13014:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 802,
                        "nodeType": "ExpressionStatement",
                        "src": "13014:31:0"
                      },
                      {
                        "expression": {
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 803,
                                "name": "_claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "13055:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                }
                              },
                              "id": 805,
                              "indexExpression": {
                                "id": 804,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "13063:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13055:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                "typeString": "struct Structs.Claim storage ref"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13072:6:0",
                            "memberName": "scheme",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1702,
                            "src": "13055:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 807,
                            "name": "_scheme",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "13081:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13055:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 809,
                        "nodeType": "ExpressionStatement",
                        "src": "13055:33:0"
                      },
                      {
                        "expression": {
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 810,
                                "name": "_claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "13098:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                }
                              },
                              "id": 812,
                              "indexExpression": {
                                "id": 811,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "13106:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13098:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                "typeString": "struct Structs.Claim storage ref"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13115:9:0",
                            "memberName": "signature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1706,
                            "src": "13098:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 814,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "13127:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "13098:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "13098:39:0"
                      },
                      {
                        "expression": {
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 817,
                                "name": "_claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "13147:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                }
                              },
                              "id": 819,
                              "indexExpression": {
                                "id": 818,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "13155:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13147:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                "typeString": "struct Structs.Claim storage ref"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13164:4:0",
                            "memberName": "data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1708,
                            "src": "13147:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 821,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "13171:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "13147:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "13147:29:0"
                      },
                      {
                        "expression": {
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 824,
                                "name": "_claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "13186:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                }
                              },
                              "id": 826,
                              "indexExpression": {
                                "id": 825,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "13194:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13186:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                "typeString": "struct Structs.Claim storage ref"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13203:3:0",
                            "memberName": "uri",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1710,
                            "src": "13186:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 828,
                            "name": "_uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "13209:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "13186:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "13186:27:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 831,
                                "name": "_claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1657,
                                "src": "13228:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                }
                              },
                              "id": 833,
                              "indexExpression": {
                                "id": 832,
                                "name": "claimId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "13236:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13228:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                "typeString": "struct Structs.Claim storage ref"
                              }
                            },
                            "id": 834,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13245:6:0",
                            "memberName": "issuer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1704,
                            "src": "13228:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 835,
                            "name": "_issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 744,
                            "src": "13255:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13228:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 872,
                          "nodeType": "Block",
                          "src": "13476:102:0",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 863,
                                    "name": "claimId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "13508:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 864,
                                    "name": "_topic",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 740,
                                    "src": "13517:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 865,
                                    "name": "_scheme",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 742,
                                    "src": "13525:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 866,
                                    "name": "_issuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 744,
                                    "src": "13534:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 867,
                                    "name": "_signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 746,
                                    "src": "13543:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 868,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 748,
                                    "src": "13555:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 869,
                                    "name": "_uri",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 750,
                                    "src": "13562:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 862,
                                  "name": "ClaimChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1552,
                                  "src": "13495:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                                  }
                                },
                                "id": 870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13495:72:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 871,
                              "nodeType": "EmitStatement",
                              "src": "13490:77:0"
                            }
                          ]
                        },
                        "id": 873,
                        "nodeType": "IfStatement",
                        "src": "13224:354:0",
                        "trueBody": {
                          "id": 861,
                          "nodeType": "Block",
                          "src": "13264:198:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 841,
                                    "name": "claimId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "13306:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 837,
                                      "name": "_claimsByTopic",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1662,
                                      "src": "13278:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                        "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                      }
                                    },
                                    "id": 839,
                                    "indexExpression": {
                                      "id": 838,
                                      "name": "_topic",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 740,
                                      "src": "13293:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13278:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                      "typeString": "bytes32[] storage ref"
                                    }
                                  },
                                  "id": 840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13301:4:0",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "13278:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                                    "typeString": "function (bytes32[] storage pointer,bytes32)"
                                  }
                                },
                                "id": 842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13278:36:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 843,
                              "nodeType": "ExpressionStatement",
                              "src": "13278:36:0"
                            },
                            {
                              "expression": {
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 844,
                                      "name": "_claims",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1657,
                                      "src": "13328:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                        "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                      }
                                    },
                                    "id": 846,
                                    "indexExpression": {
                                      "id": 845,
                                      "name": "claimId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 787,
                                      "src": "13336:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13328:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                      "typeString": "struct Structs.Claim storage ref"
                                    }
                                  },
                                  "id": 847,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "13345:6:0",
                                  "memberName": "issuer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1704,
                                  "src": "13328:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 848,
                                  "name": "_issuer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 744,
                                  "src": "13354:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13328:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 850,
                              "nodeType": "ExpressionStatement",
                              "src": "13328:33:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 852,
                                    "name": "claimId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "13392:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 853,
                                    "name": "_topic",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 740,
                                    "src": "13401:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 854,
                                    "name": "_scheme",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 742,
                                    "src": "13409:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 855,
                                    "name": "_issuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 744,
                                    "src": "13418:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 856,
                                    "name": "_signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 746,
                                    "src": "13427:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 857,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 748,
                                    "src": "13439:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 858,
                                    "name": "_uri",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 750,
                                    "src": "13446:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "ClaimAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1518,
                                  "src": "13381:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                                  }
                                },
                                "id": 859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13381:70:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 860,
                              "nodeType": "EmitStatement",
                              "src": "13376:75:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 874,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "13594:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 759,
                        "id": 875,
                        "nodeType": "Return",
                        "src": "13587:14:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 738,
                    "nodeType": "StructuredDocumentation",
                    "src": "11337:1131:0",
                    "text": " @dev See {IERC735-addClaim}.\n @notice Implementation of the addClaim function from the ERC-735 standard\n  Require that the msg.sender has claim signer key.\n @param _topic The type of claim\n @param _scheme The scheme with which this claim SHOULD be verified or how it should be processed.\n @param _issuer The issuers identity contract address, or the address used to sign the above signature.\n @param _signature Signature which is the proof that the claim issuer issued a claim of topic for this identity.\n it MUST be a signed message of the following structure:\n keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\n @param _data The hash of the claim data, sitting in another\n location, a bit-mask, call data, or actual data based on the claim scheme.\n @param _uri The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\n @return claimRequestId Returns claimRequestId: COULD be\n send to the approve function, to approve or reject this claim.\n triggers ClaimAdded event."
                  },
                  "functionSelector": "b1a34e0d",
                  "id": 877,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 753,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 752,
                        "name": "delegatedOnly",
                        "nameLocations": [
                          "12675:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "12675:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12675:13:0"
                    },
                    {
                      "id": 755,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 754,
                        "name": "onlyClaimKey",
                        "nameLocations": [
                          "12693:12:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 78,
                        "src": "12693:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12693:12:0"
                    }
                  ],
                  "name": "addClaim",
                  "nameLocation": "12482:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 756,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12710:8:0"
                  },
                  "parameters": {
                    "id": 751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "_topic",
                        "nameLocation": "12508:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12500:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12500:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 742,
                        "mutability": "mutable",
                        "name": "_scheme",
                        "nameLocation": "12532:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12524:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12524:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 744,
                        "mutability": "mutable",
                        "name": "_issuer",
                        "nameLocation": "12557:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12549:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 743,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12549:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "12587:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12574:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12574:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 748,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "12620:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12607:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12607:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "_uri",
                        "nameLocation": "12649:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12635:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12635:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12490:169:0"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "claimRequestId",
                        "nameLocation": "12740:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "12732:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12732:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12731:24:0"
                  },
                  "scope": 1301,
                  "src": "12473:1135:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1578
                  ],
                  "body": {
                    "id": 987,
                    "nodeType": "Block",
                    "src": "14209:891:0",
                    "statements": [
                      {
                        "assignments": [
                          891
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 891,
                            "mutability": "mutable",
                            "name": "_topic",
                            "nameLocation": "14227:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 987,
                            "src": "14219:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 890,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14219:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 896,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 892,
                              "name": "_claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1657,
                              "src": "14236:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                              }
                            },
                            "id": 894,
                            "indexExpression": {
                              "id": 893,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "14244:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14236:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$1711_storage",
                              "typeString": "struct Structs.Claim storage ref"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14254:5:0",
                          "memberName": "topic",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1700,
                          "src": "14236:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14219:40:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 897,
                            "name": "_topic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "14273:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14283:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14273:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 905,
                        "nodeType": "IfStatement",
                        "src": "14269:95:0",
                        "trueBody": {
                          "id": 904,
                          "nodeType": "Block",
                          "src": "14286:78:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d20776974682074686973204944",
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14307:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5abac270f6dfe9fec0cffc69c1e2c0be20d5e956877e37120e8a684061fa199a",
                                      "typeString": "literal_string \"NonExisting: There is no claim with this ID\""
                                    },
                                    "value": "NonExisting: There is no claim with this ID"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_5abac270f6dfe9fec0cffc69c1e2c0be20d5e956877e37120e8a684061fa199a",
                                      "typeString": "literal_string \"NonExisting: There is no claim with this ID\""
                                    }
                                  ],
                                  "id": 900,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14300:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14300:53:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 903,
                              "nodeType": "ExpressionStatement",
                              "src": "14300:53:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          907
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 907,
                            "mutability": "mutable",
                            "name": "claimIndex",
                            "nameLocation": "14379:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 987,
                            "src": "14374:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 906,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14374:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 909,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14392:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14374:19:0"
                      },
                      {
                        "assignments": [
                          911
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 911,
                            "mutability": "mutable",
                            "name": "arrayLength",
                            "nameLocation": "14408:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 987,
                            "src": "14403:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 910,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14403:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 916,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 912,
                              "name": "_claimsByTopic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1662,
                              "src": "14422:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                "typeString": "mapping(uint256 => bytes32[] storage ref)"
                              }
                            },
                            "id": 914,
                            "indexExpression": {
                              "id": 913,
                              "name": "_topic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "14437:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14422:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14445:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14422:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14403:48:0"
                      },
                      {
                        "body": {
                          "id": 933,
                          "nodeType": "Block",
                          "src": "14516:120:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "14530:12:0",
                                "subExpression": {
                                  "id": 924,
                                  "name": "claimIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "14530:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 926,
                              "nodeType": "ExpressionStatement",
                              "src": "14530:12:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 927,
                                  "name": "claimIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "14561:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 928,
                                  "name": "arrayLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "14575:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14561:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 932,
                              "nodeType": "IfStatement",
                              "src": "14557:69:0",
                              "trueBody": {
                                "id": 931,
                                "nodeType": "Block",
                                "src": "14588:38:0",
                                "statements": [
                                  {
                                    "id": 930,
                                    "nodeType": "Break",
                                    "src": "14606:5:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 917,
                                "name": "_claimsByTopic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "14468:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 919,
                              "indexExpression": {
                                "id": 918,
                                "name": "_topic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 891,
                                "src": "14483:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14468:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 921,
                            "indexExpression": {
                              "id": 920,
                              "name": "claimIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "14491:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14468:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 922,
                            "name": "_claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 880,
                            "src": "14506:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14468:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 934,
                        "nodeType": "WhileStatement",
                        "src": "14461:175:0"
                      },
                      {
                        "expression": {
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 935,
                                "name": "_claimsByTopic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "14646:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 938,
                              "indexExpression": {
                                "id": 936,
                                "name": "_topic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 891,
                                "src": "14661:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14646:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 939,
                            "indexExpression": {
                              "id": 937,
                              "name": "claimIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "14669:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14646:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 940,
                                "name": "_claimsByTopic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "14691:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 942,
                              "indexExpression": {
                                "id": 941,
                                "name": "_topic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 891,
                                "src": "14706:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14691:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 946,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 943,
                                "name": "arrayLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 911,
                                "src": "14714:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14728:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "14714:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14691:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14646:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 948,
                        "nodeType": "ExpressionStatement",
                        "src": "14646:84:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 949,
                                "name": "_claimsByTopic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "14740:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 951,
                              "indexExpression": {
                                "id": 950,
                                "name": "_topic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 891,
                                "src": "14755:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14740:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14763:3:0",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "14740:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer)"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14740:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 954,
                        "nodeType": "ExpressionStatement",
                        "src": "14740:28:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 956,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "14810:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 957,
                              "name": "_topic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "14832:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 958,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "14852:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 960,
                                "indexExpression": {
                                  "id": 959,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "14860:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14852:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14870:6:0",
                              "memberName": "scheme",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1702,
                              "src": "14852:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 962,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "14890:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 964,
                                "indexExpression": {
                                  "id": 963,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "14898:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14890:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14908:6:0",
                              "memberName": "issuer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1704,
                              "src": "14890:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 966,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "14928:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 968,
                                "indexExpression": {
                                  "id": 967,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "14936:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14928:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 969,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14946:9:0",
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1706,
                              "src": "14928:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 970,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "14969:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 972,
                                "indexExpression": {
                                  "id": 971,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "14977:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14969:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14987:4:0",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1708,
                              "src": "14969:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 974,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "15005:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 976,
                                "indexExpression": {
                                  "id": 975,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "15013:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15005:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 977,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15023:3:0",
                              "memberName": "uri",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1710,
                              "src": "15005:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 955,
                            "name": "ClaimRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "14784:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256,address,bytes memory,bytes memory,string memory)"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14784:252:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "EmitStatement",
                        "src": "14779:257:0"
                      },
                      {
                        "expression": {
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "15047:24:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 980,
                              "name": "_claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1657,
                              "src": "15054:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                              }
                            },
                            "id": 982,
                            "indexExpression": {
                              "id": 981,
                              "name": "_claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "15062:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15054:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$1711_storage",
                              "typeString": "struct Structs.Claim storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 984,
                        "nodeType": "ExpressionStatement",
                        "src": "15047:24:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15089:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 889,
                        "id": 986,
                        "nodeType": "Return",
                        "src": "15082:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 878,
                    "nodeType": "StructuredDocumentation",
                    "src": "13614:461:0",
                    "text": " @dev See {IERC735-removeClaim}.\n @notice Implementation of the removeClaim function from the ERC-735 standard\n Require that the msg.sender has management key.\n Can only be removed by the claim issuer, or the claim holder itself.\n @param _claimId The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\n @return success Returns TRUE when the claim was removed.\n triggers ClaimRemoved event"
                  },
                  "functionSelector": "4eee424a",
                  "id": 988,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 883,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 882,
                        "name": "delegatedOnly",
                        "nameLocations": [
                          "14134:13:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "14134:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14134:13:0"
                    },
                    {
                      "id": 885,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 884,
                        "name": "onlyClaimKey",
                        "nameLocations": [
                          "14152:12:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 78,
                        "src": "14152:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14152:12:0"
                    }
                  ],
                  "name": "removeClaim",
                  "nameLocation": "14089:11:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 886,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14169:8:0"
                  },
                  "parameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 880,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "14109:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 988,
                        "src": "14101:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14101:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14100:18:0"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "14200:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 988,
                        "src": "14195:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14195:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14194:14:0"
                  },
                  "scope": 1301,
                  "src": "14080:1020:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1596
                  ],
                  "body": {
                    "id": 1033,
                    "nodeType": "Block",
                    "src": "16438:235:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1007,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "16465:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 1009,
                                "indexExpression": {
                                  "id": 1008,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "16473:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16465:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16483:5:0",
                              "memberName": "topic",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1700,
                              "src": "16465:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1011,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "16498:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 1013,
                                "indexExpression": {
                                  "id": 1012,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "16506:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16498:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16516:6:0",
                              "memberName": "scheme",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1702,
                              "src": "16498:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1015,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "16532:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 1017,
                                "indexExpression": {
                                  "id": 1016,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "16540:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16532:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16550:6:0",
                              "memberName": "issuer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1704,
                              "src": "16532:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1019,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "16566:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 1021,
                                "indexExpression": {
                                  "id": 1020,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "16574:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16566:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16584:9:0",
                              "memberName": "signature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1706,
                              "src": "16566:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1023,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "16603:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 1025,
                                "indexExpression": {
                                  "id": 1024,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "16611:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16603:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16621:4:0",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1708,
                              "src": "16603:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1027,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1657,
                                  "src": "16635:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                                    "typeString": "mapping(bytes32 => struct Structs.Claim storage ref)"
                                  }
                                },
                                "id": 1029,
                                "indexExpression": {
                                  "id": 1028,
                                  "name": "_claimId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 991,
                                  "src": "16643:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16635:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$1711_storage",
                                  "typeString": "struct Structs.Claim storage ref"
                                }
                              },
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16653:3:0",
                              "memberName": "uri",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1710,
                              "src": "16635:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "id": 1031,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16455:211:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_storage_$_t_bytes_storage_$_t_string_storage_$",
                            "typeString": "tuple(uint256,uint256,address,bytes storage ref,bytes storage ref,string storage ref)"
                          }
                        },
                        "functionReturnParameters": 1006,
                        "id": 1032,
                        "nodeType": "Return",
                        "src": "16448:218:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 989,
                    "nodeType": "StructuredDocumentation",
                    "src": "15106:1079:0",
                    "text": " @dev See {IERC735-getClaim}.\n @notice Implementation of the getClaim function from the ERC-735 standard.\n @param _claimId The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\n @return topic Returns all the parameters of the claim for the\n specified _claimId (topic, scheme, signature, issuer, data, uri) .\n @return scheme Returns all the parameters of the claim for the\n specified _claimId (topic, scheme, signature, issuer, data, uri) .\n @return issuer Returns all the parameters of the claim for the\n specified _claimId (topic, scheme, signature, issuer, data, uri) .\n @return signature Returns all the parameters of the claim for the\n specified _claimId (topic, scheme, signature, issuer, data, uri) .\n @return data Returns all the parameters of the claim for the\n specified _claimId (topic, scheme, signature, issuer, data, uri) .\n @return uri Returns all the parameters of the claim for the\n specified _claimId (topic, scheme, signature, issuer, data, uri) ."
                  },
                  "functionSelector": "c9100bcb",
                  "id": 1034,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaim",
                  "nameLocation": "16199:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 993,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "16241:8:0"
                  },
                  "parameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 991,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "16216:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16208:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 990,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16207:18:0"
                  },
                  "returnParameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "topic",
                        "nameLocation": "16288:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16280:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16280:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "scheme",
                        "nameLocation": "16311:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16303:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nameLocation": "16335:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16327:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16327:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "16364:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16351:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "16351:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "16396:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16383:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "16383:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "16424:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "16410:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "16410:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16270:163:0"
                  },
                  "scope": 1301,
                  "src": "16190:483:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1497
                  ],
                  "body": {
                    "id": 1092,
                    "nodeType": "Block",
                    "src": "16938:346:0",
                    "statements": [
                      {
                        "assignments": [
                          1047
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1047,
                            "mutability": "mutable",
                            "name": "key",
                            "nameLocation": "16959:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1092,
                            "src": "16948:14:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Key_$1685_memory_ptr",
                              "typeString": "struct Structs.Key"
                            },
                            "typeName": {
                              "id": 1046,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1045,
                                "name": "Key",
                                "nameLocations": [
                                  "16948:3:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1685,
                                "src": "16948:3:0"
                              },
                              "referencedDeclaration": 1685,
                              "src": "16948:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_storage_ptr",
                                "typeString": "struct Structs.Key"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1051,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1048,
                            "name": "_keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "16965:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                              "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                            }
                          },
                          "id": 1050,
                          "indexExpression": {
                            "id": 1049,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "16971:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16965:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Key_$1685_storage",
                            "typeString": "struct Structs.Key storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16948:28:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1052,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "16990:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_memory_ptr",
                                "typeString": "struct Structs.Key memory"
                              }
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16994:3:0",
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1684,
                            "src": "16990:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17001:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16990:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1058,
                        "nodeType": "IfStatement",
                        "src": "16986:30:0",
                        "trueBody": {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 1056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17011:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 1044,
                          "id": 1057,
                          "nodeType": "Return",
                          "src": "17004:12:0"
                        }
                      },
                      {
                        "body": {
                          "id": 1088,
                          "nodeType": "Block",
                          "src": "17116:139:0",
                          "statements": [
                            {
                              "assignments": [
                                1072
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1072,
                                  "mutability": "mutable",
                                  "name": "purpose",
                                  "nameLocation": "17138:7:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1088,
                                  "src": "17130:15:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1071,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17130:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1077,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1073,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1047,
                                    "src": "17148:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Key_$1685_memory_ptr",
                                      "typeString": "struct Structs.Key memory"
                                    }
                                  },
                                  "id": 1074,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17152:8:0",
                                  "memberName": "purposes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1680,
                                  "src": "17148:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1076,
                                "indexExpression": {
                                  "id": 1075,
                                  "name": "keyPurposeIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1060,
                                  "src": "17161:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17148:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17130:47:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1078,
                                    "name": "purpose",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "17196:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17207:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17196:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1081,
                                    "name": "purpose",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "17212:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 1082,
                                    "name": "_purpose",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1039,
                                    "src": "17223:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17212:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "17196:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1087,
                              "nodeType": "IfStatement",
                              "src": "17192:52:0",
                              "trueBody": {
                                "expression": {
                                  "hexValue": "74727565",
                                  "id": 1085,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17240:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "functionReturnParameters": 1044,
                                "id": 1086,
                                "nodeType": "Return",
                                "src": "17233:11:0"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1063,
                            "name": "keyPurposeIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "17058:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1064,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "17076:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Key_$1685_memory_ptr",
                                  "typeString": "struct Structs.Key memory"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17080:8:0",
                              "memberName": "purposes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1680,
                              "src": "17076:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17089:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17076:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17058:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1089,
                        "initializationExpression": {
                          "assignments": [
                            1060
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1060,
                              "mutability": "mutable",
                              "name": "keyPurposeIndex",
                              "nameLocation": "17037:15:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1089,
                              "src": "17032:20:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1059,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "17032:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1062,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17055:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17032:24:0"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "17097:17:0",
                            "subExpression": {
                              "id": 1068,
                              "name": "keyPurposeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1060,
                              "src": "17097:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1070,
                          "nodeType": "ExpressionStatement",
                          "src": "17097:17:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "17027:228:0"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17272:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1044,
                        "id": 1091,
                        "nodeType": "Return",
                        "src": "17265:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1035,
                    "nodeType": "StructuredDocumentation",
                    "src": "16679:137:0",
                    "text": " @dev See {IERC734-keyHasPurpose}.\n @notice Returns true if the key has MANAGEMENT purpose or the specified purpose."
                  },
                  "functionSelector": "d202158d",
                  "id": 1093,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "keyHasPurpose",
                  "nameLocation": "16830:13:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1041,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "16891:8:0"
                  },
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "16852:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1093,
                        "src": "16844:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16844:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "16866:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1093,
                        "src": "16858:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16858:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16843:32:0"
                  },
                  "returnParameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "16926:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1093,
                        "src": "16921:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16921:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16920:13:0"
                  },
                  "scope": 1301,
                  "src": "16821:463:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1629
                  ],
                  "body": {
                    "id": 1156,
                    "nodeType": "Block",
                    "src": "18057:738:0",
                    "statements": [
                      {
                        "assignments": [
                          1110
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1110,
                            "mutability": "mutable",
                            "name": "dataHash",
                            "nameLocation": "18075:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1156,
                            "src": "18067:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1109,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "18067:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1119,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1114,
                                  "name": "_identity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1097,
                                  "src": "18107:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1630",
                                    "typeString": "contract IIdentity"
                                  }
                                },
                                {
                                  "id": 1115,
                                  "name": "claimTopic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1099,
                                  "src": "18118:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1116,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1103,
                                  "src": "18130:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1630",
                                    "typeString": "contract IIdentity"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1112,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "18096:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "18100:6:0",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "18096:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18096:39:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1111,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18086:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18086:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18067:69:0"
                      },
                      {
                        "assignments": [
                          1121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1121,
                            "mutability": "mutable",
                            "name": "prefixedHash",
                            "nameLocation": "18245:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1156,
                            "src": "18237:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1120,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "18237:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1129,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "id": 1125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18287:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                {
                                  "id": 1126,
                                  "name": "dataHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1110,
                                  "src": "18323:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1123,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "18270:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "18274:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "18270:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18270:62:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1122,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18260:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18260:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18237:96:0"
                      },
                      {
                        "assignments": [
                          1131
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1131,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "18394:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1156,
                            "src": "18386:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1130,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18386:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1136,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1133,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1101,
                              "src": "18426:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 1134,
                              "name": "prefixedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "18431:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1132,
                            "name": "getRecoveredAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "18406:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes memory,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18406:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18386:58:0"
                      },
                      {
                        "assignments": [
                          1138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1138,
                            "mutability": "mutable",
                            "name": "hashedAddr",
                            "nameLocation": "18505:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1156,
                            "src": "18497:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1137,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "18497:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1145,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1142,
                                  "name": "recovered",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1131,
                                  "src": "18539:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1140,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "18528:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "18532:6:0",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "18528:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18528:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1139,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "18518:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18518:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18497:53:0"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 1147,
                              "name": "hashedAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "18714:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "33",
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18726:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 1146,
                            "name": "keyHasPurpose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "18700:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view returns (bool)"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18700:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1153,
                        "nodeType": "IfStatement",
                        "src": "18696:70:0",
                        "trueBody": {
                          "id": 1152,
                          "nodeType": "Block",
                          "src": "18730:36:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18751:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1108,
                              "id": 1151,
                              "nodeType": "Return",
                              "src": "18744:11:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18783:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1108,
                        "id": 1155,
                        "nodeType": "Return",
                        "src": "18776:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1094,
                    "nodeType": "StructuredDocumentation",
                    "src": "17290:566:0",
                    "text": " @dev Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a\n built-in revocation mechanism and are considered valid as long as their signature is valid and they are still\n stored by the identity contract.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
                  },
                  "functionSelector": "c0969a6e",
                  "id": 1157,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isClaimValid",
                  "nameLocation": "17870:12:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1105,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18005:8:0"
                  },
                  "parameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "_identity",
                        "nameLocation": "17902:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "17892:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentity_$1630",
                          "typeString": "contract IIdentity"
                        },
                        "typeName": {
                          "id": 1096,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1095,
                            "name": "IIdentity",
                            "nameLocations": [
                              "17892:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1630,
                            "src": "17892:9:0"
                          },
                          "referencedDeclaration": 1630,
                          "src": "17892:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IIdentity_$1630",
                            "typeString": "contract IIdentity"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "claimTopic",
                        "nameLocation": "17929:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "17921:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17921:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "sig",
                        "nameLocation": "17962:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "17949:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17949:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "17988:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "17975:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17975:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17882:111:0"
                  },
                  "returnParameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "claimValid",
                        "nameLocation": "18041:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1157,
                        "src": "18036:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18036:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18035:17:0"
                  },
                  "scope": 1301,
                  "src": "17861:934:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1209,
                    "nodeType": "Block",
                    "src": "19162:603:0",
                    "statements": [
                      {
                        "assignments": [
                          1168
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1168,
                            "mutability": "mutable",
                            "name": "ra",
                            "nameLocation": "19180:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1209,
                            "src": "19172:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1167,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "19172:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1169,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19172:10:0"
                      },
                      {
                        "assignments": [
                          1171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1171,
                            "mutability": "mutable",
                            "name": "sa",
                            "nameLocation": "19200:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1209,
                            "src": "19192:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1170,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "19192:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1172,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19192:10:0"
                      },
                      {
                        "assignments": [
                          1174
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1174,
                            "mutability": "mutable",
                            "name": "va",
                            "nameLocation": "19218:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1209,
                            "src": "19212:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1173,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "19212:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1175,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19212:8:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1176,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "19273:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19277:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19273:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 1178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19287:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "19273:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1186,
                        "nodeType": "IfStatement",
                        "src": "19269:64:0",
                        "trueBody": {
                          "id": 1185,
                          "nodeType": "Block",
                          "src": "19291:42:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19320:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19312:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1180,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19312:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19312:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 1166,
                              "id": 1184,
                              "nodeType": "Return",
                              "src": "19305:17:0"
                            }
                          ]
                        }
                      },
                      {
                        "AST": {
                          "nativeSrc": "19464:134:0",
                          "nodeType": "YulBlock",
                          "src": "19464:134:0",
                          "statements": [
                            {
                              "nativeSrc": "19478:25:0",
                              "nodeType": "YulAssignment",
                              "src": "19478:25:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "sig",
                                        "nativeSrc": "19494:3:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "19494:3:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "19499:2:0",
                                        "nodeType": "YulLiteral",
                                        "src": "19499:2:0",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "19490:3:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "19490:3:0"
                                    },
                                    "nativeSrc": "19490:12:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "19490:12:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "19484:5:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "19484:5:0"
                                },
                                "nativeSrc": "19484:19:0",
                                "nodeType": "YulFunctionCall",
                                "src": "19484:19:0"
                              },
                              "variableNames": [
                                {
                                  "name": "ra",
                                  "nativeSrc": "19478:2:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "19478:2:0"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "19516:25:0",
                              "nodeType": "YulAssignment",
                              "src": "19516:25:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "sig",
                                        "nativeSrc": "19532:3:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "19532:3:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "19537:2:0",
                                        "nodeType": "YulLiteral",
                                        "src": "19537:2:0",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "19528:3:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "19528:3:0"
                                    },
                                    "nativeSrc": "19528:12:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "19528:12:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "19522:5:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "19522:5:0"
                                },
                                "nativeSrc": "19522:19:0",
                                "nodeType": "YulFunctionCall",
                                "src": "19522:19:0"
                              },
                              "variableNames": [
                                {
                                  "name": "sa",
                                  "nativeSrc": "19516:2:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "19516:2:0"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "19554:34:0",
                              "nodeType": "YulAssignment",
                              "src": "19554:34:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "19565:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "19565:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "sig",
                                            "nativeSrc": "19578:3:0",
                                            "nodeType": "YulIdentifier",
                                            "src": "19578:3:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "19583:2:0",
                                            "nodeType": "YulLiteral",
                                            "src": "19583:2:0",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "19574:3:0",
                                          "nodeType": "YulIdentifier",
                                          "src": "19574:3:0"
                                        },
                                        "nativeSrc": "19574:12:0",
                                        "nodeType": "YulFunctionCall",
                                        "src": "19574:12:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "19568:5:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "19568:5:0"
                                    },
                                    "nativeSrc": "19568:19:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "19568:19:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "byte",
                                  "nativeSrc": "19560:4:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "19560:4:0"
                                },
                                "nativeSrc": "19560:28:0",
                                "nodeType": "YulFunctionCall",
                                "src": "19560:28:0"
                              },
                              "variableNames": [
                                {
                                  "name": "va",
                                  "nativeSrc": "19554:2:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "19554:2:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1168,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19478:2:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1171,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19516:2:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1160,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19494:3:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1160,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19532:3:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1160,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19578:3:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1174,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19554:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 1187,
                        "nodeType": "InlineAssembly",
                        "src": "19455:143:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1188,
                            "name": "va",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "19612:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3237",
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19617:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_27_by_1",
                              "typeString": "int_const 27"
                            },
                            "value": "27"
                          },
                          "src": "19612:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1196,
                        "nodeType": "IfStatement",
                        "src": "19608:46:0",
                        "trueBody": {
                          "id": 1195,
                          "nodeType": "Block",
                          "src": "19621:33:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1191,
                                  "name": "va",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1174,
                                  "src": "19635:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "3237",
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19641:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_27_by_1",
                                    "typeString": "int_const 27"
                                  },
                                  "value": "27"
                                },
                                "src": "19635:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1194,
                              "nodeType": "ExpressionStatement",
                              "src": "19635:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1198,
                            "mutability": "mutable",
                            "name": "recoveredAddress",
                            "nameLocation": "19672:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1209,
                            "src": "19664:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1197,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19664:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1205,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1200,
                              "name": "dataHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1162,
                              "src": "19701:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1201,
                              "name": "va",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "19711:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1202,
                              "name": "ra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "19715:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1203,
                              "name": "sa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "19719:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1199,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "19691:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19691:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19664:58:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1206,
                              "name": "recoveredAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "19741:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 1207,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "19740:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1166,
                        "id": 1208,
                        "nodeType": "Return",
                        "src": "19733:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1158,
                    "nodeType": "StructuredDocumentation",
                    "src": "18801:240:0",
                    "text": " @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"
                  },
                  "functionSelector": "c3b129e3",
                  "id": 1210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRecoveredAddress",
                  "nameLocation": "19055:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1160,
                        "mutability": "mutable",
                        "name": "sig",
                        "nameLocation": "19088:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "19075:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1159,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "19075:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1162,
                        "mutability": "mutable",
                        "name": "dataHash",
                        "nameLocation": "19101:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "19093:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1161,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19093:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19074:36:0"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "19152:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "19144:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19144:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19143:14:0"
                  },
                  "scope": 1301,
                  "src": "19046:719:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1277,
                    "nodeType": "Block",
                    "src": "20089:394:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "20107:13:0",
                                "subExpression": {
                                  "id": 1217,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1665,
                                  "src": "20108:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1219,
                                  "name": "_isConstructor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1300,
                                  "src": "20124:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20124:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "20107:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c206b65792077617320616c72656164792073657475702e",
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20142:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f97b6c8710e53ddda282a80ef5956d499e3405b5bb60ff3bc53f8e99e471fc0e",
                                "typeString": "literal_string \"Initial key was already setup.\""
                              },
                              "value": "Initial key was already setup."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f97b6c8710e53ddda282a80ef5956d499e3405b5bb60ff3bc53f8e99e471fc0e",
                                "typeString": "literal_string \"Initial key was already setup.\""
                              }
                            ],
                            "id": 1216,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20099:76:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1224,
                        "nodeType": "ExpressionStatement",
                        "src": "20099:76:0"
                      },
                      {
                        "expression": {
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1225,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1665,
                            "src": "20185:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20200:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "20185:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "20185:19:0"
                      },
                      {
                        "expression": {
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1229,
                            "name": "_canInteract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1668,
                            "src": "20214:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20229:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "20214:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1232,
                        "nodeType": "ExpressionStatement",
                        "src": "20214:19:0"
                      },
                      {
                        "assignments": [
                          1234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1234,
                            "mutability": "mutable",
                            "name": "_key",
                            "nameLocation": "20252:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1277,
                            "src": "20244:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1233,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "20244:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1241,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1238,
                                  "name": "initialManagementKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1213,
                                  "src": "20280:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1236,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "20269:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "20273:6:0",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "20269:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20269:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1235,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "20259:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20259:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20244:58:0"
                      },
                      {
                        "expression": {
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1242,
                                "name": "_keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "20312:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                }
                              },
                              "id": 1244,
                              "indexExpression": {
                                "id": 1243,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "20318:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20312:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_storage",
                                "typeString": "struct Structs.Key storage ref"
                              }
                            },
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "20324:3:0",
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1684,
                            "src": "20312:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1246,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1234,
                            "src": "20330:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "20312:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "20312:22:0"
                      },
                      {
                        "expression": {
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1249,
                                "name": "_keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "20344:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                }
                              },
                              "id": 1251,
                              "indexExpression": {
                                "id": 1250,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "20350:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20344:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_storage",
                                "typeString": "struct Structs.Key storage ref"
                              }
                            },
                            "id": 1252,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "20356:8:0",
                            "memberName": "purposes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1680,
                            "src": "20344:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "hexValue": "31",
                                "id": 1253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20368:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "id": 1254,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20367:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$1_memory_ptr",
                              "typeString": "uint8[1] memory"
                            }
                          },
                          "src": "20344:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "20344:26:0"
                      },
                      {
                        "expression": {
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1257,
                                "name": "_keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "20380:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                                  "typeString": "mapping(bytes32 => struct Structs.Key storage ref)"
                                }
                              },
                              "id": 1259,
                              "indexExpression": {
                                "id": 1258,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "20386:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20380:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Key_$1685_storage",
                                "typeString": "struct Structs.Key storage ref"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "20392:7:0",
                            "memberName": "keyType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1682,
                            "src": "20380:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20402:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "20380:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1263,
                        "nodeType": "ExpressionStatement",
                        "src": "20380:23:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1268,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "20436:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1264,
                                "name": "_keysByPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "20413:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => bytes32[] storage ref)"
                                }
                              },
                              "id": 1266,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 1265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20428:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20413:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20431:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "20413:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                              "typeString": "function (bytes32[] storage pointer,bytes32)"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20413:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "20413:28:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1272,
                              "name": "_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "20465:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 1273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20471:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "31",
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20474:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 1271,
                            "name": "KeyAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "20456:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,uint256)"
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20456:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1276,
                        "nodeType": "EmitStatement",
                        "src": "20451:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "19771:196:0",
                    "text": " @notice Initializer internal function for the Identity contract.\n @param initialManagementKey The ethereum address to be set as the management key of the ONCHAINID."
                  },
                  "id": 1278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "__Identity_init",
                  "nameLocation": "20034:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "initialManagementKey",
                        "nameLocation": "20058:20:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "20050:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20050:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20049:30:0"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20089:0:0"
                  },
                  "scope": 1301,
                  "src": "20025:458:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1299,
                    "nodeType": "Block",
                    "src": "20715:190:0",
                    "statements": [
                      {
                        "assignments": [
                          1285
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1285,
                            "mutability": "mutable",
                            "name": "self",
                            "nameLocation": "20733:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1299,
                            "src": "20725:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1284,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20725:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1290,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1288,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "20748:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Identity_$1301",
                                "typeString": "contract Identity"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Identity_$1301",
                                "typeString": "contract Identity"
                              }
                            ],
                            "id": 1287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20740:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1286,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20740:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20740:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20725:28:0"
                      },
                      {
                        "assignments": [
                          1292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1292,
                            "mutability": "mutable",
                            "name": "cs",
                            "nameLocation": "20771:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1299,
                            "src": "20763:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1291,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20763:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1293,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20763:10:0"
                      },
                      {
                        "AST": {
                          "nativeSrc": "20848:27:0",
                          "nodeType": "YulBlock",
                          "src": "20848:27:0",
                          "statements": [
                            {
                              "nativeSrc": "20850:23:0",
                              "nodeType": "YulAssignment",
                              "src": "20850:23:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "self",
                                    "nativeSrc": "20868:4:0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20868:4:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nativeSrc": "20856:11:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "20856:11:0"
                                },
                                "nativeSrc": "20856:17:0",
                                "nodeType": "YulFunctionCall",
                                "src": "20856:17:0"
                              },
                              "variableNames": [
                                {
                                  "name": "cs",
                                  "nativeSrc": "20850:2:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "20850:2:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1292,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20850:2:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1285,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20868:4:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 1294,
                        "nodeType": "InlineAssembly",
                        "src": "20839:36:0"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1295,
                            "name": "cs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "20891:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20897:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20891:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1283,
                        "id": 1298,
                        "nodeType": "Return",
                        "src": "20884:14:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1279,
                    "nodeType": "StructuredDocumentation",
                    "src": "20489:167:0",
                    "text": " @notice Computes if the context in which the function is called is a constructor or not.\n @return true if the context is a constructor."
                  },
                  "id": 1300,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isConstructor",
                  "nameLocation": "20670:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20684:2:0"
                  },
                  "returnParameters": {
                    "id": 1283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "20709:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "20709:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20708:6:0"
                  },
                  "scope": 1301,
                  "src": "20661:244:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1302,
              "src": "481:20426:0",
              "usedErrors": [],
              "usedEvents": [
                1361,
                1372,
                1383,
                1394,
                1403,
                1412,
                1518,
                1535,
                1552
              ]
            }
          ],
          "src": "36:20872:0"
        },
        "id": 0
      },
      "@onchainid/contracts/interface/IClaimIssuer.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/interface/IClaimIssuer.sol",
          "exportedSymbols": {
            "IClaimIssuer": [
              1351
            ],
            "IERC734": [
              1498
            ],
            "IERC735": [
              1606
            ],
            "IIdentity": [
              1630
            ]
          },
          "id": 1352,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1303,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:1"
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IIdentity.sol",
              "file": "./IIdentity.sol",
              "id": 1304,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1352,
              "sourceUnit": 1631,
              "src": "62:25:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1305,
                    "name": "IIdentity",
                    "nameLocations": [
                      "115:9:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1630,
                    "src": "115:9:1"
                  },
                  "id": 1306,
                  "nodeType": "InheritanceSpecifier",
                  "src": "115:9:1"
                }
              ],
              "canonicalName": "IClaimIssuer",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1351,
              "linearizedBaseContracts": [
                1351,
                1630,
                1606,
                1498
              ],
              "name": "IClaimIssuer",
              "nameLocation": "99:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1307,
                    "nodeType": "StructuredDocumentation",
                    "src": "132:126:1",
                    "text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
                  },
                  "eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
                  "id": 1311,
                  "name": "ClaimRevoked",
                  "nameLocation": "269:12:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "296:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1311,
                        "src": "282:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "282:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "281:25:1"
                  },
                  "src": "263:44:1"
                },
                {
                  "documentation": {
                    "id": 1312,
                    "nodeType": "StructuredDocumentation",
                    "src": "313:351:1",
                    "text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
                  },
                  "functionSelector": "73c33708",
                  "id": 1321,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeClaim",
                  "nameLocation": "678:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1314,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "698:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "690:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1313,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "_identity",
                        "nameLocation": "716:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "708:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "689:37:1"
                  },
                  "returnParameters": {
                    "id": 1320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1319,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "744:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "744:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "743:6:1"
                  },
                  "scope": 1351,
                  "src": "669:81:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1322,
                    "nodeType": "StructuredDocumentation",
                    "src": "756:169:1",
                    "text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
                  },
                  "functionSelector": "9f7f9edd",
                  "id": 1327,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeClaimBySignature",
                  "nameLocation": "939:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1324,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "977:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1327,
                        "src": "962:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1323,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "962:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "961:26:1"
                  },
                  "returnParameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "996:0:1"
                  },
                  "scope": 1351,
                  "src": "930:67:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1328,
                    "nodeType": "StructuredDocumentation",
                    "src": "1003:181:1",
                    "text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
                  },
                  "functionSelector": "2646b264",
                  "id": 1335,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isClaimRevoked",
                  "nameLocation": "1198:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1330,
                        "mutability": "mutable",
                        "name": "_sig",
                        "nameLocation": "1228:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "1213:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1329,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1213:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1212:21:1"
                  },
                  "returnParameters": {
                    "id": 1334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1333,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "1257:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1332,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:1"
                  },
                  "scope": 1351,
                  "src": "1189:74:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1629
                  ],
                  "documentation": {
                    "id": 1336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:334:1",
                    "text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
                  },
                  "functionSelector": "c0969a6e",
                  "id": 1350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isClaimValid",
                  "nameLocation": "1617:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1339,
                        "mutability": "mutable",
                        "name": "_identity",
                        "nameLocation": "1649:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "1639:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentity_$1630",
                          "typeString": "contract IIdentity"
                        },
                        "typeName": {
                          "id": 1338,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1337,
                            "name": "IIdentity",
                            "nameLocations": [
                              "1639:9:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1630,
                            "src": "1639:9:1"
                          },
                          "referencedDeclaration": 1630,
                          "src": "1639:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IIdentity_$1630",
                            "typeString": "contract IIdentity"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "claimTopic",
                        "nameLocation": "1676:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "1668:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1668:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "sig",
                        "nameLocation": "1711:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "1696:18:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1696:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1345,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1739:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "1724:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1344,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1724:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1629:115:1"
                  },
                  "returnParameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "1772:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1772:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1771:6:1"
                  },
                  "scope": 1351,
                  "src": "1608:170:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1352,
              "src": "89:1691:1",
              "usedErrors": [],
              "usedEvents": [
                1311,
                1361,
                1372,
                1383,
                1394,
                1403,
                1412,
                1518,
                1535,
                1552
              ]
            }
          ],
          "src": "36:1745:1"
        },
        "id": 1
      },
      "@onchainid/contracts/interface/IERC734.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/interface/IERC734.sol",
          "exportedSymbols": {
            "IERC734": [
              1498
            ]
          },
          "id": 1499,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1353,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC734",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1354,
                "nodeType": "StructuredDocumentation",
                "src": "62:84:2",
                "text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1498,
              "linearizedBaseContracts": [
                1498
              ],
              "name": "IERC734",
              "nameLocation": "157:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1355,
                    "nodeType": "StructuredDocumentation",
                    "src": "172:156:2",
                    "text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
                  },
                  "eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
                  "id": 1361,
                  "name": "Approved",
                  "nameLocation": "339:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1357,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "executionId",
                        "nameLocation": "364:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "348:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "348:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1359,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "382:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "377:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1358,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "377:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "347:44:2"
                  },
                  "src": "333:59:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1362,
                    "nodeType": "StructuredDocumentation",
                    "src": "398:214:2",
                    "text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
                  },
                  "eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
                  "id": 1372,
                  "name": "Executed",
                  "nameLocation": "623:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1364,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "executionId",
                        "nameLocation": "648:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "632:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1366,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "677:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "661:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1368,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "697:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "681:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "681:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1370,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "710:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "704:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:84:2"
                  },
                  "src": "617:99:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1373,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:171:2",
                    "text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
                  },
                  "eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
                  "id": 1383,
                  "name": "ExecutionRequested",
                  "nameLocation": "904:18:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "executionId",
                        "nameLocation": "939:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "923:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "923:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1377,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "968:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "952:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "988:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "972:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1001:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1383,
                        "src": "995:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "995:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "922:84:2"
                  },
                  "src": "898:109:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1384,
                    "nodeType": "StructuredDocumentation",
                    "src": "1013:151:2",
                    "text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
                  },
                  "eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
                  "id": 1394,
                  "name": "ExecutionFailed",
                  "nameLocation": "1175:15:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1386,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "executionId",
                        "nameLocation": "1207:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "1191:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1191:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1388,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1236:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "1220:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1220:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1390,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1256:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "1240:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1240:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1392,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1269:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "1263:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1391,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1190:84:2"
                  },
                  "src": "1169:106:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1395,
                    "nodeType": "StructuredDocumentation",
                    "src": "1281:153:2",
                    "text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
                  },
                  "eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
                  "id": 1403,
                  "name": "KeyAdded",
                  "nameLocation": "1445:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1397,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "key",
                        "nameLocation": "1470:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "1454:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1399,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "purpose",
                        "nameLocation": "1491:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "1475:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1475:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1401,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "keyType",
                        "nameLocation": "1516:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "1500:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1500:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1453:71:2"
                  },
                  "src": "1439:86:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1404,
                    "nodeType": "StructuredDocumentation",
                    "src": "1531:160:2",
                    "text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
                  },
                  "eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
                  "id": 1412,
                  "name": "KeyRemoved",
                  "nameLocation": "1702:10:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1406,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "key",
                        "nameLocation": "1729:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1412,
                        "src": "1713:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1405,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1713:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1408,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "purpose",
                        "nameLocation": "1750:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1412,
                        "src": "1734:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1410,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "keyType",
                        "nameLocation": "1775:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1412,
                        "src": "1759:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1759:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1712:71:2"
                  },
                  "src": "1696:88:2"
                },
                {
                  "documentation": {
                    "id": 1413,
                    "nodeType": "StructuredDocumentation",
                    "src": "1790:319:2",
                    "text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
                  },
                  "functionSelector": "1d381240",
                  "id": 1424,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addKey",
                  "nameLocation": "2123:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "2138:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "2130:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2130:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "2152:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "2144:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2144:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1419,
                        "mutability": "mutable",
                        "name": "_keyType",
                        "nameLocation": "2170:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "2162:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2162:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2129:50:2"
                  },
                  "returnParameters": {
                    "id": 1423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1422,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "2203:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "2198:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1421,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2198:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2197:14:2"
                  },
                  "scope": 1498,
                  "src": "2114:98:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1425,
                    "nodeType": "StructuredDocumentation",
                    "src": "2218:201:2",
                    "text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
                  },
                  "functionSelector": "747442d3",
                  "id": 1434,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2433:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1427,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "2449:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "2441:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1426,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1429,
                        "mutability": "mutable",
                        "name": "_approve",
                        "nameLocation": "2459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "2454:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1428,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2454:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2440:28:2"
                  },
                  "returnParameters": {
                    "id": 1433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "2492:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "2487:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1431,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:14:2"
                  },
                  "scope": 1498,
                  "src": "2424:77:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1435,
                    "nodeType": "StructuredDocumentation",
                    "src": "2507:290:2",
                    "text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
                  },
                  "functionSelector": "53d413c5",
                  "id": 1444,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeKey",
                  "nameLocation": "2811:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "2829:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "2821:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1439,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "2843:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "2835:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2835:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2820:32:2"
                  },
                  "returnParameters": {
                    "id": 1443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1442,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "2876:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "2871:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:14:2"
                  },
                  "scope": 1498,
                  "src": "2802:83:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1445,
                    "nodeType": "StructuredDocumentation",
                    "src": "2891:481:2",
                    "text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
                  },
                  "functionSelector": "b61d27f6",
                  "id": 1456,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "3386:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1447,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "3402:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "3394:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1446,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3394:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1449,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "3415:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "3407:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3407:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1451,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "3438:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "3423:20:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1450,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3423:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3393:51:2"
                  },
                  "returnParameters": {
                    "id": 1455,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1454,
                        "mutability": "mutable",
                        "name": "executionId",
                        "nameLocation": "3479:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "3471:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1453,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3471:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3470:21:2"
                  },
                  "scope": 1498,
                  "src": "3377:115:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1457,
                    "nodeType": "StructuredDocumentation",
                    "src": "3498:78:2",
                    "text": " @dev Returns the full key data, if present in the identity."
                  },
                  "functionSelector": "12aaac70",
                  "id": 1469,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKey",
                  "nameLocation": "3590:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1459,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "3605:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "3597:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1458,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3597:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3596:14:2"
                  },
                  "returnParameters": {
                    "id": 1468,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "purposes",
                        "nameLocation": "3651:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "3634:25:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1461,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3634:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1462,
                          "nodeType": "ArrayTypeName",
                          "src": "3634:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "keyType",
                        "nameLocation": "3669:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "3661:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3661:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "key",
                        "nameLocation": "3686:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "3678:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1466,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3678:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3633:57:2"
                  },
                  "scope": 1498,
                  "src": "3581:110:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1470,
                    "nodeType": "StructuredDocumentation",
                    "src": "3697:75:2",
                    "text": " @dev Returns the list of purposes associated with a key."
                  },
                  "functionSelector": "fb307b34",
                  "id": 1478,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKeyPurposes",
                  "nameLocation": "3786:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "3809:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "3801:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3801:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3800:14:2"
                  },
                  "returnParameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "_purposes",
                        "nameLocation": "3854:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "3837:26:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1474,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3837:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1475,
                          "nodeType": "ArrayTypeName",
                          "src": "3837:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3836:28:2"
                  },
                  "scope": 1498,
                  "src": "3777:88:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1479,
                    "nodeType": "StructuredDocumentation",
                    "src": "3871:85:2",
                    "text": " @dev Returns an array of public key bytes32 held by this identity."
                  },
                  "functionSelector": "9010f726",
                  "id": 1487,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKeysByPurpose",
                  "nameLocation": "3970:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "3995:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1487,
                        "src": "3987:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3987:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3986:18:2"
                  },
                  "returnParameters": {
                    "id": 1486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1485,
                        "mutability": "mutable",
                        "name": "keys",
                        "nameLocation": "4045:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1487,
                        "src": "4028:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1483,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4028:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1484,
                          "nodeType": "ArrayTypeName",
                          "src": "4028:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4027:23:2"
                  },
                  "scope": 1498,
                  "src": "3961:90:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1488,
                    "nodeType": "StructuredDocumentation",
                    "src": "4057:127:2",
                    "text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
                  },
                  "functionSelector": "d202158d",
                  "id": 1497,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "keyHasPurpose",
                  "nameLocation": "4198:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "_key",
                        "nameLocation": "4220:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4212:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4212:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "_purpose",
                        "nameLocation": "4234:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4226:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4226:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4211:32:2"
                  },
                  "returnParameters": {
                    "id": 1496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1495,
                        "mutability": "mutable",
                        "name": "exists",
                        "nameLocation": "4272:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4267:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1494,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4267:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4266:13:2"
                  },
                  "scope": 1498,
                  "src": "4189:91:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1499,
              "src": "147:4135:2",
              "usedErrors": [],
              "usedEvents": [
                1361,
                1372,
                1383,
                1394,
                1403,
                1412
              ]
            }
          ],
          "src": "36:4247:2"
        },
        "id": 2
      },
      "@onchainid/contracts/interface/IERC735.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/interface/IERC735.sol",
          "exportedSymbols": {
            "IERC735": [
              1606
            ]
          },
          "id": 1607,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1500,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC735",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1501,
                "nodeType": "StructuredDocumentation",
                "src": "62:86:3",
                "text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1606,
              "linearizedBaseContracts": [
                1606
              ],
              "name": "IERC735",
              "nameLocation": "159:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1502,
                    "nodeType": "StructuredDocumentation",
                    "src": "174:139:3",
                    "text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
                  },
                  "eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
                  "id": 1518,
                  "name": "ClaimAdded",
                  "nameLocation": "324:10:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1504,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "360:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "344:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1503,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "344:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1506,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topic",
                        "nameLocation": "393:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "377:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "377:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1508,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "scheme",
                        "nameLocation": "416:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "408:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "408:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1510,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nameLocation": "448:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "432:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "432:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1512,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "470:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "464:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1514,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "495:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "489:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "489:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1516,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "516:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "509:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "509:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "334:186:3"
                  },
                  "src": "318:203:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1519,
                    "nodeType": "StructuredDocumentation",
                    "src": "527:146:3",
                    "text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
                  },
                  "eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
                  "id": 1535,
                  "name": "ClaimRemoved",
                  "nameLocation": "684:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1521,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "722:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "706:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1520,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "706:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1523,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topic",
                        "nameLocation": "755:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "739:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1525,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "scheme",
                        "nameLocation": "778:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "770:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "770:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1527,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nameLocation": "810:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "794:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "794:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1529,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "832:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "826:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1528,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1531,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "857:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "851:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1533,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "878:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1535,
                        "src": "871:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "871:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "696:186:3"
                  },
                  "src": "678:205:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1536,
                    "nodeType": "StructuredDocumentation",
                    "src": "889:166:3",
                    "text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
                  },
                  "eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
                  "id": 1552,
                  "name": "ClaimChanged",
                  "nameLocation": "1066:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1538,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "claimId",
                        "nameLocation": "1104:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1088:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1540,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topic",
                        "nameLocation": "1137:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1121:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1121:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1542,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "scheme",
                        "nameLocation": "1160:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1152:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1541,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1544,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nameLocation": "1192:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1176:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1543,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1546,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "1214:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1208:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1208:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1548,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1239:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1233:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1550,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "1260:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "1253:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1078:186:3"
                  },
                  "src": "1060:205:3"
                },
                {
                  "documentation": {
                    "id": 1553,
                    "nodeType": "StructuredDocumentation",
                    "src": "1271:438:3",
                    "text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
                  },
                  "functionSelector": "b1a34e0d",
                  "id": 1570,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addClaim",
                  "nameLocation": "1723:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "_topic",
                        "nameLocation": "1749:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1741:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1741:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1557,
                        "mutability": "mutable",
                        "name": "_scheme",
                        "nameLocation": "1773:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1765:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1765:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1559,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nameLocation": "1798:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1790:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1558,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1790:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1561,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "1829:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1814:25:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1560,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1814:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1563,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "1864:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1849:20:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1562,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1849:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1565,
                        "mutability": "mutable",
                        "name": "_uri",
                        "nameLocation": "1895:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1879:20:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1564,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1879:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1731:169:3"
                  },
                  "returnParameters": {
                    "id": 1569,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1568,
                        "mutability": "mutable",
                        "name": "claimRequestId",
                        "nameLocation": "1931:14:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "1923:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1567,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1923:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1922:24:3"
                  },
                  "scope": 1606,
                  "src": "1714:233:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1571,
                    "nodeType": "StructuredDocumentation",
                    "src": "1953:193:3",
                    "text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
                  },
                  "functionSelector": "4eee424a",
                  "id": 1578,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeClaim",
                  "nameLocation": "2160:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1573,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "2180:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1578,
                        "src": "2172:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1572,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2172:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2171:18:3"
                  },
                  "returnParameters": {
                    "id": 1577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1576,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "2213:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1578,
                        "src": "2208:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2208:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2207:14:3"
                  },
                  "scope": 1606,
                  "src": "2151:71:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1579,
                    "nodeType": "StructuredDocumentation",
                    "src": "2228:154:3",
                    "text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
                  },
                  "functionSelector": "c9100bcb",
                  "id": 1596,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaim",
                  "nameLocation": "2396:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1581,
                        "mutability": "mutable",
                        "name": "_claimId",
                        "nameLocation": "2413:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2405:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1580,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2405:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2404:18:3"
                  },
                  "returnParameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1584,
                        "mutability": "mutable",
                        "name": "topic",
                        "nameLocation": "2466:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2458:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2458:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1586,
                        "mutability": "mutable",
                        "name": "scheme",
                        "nameLocation": "2489:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2481:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2481:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1588,
                        "mutability": "mutable",
                        "name": "issuer",
                        "nameLocation": "2513:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2505:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2505:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1590,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "2542:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2529:22:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1589,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2529:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2574:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2561:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2561:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1594,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "2602:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1596,
                        "src": "2588:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1593,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2588:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2448:158:3"
                  },
                  "scope": 1606,
                  "src": "2387:220:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1597,
                    "nodeType": "StructuredDocumentation",
                    "src": "2613:63:3",
                    "text": " @dev Returns an array of claim IDs by topic."
                  },
                  "functionSelector": "80e9e9e1",
                  "id": 1605,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimIdsByTopic",
                  "nameLocation": "2690:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1599,
                        "mutability": "mutable",
                        "name": "_topic",
                        "nameLocation": "2717:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1605,
                        "src": "2709:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2709:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2708:16:3"
                  },
                  "returnParameters": {
                    "id": 1604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1603,
                        "mutability": "mutable",
                        "name": "claimIds",
                        "nameLocation": "2764:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1605,
                        "src": "2747:25:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1601,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2747:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1602,
                          "nodeType": "ArrayTypeName",
                          "src": "2747:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2746:27:3"
                  },
                  "scope": 1606,
                  "src": "2681:93:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1607,
              "src": "149:2627:3",
              "usedErrors": [],
              "usedEvents": [
                1518,
                1535,
                1552
              ]
            }
          ],
          "src": "36:2741:3"
        },
        "id": 3
      },
      "@onchainid/contracts/interface/IIdentity.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/interface/IIdentity.sol",
          "exportedSymbols": {
            "IERC734": [
              1498
            ],
            "IERC735": [
              1606
            ],
            "IIdentity": [
              1630
            ]
          },
          "id": 1631,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1608,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:4"
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IERC734.sol",
              "file": "./IERC734.sol",
              "id": 1609,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1631,
              "sourceUnit": 1499,
              "src": "62:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IERC735.sol",
              "file": "./IERC735.sol",
              "id": 1610,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1631,
              "sourceUnit": 1607,
              "src": "86:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1611,
                    "name": "IERC734",
                    "nameLocations": [
                      "179:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1498,
                    "src": "179:7:4"
                  },
                  "id": 1612,
                  "nodeType": "InheritanceSpecifier",
                  "src": "179:7:4"
                },
                {
                  "baseName": {
                    "id": 1613,
                    "name": "IERC735",
                    "nameLocations": [
                      "188:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1606,
                    "src": "188:7:4"
                  },
                  "id": 1614,
                  "nodeType": "InheritanceSpecifier",
                  "src": "188:7:4"
                }
              ],
              "canonicalName": "IIdentity",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1630,
              "linearizedBaseContracts": [
                1630,
                1606,
                1498
              ],
              "name": "IIdentity",
              "nameLocation": "166:9:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1615,
                    "nodeType": "StructuredDocumentation",
                    "src": "202:334:4",
                    "text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
                  },
                  "functionSelector": "c0969a6e",
                  "id": 1629,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isClaimValid",
                  "nameLocation": "550:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1618,
                        "mutability": "mutable",
                        "name": "_identity",
                        "nameLocation": "582:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "572:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentity_$1630",
                          "typeString": "contract IIdentity"
                        },
                        "typeName": {
                          "id": 1617,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1616,
                            "name": "IIdentity",
                            "nameLocations": [
                              "572:9:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1630,
                            "src": "572:9:4"
                          },
                          "referencedDeclaration": 1630,
                          "src": "572:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IIdentity_$1630",
                            "typeString": "contract IIdentity"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1620,
                        "mutability": "mutable",
                        "name": "claimTopic",
                        "nameLocation": "609:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "601:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "601:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1622,
                        "mutability": "mutable",
                        "name": "sig",
                        "nameLocation": "644:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "629:18:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1621,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "629:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1624,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "672:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "657:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1623,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "562:115:4"
                  },
                  "returnParameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1629,
                        "src": "705:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "704:6:4"
                  },
                  "scope": 1630,
                  "src": "541:170:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1631,
              "src": "156:557:4",
              "usedErrors": [],
              "usedEvents": [
                1361,
                1372,
                1383,
                1394,
                1403,
                1412,
                1518,
                1535,
                1552
              ]
            }
          ],
          "src": "36:678:4"
        },
        "id": 4
      },
      "@onchainid/contracts/storage/Storage.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/storage/Storage.sol",
          "exportedSymbols": {
            "Storage": [
              1674
            ],
            "Structs": [
              1712
            ]
          },
          "id": 1675,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1632,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:5"
            },
            {
              "absolutePath": "@onchainid/contracts/storage/Structs.sol",
              "file": "./Structs.sol",
              "id": 1633,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1675,
              "sourceUnit": 1713,
              "src": "61:23:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1634,
                    "name": "Structs",
                    "nameLocations": [
                      "106:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1712,
                    "src": "106:7:5"
                  },
                  "id": 1635,
                  "nodeType": "InheritanceSpecifier",
                  "src": "106:7:5"
                }
              ],
              "canonicalName": "Storage",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1674,
              "linearizedBaseContracts": [
                1674,
                1712
              ],
              "name": "Storage",
              "nameLocation": "95:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "_executionNonce",
                  "nameLocation": "187:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "170:32:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "_keys",
                  "nameLocation": "276:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "243:38:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                    "typeString": "mapping(bytes32 => struct Structs.Key)"
                  },
                  "typeName": {
                    "id": 1641,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1638,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "251:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "243:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$1685_storage_$",
                      "typeString": "mapping(bytes32 => struct Structs.Key)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1640,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1639,
                        "name": "Key",
                        "nameLocations": [
                          "262:3:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1685,
                        "src": "262:3:5"
                      },
                      "referencedDeclaration": 1685,
                      "src": "262:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$1685_storage_ptr",
                        "typeString": "struct Structs.Key"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1647,
                  "mutability": "mutable",
                  "name": "_keysByPurpose",
                  "nameLocation": "440:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "401:53:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                    "typeString": "mapping(uint256 => bytes32[])"
                  },
                  "typeName": {
                    "id": 1646,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1643,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "409:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "401:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                      "typeString": "mapping(uint256 => bytes32[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1644,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "420:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1645,
                      "nodeType": "ArrayTypeName",
                      "src": "420:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1652,
                  "mutability": "mutable",
                  "name": "_executions",
                  "nameLocation": "522:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "483:50:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                    "typeString": "mapping(uint256 => struct Structs.Execution)"
                  },
                  "typeName": {
                    "id": 1651,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1648,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "491:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "483:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$1697_storage_$",
                      "typeString": "mapping(uint256 => struct Structs.Execution)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1650,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1649,
                        "name": "Execution",
                        "nameLocations": [
                          "502:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1697,
                        "src": "502:9:5"
                      },
                      "referencedDeclaration": 1697,
                      "src": "502:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$1697_storage_ptr",
                        "typeString": "struct Structs.Execution"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "_claims",
                  "nameLocation": "611:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "576:42:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                    "typeString": "mapping(bytes32 => struct Structs.Claim)"
                  },
                  "typeName": {
                    "id": 1656,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1653,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "584:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "576:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Claim_$1711_storage_$",
                      "typeString": "mapping(bytes32 => struct Structs.Claim)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1655,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1654,
                        "name": "Claim",
                        "nameLocations": [
                          "595:5:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1711,
                        "src": "595:5:5"
                      },
                      "referencedDeclaration": 1711,
                      "src": "595:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$1711_storage_ptr",
                        "typeString": "struct Structs.Claim"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1662,
                  "mutability": "mutable",
                  "name": "_claimsByTopic",
                  "nameLocation": "705:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "666:53:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                    "typeString": "mapping(uint256 => bytes32[])"
                  },
                  "typeName": {
                    "id": 1661,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1658,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "674:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "666:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                      "typeString": "mapping(uint256 => bytes32[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 1659,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "685:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1660,
                      "nodeType": "ArrayTypeName",
                      "src": "685:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "_initialized",
                  "nameLocation": "772:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "758:34:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "787:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1668,
                  "mutability": "mutable",
                  "name": "_canInteract",
                  "nameLocation": "871:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "857:34:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "886:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1669,
                    "nodeType": "StructuredDocumentation",
                    "src": "898:174:5",
                    "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain."
                  },
                  "id": 1673,
                  "mutability": "mutable",
                  "name": "__gap",
                  "nameLocation": "1097:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "1077:25:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$49_storage",
                    "typeString": "uint256[49]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1670,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1077:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1672,
                    "length": {
                      "hexValue": "3439",
                      "id": 1671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1085:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_49_by_1",
                        "typeString": "int_const 49"
                      },
                      "value": "49"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1077:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                      "typeString": "uint256[49]"
                    }
                  },
                  "visibility": "private"
                }
              ],
              "scope": 1675,
              "src": "86:1019:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "36:1070:5"
        },
        "id": 5
      },
      "@onchainid/contracts/storage/Structs.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/storage/Structs.sol",
          "exportedSymbols": {
            "Structs": [
              1712
            ]
          },
          "id": 1713,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1676,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Structs",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1712,
              "linearizedBaseContracts": [
                1712
              ],
              "name": "Structs",
              "nameLocation": "71:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Structs.Key",
                  "documentation": {
                    "id": 1677,
                    "nodeType": "StructuredDocumentation",
                    "src": "85:548:6",
                    "text": "  @dev Definition of the structure of a Key.\n  Specification: Keys are cryptographic public keys, or contract addresses associated with this identity.\n  The structure should be as follows:\n  key: A public key owned by this identity\n  purposes: uint256[] Array of the key purposes, like 1 = MANAGEMENT, 2 = EXECUTION\n  keyType: The type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\n  key: bytes32 The public key. // Its the Keccak256 hash of the key"
                  },
                  "id": 1685,
                  "members": [
                    {
                      "constant": false,
                      "id": 1680,
                      "mutability": "mutable",
                      "name": "purposes",
                      "nameLocation": "669:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "659:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1679,
                        "nodeType": "ArrayTypeName",
                        "src": "659:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1682,
                      "mutability": "mutable",
                      "name": "keyType",
                      "nameLocation": "695:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "687:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "687:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "720:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "712:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1683,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "712:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Key",
                  "nameLocation": "645:3:6",
                  "nodeType": "StructDefinition",
                  "scope": 1712,
                  "src": "638:92:6",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Structs.Execution",
                  "documentation": {
                    "id": 1686,
                    "nodeType": "StructuredDocumentation",
                    "src": "736:542:6",
                    "text": "  @dev Definition of the structure of an Execution\n  Specification: Executions are requests for transactions to be issued by the ONCHAINID\n  to: address of contract to interact with, can be address(this)\n  value: ETH to transfer with the transaction\n  data: payload of the transaction to execute\n  approved: approval status of the Execution\n  executed: execution status of the Execution (set as false when the Execution is created\n  and updated to true when the Execution is processed)"
                  },
                  "id": 1697,
                  "members": [
                    {
                      "constant": false,
                      "id": 1688,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1318:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1697,
                      "src": "1310:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1687,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1310:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1690,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1338:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1697,
                      "src": "1330:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1330:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1692,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1359:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1697,
                      "src": "1353:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1691,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1694,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "1378:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1697,
                      "src": "1373:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1373:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1696,
                      "mutability": "mutable",
                      "name": "executed",
                      "nameLocation": "1401:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1697,
                      "src": "1396:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1695,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1396:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Execution",
                  "nameLocation": "1290:9:6",
                  "nodeType": "StructDefinition",
                  "scope": 1712,
                  "src": "1283:133:6",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Structs.Claim",
                  "documentation": {
                    "id": 1698,
                    "nodeType": "StructuredDocumentation",
                    "src": "1421:1670:6",
                    "text": "  @dev Definition of the structure of a Claim.\n  Specification: Claims are information an issuer has about the identity holder.\n  The structure should be as follows:\n  claim: A claim published for the Identity.\n  topic: A uint256 number which represents the topic of the claim. (e.g. 1 biometric, 2 residence (ToBeDefined:\n  number schemes, sub topics based on number ranges??))\n  scheme : The scheme with which this claim SHOULD be verified or how it should be processed. Its a uint256 for\n  different schemes. E.g. could 3 mean contract verification, where the data will be call data, and the issuer a\n  contract address to call (ToBeDefined). Those can also mean different key types e.g. 1 = ECDSA, 2 = RSA, etc.\n  (ToBeDefined)\n  issuer: The issuers identity contract address, or the address used to sign the above signature. If an\n  identity contract, it should hold the key with which the above message was signed, if the key is not present\n  anymore, the claim SHOULD be treated as invalid. The issuer can also be a contract address itself, at which the\n  claim can be verified using the call data.\n  signature: Signature which is the proof that the claim issuer issued a claim of topic for this identity. it\n  MUST be a signed message of the following structure: `keccak256(abi.encode(identityHolder_address, topic, data))`\n  data: The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on\n  the claim scheme.\n  uri: The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such."
                  },
                  "id": 1711,
                  "members": [
                    {
                      "constant": false,
                      "id": 1700,
                      "mutability": "mutable",
                      "name": "topic",
                      "nameLocation": "3127:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3119:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3119:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1702,
                      "mutability": "mutable",
                      "name": "scheme",
                      "nameLocation": "3150:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3142:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3142:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1704,
                      "mutability": "mutable",
                      "name": "issuer",
                      "nameLocation": "3174:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3166:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1703,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3166:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1706,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "3196:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3190:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1705,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3190:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1708,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3221:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3215:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1707,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3215:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1710,
                      "mutability": "mutable",
                      "name": "uri",
                      "nameLocation": "3242:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "3235:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1709,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3235:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Claim",
                  "nameLocation": "3103:5:6",
                  "nodeType": "StructDefinition",
                  "scope": 1712,
                  "src": "3096:156:6",
                  "visibility": "public"
                }
              ],
              "scope": 1713,
              "src": "62:3192:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "36:3219:6"
        },
        "id": 6
      },
      "@onchainid/contracts/version/Version.sol": {
        "ast": {
          "absolutePath": "@onchainid/contracts/version/Version.sol",
          "exportedSymbols": {
            "Version": [
              1725
            ]
          },
          "id": 1726,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1714,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Version",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1715,
                "nodeType": "StructuredDocumentation",
                "src": "63:96:7",
                "text": " @dev Version contract gives the versioning information of the implementation contract"
              },
              "fullyImplemented": true,
              "id": 1725,
              "linearizedBaseContracts": [
                1725
              ],
              "name": "Version",
              "nameLocation": "169:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1723,
                    "nodeType": "Block",
                    "src": "311:56:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "322e322e31",
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "353:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2f5397716a6bde7af044ab1d37953b0f6f6b111dac69eb3c3789de2d8b2c8b68",
                            "typeString": "literal_string \"2.2.1\""
                          },
                          "value": "2.2.1"
                        },
                        "functionReturnParameters": 1720,
                        "id": 1722,
                        "nodeType": "Return",
                        "src": "346:14:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1716,
                    "nodeType": "StructuredDocumentation",
                    "src": "183:66:7",
                    "text": " @dev Returns the string of the current version."
                  },
                  "functionSelector": "54fd4d50",
                  "id": 1724,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "263:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1717,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "270:2:7"
                  },
                  "returnParameters": {
                    "id": 1720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1719,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "296:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1718,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "296:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "295:15:7"
                  },
                  "scope": 1725,
                  "src": "254:113:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1726,
              "src": "160:209:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "37:333:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              1979
            ]
          },
          "id": 1980,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1727,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:8"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1728,
                "nodeType": "StructuredDocumentation",
                "src": "139:2209:8",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 1979,
              "linearizedBaseContracts": [
                1979
              ],
              "name": "Initializable",
              "nameLocation": "2367:13:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Initializable.InitializableStorage",
                  "documentation": {
                    "id": 1729,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:293:8",
                    "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                  },
                  "id": 1736,
                  "members": [
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "_initialized",
                      "nameLocation": "2820:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1736,
                      "src": "2813:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1731,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1735,
                      "mutability": "mutable",
                      "name": "_initializing",
                      "nameLocation": "2955:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1736,
                      "src": "2950:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1734,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitializableStorage",
                  "nameLocation": "2692:20:8",
                  "nodeType": "StructDefinition",
                  "scope": 1979,
                  "src": "2685:290:8",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 1739,
                  "mutability": "constant",
                  "name": "INITIALIZABLE_STORAGE",
                  "nameLocation": "3123:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1979,
                  "src": "3098:115:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                      "typeString": "int_const 1089...(70 digits omitted)...9600"
                    },
                    "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1740,
                    "nodeType": "StructuredDocumentation",
                    "src": "3220:60:8",
                    "text": " @dev The contract is already initialized."
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 1742,
                  "name": "InvalidInitialization",
                  "nameLocation": "3291:21:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1741,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3312:2:8"
                  },
                  "src": "3285:30:8"
                },
                {
                  "documentation": {
                    "id": 1743,
                    "nodeType": "StructuredDocumentation",
                    "src": "3321:57:8",
                    "text": " @dev The contract is not initializing."
                  },
                  "errorSelector": "d7e6bcf8",
                  "id": 1745,
                  "name": "NotInitializing",
                  "nameLocation": "3389:15:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3404:2:8"
                  },
                  "src": "3383:24:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1746,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:90:8",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                  "id": 1750,
                  "name": "Initialized",
                  "nameLocation": "3514:11:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1749,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1748,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "3533:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "3526:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1747,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:16:8"
                  },
                  "src": "3508:34:8"
                },
                {
                  "body": {
                    "id": 1832,
                    "nodeType": "Block",
                    "src": "4092:1081:8",
                    "statements": [
                      {
                        "assignments": [
                          1755
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1755,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4187:1:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1832,
                            "src": "4158:30:8",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 1754,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1753,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "4158:20:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1736,
                                "src": "4158:20:8"
                              },
                              "referencedDeclaration": 1736,
                              "src": "4158:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1758,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1756,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "4191:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1736_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 1757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:26:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4158:59:8"
                      },
                      {
                        "assignments": [
                          1760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1760,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "4284:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1832,
                            "src": "4279:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1759,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4279:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1764,
                        "initialValue": {
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4301:16:8",
                          "subExpression": {
                            "expression": {
                              "id": 1761,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "4302:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4304:13:8",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1735,
                            "src": "4302:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4279:38:8"
                      },
                      {
                        "assignments": [
                          1766
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1766,
                            "mutability": "mutable",
                            "name": "initialized",
                            "nameLocation": "4334:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1832,
                            "src": "4327:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 1765,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4327:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1769,
                        "initialValue": {
                          "expression": {
                            "id": 1767,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1755,
                            "src": "4348:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4350:12:8",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1732,
                          "src": "4348:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4327:35:8"
                      },
                      {
                        "assignments": [
                          1771
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1771,
                            "mutability": "mutable",
                            "name": "initialSetup",
                            "nameLocation": "4711:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1832,
                            "src": "4706:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1770,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4706:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1777,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1772,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1766,
                              "src": "4726:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4726:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 1775,
                            "name": "isTopLevelCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "4746:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4726:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4706:54:8"
                      },
                      {
                        "assignments": [
                          1779
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1779,
                            "mutability": "mutable",
                            "name": "construction",
                            "nameLocation": "4775:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1832,
                            "src": "4770:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1778,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4770:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1792,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1780,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1766,
                              "src": "4790:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4805:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4790:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1785,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4818:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Initializable_$1979",
                                        "typeString": "contract Initializable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Initializable_$1979",
                                        "typeString": "contract Initializable"
                                      }
                                    ],
                                    "id": 1784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4810:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1783,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4810:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4810:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4824:4:8",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "4810:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4829:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4810:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4839:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4810:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4790:50:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4770:70:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4855:13:8",
                            "subExpression": {
                              "id": 1793,
                              "name": "initialSetup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1771,
                              "src": "4856:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 1796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4872:13:8",
                            "subExpression": {
                              "id": 1795,
                              "name": "construction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "4873:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4855:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1802,
                        "nodeType": "IfStatement",
                        "src": "4851:91:8",
                        "trueBody": {
                          "id": 1801,
                          "nodeType": "Block",
                          "src": "4887:55:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1798,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1742,
                                  "src": "4908:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4908:23:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1800,
                              "nodeType": "RevertStatement",
                              "src": "4901:30:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1803,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "4951:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1805,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4953:12:8",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1732,
                            "src": "4951:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4968:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4951:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1808,
                        "nodeType": "ExpressionStatement",
                        "src": "4951:18:8"
                      },
                      {
                        "condition": {
                          "id": 1809,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "4983:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1817,
                        "nodeType": "IfStatement",
                        "src": "4979:67:8",
                        "trueBody": {
                          "id": 1816,
                          "nodeType": "Block",
                          "src": "4999:47:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1810,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1755,
                                    "src": "5013:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 1812,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5015:13:8",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1735,
                                  "src": "5013:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5031:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5013:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1815,
                              "nodeType": "ExpressionStatement",
                              "src": "5013:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1818,
                        "nodeType": "PlaceholderStatement",
                        "src": "5055:1:8"
                      },
                      {
                        "condition": {
                          "id": 1819,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "5070:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1831,
                        "nodeType": "IfStatement",
                        "src": "5066:101:8",
                        "trueBody": {
                          "id": 1830,
                          "nodeType": "Block",
                          "src": "5086:81:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1820,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1755,
                                    "src": "5100:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 1822,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5102:13:8",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1735,
                                  "src": "5100:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5118:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5100:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1825,
                              "nodeType": "ExpressionStatement",
                              "src": "5100:23:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 1827,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5154:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 1826,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1750,
                                  "src": "5142:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 1828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5142:14:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1829,
                              "nodeType": "EmitStatement",
                              "src": "5137:19:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1751,
                    "nodeType": "StructuredDocumentation",
                    "src": "3548:516:8",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                  },
                  "id": 1833,
                  "name": "initializer",
                  "nameLocation": "4078:11:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1752,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4089:2:8"
                  },
                  "src": "4069:1104:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1879,
                    "nodeType": "Block",
                    "src": "6291:392:8",
                    "statements": [
                      {
                        "assignments": [
                          1840
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1840,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "6386:1:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1879,
                            "src": "6357:30:8",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 1839,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1838,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "6357:20:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1736,
                                "src": "6357:20:8"
                              },
                              "referencedDeclaration": 1736,
                              "src": "6357:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1843,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1841,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "6390:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1736_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:26:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6357:59:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1844,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "6431:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1845,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6433:13:8",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1735,
                            "src": "6431:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 1849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1846,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1840,
                                "src": "6450:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 1847,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6452:12:8",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1732,
                              "src": "6450:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1848,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1836,
                              "src": "6468:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "6450:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6431:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1855,
                        "nodeType": "IfStatement",
                        "src": "6427:105:8",
                        "trueBody": {
                          "id": 1854,
                          "nodeType": "Block",
                          "src": "6477:55:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1851,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1742,
                                  "src": "6498:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6498:23:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1853,
                              "nodeType": "RevertStatement",
                              "src": "6491:30:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1856,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "6541:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6543:12:8",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1732,
                            "src": "6541:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1859,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1836,
                            "src": "6558:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6541:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1861,
                        "nodeType": "ExpressionStatement",
                        "src": "6541:24:8"
                      },
                      {
                        "expression": {
                          "id": 1866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1862,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "6575:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6577:13:8",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1735,
                            "src": "6575:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6593:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6575:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1867,
                        "nodeType": "ExpressionStatement",
                        "src": "6575:22:8"
                      },
                      {
                        "id": 1868,
                        "nodeType": "PlaceholderStatement",
                        "src": "6607:1:8"
                      },
                      {
                        "expression": {
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1869,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "6618:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1871,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6620:13:8",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1735,
                            "src": "6618:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6636:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6618:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1874,
                        "nodeType": "ExpressionStatement",
                        "src": "6618:23:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1876,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1836,
                              "src": "6668:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1875,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1750,
                            "src": "6656:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 1877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6656:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1878,
                        "nodeType": "EmitStatement",
                        "src": "6651:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1834,
                    "nodeType": "StructuredDocumentation",
                    "src": "5179:1068:8",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 1880,
                  "name": "reinitializer",
                  "nameLocation": "6261:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1836,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "6282:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1880,
                        "src": "6275:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1835,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6275:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6274:16:8"
                  },
                  "src": "6252:431:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1887,
                    "nodeType": "Block",
                    "src": "6921:48:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1883,
                            "name": "_checkInitializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "6931:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6931:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1885,
                        "nodeType": "ExpressionStatement",
                        "src": "6931:20:8"
                      },
                      {
                        "id": 1886,
                        "nodeType": "PlaceholderStatement",
                        "src": "6961:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1881,
                    "nodeType": "StructuredDocumentation",
                    "src": "6689:199:8",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 1888,
                  "name": "onlyInitializing",
                  "nameLocation": "6902:16:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1882,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6918:2:8"
                  },
                  "src": "6893:76:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1900,
                    "nodeType": "Block",
                    "src": "7136:89:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7150:18:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1892,
                              "name": "_isInitializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1969,
                              "src": "7151:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7151:17:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1899,
                        "nodeType": "IfStatement",
                        "src": "7146:73:8",
                        "trueBody": {
                          "id": 1898,
                          "nodeType": "Block",
                          "src": "7170:49:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1895,
                                  "name": "NotInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1745,
                                  "src": "7191:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7191:17:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1897,
                              "nodeType": "RevertStatement",
                              "src": "7184:24:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1889,
                    "nodeType": "StructuredDocumentation",
                    "src": "6975:104:8",
                    "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                  },
                  "id": 1901,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkInitializing",
                  "nameLocation": "7093:18:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1890,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7111:2:8"
                  },
                  "returnParameters": {
                    "id": 1891,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7136:0:8"
                  },
                  "scope": 1979,
                  "src": "7084:141:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1946,
                    "nodeType": "Block",
                    "src": "7760:373:8",
                    "statements": [
                      {
                        "assignments": [
                          1907
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1907,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7855:1:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1946,
                            "src": "7826:30:8",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 1906,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1905,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "7826:20:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1736,
                                "src": "7826:20:8"
                              },
                              "referencedDeclaration": 1736,
                              "src": "7826:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1910,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1908,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "7859:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1736_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7859:26:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7826:59:8"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 1911,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1907,
                            "src": "7900:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7902:13:8",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1735,
                          "src": "7900:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1917,
                        "nodeType": "IfStatement",
                        "src": "7896:76:8",
                        "trueBody": {
                          "id": 1916,
                          "nodeType": "Block",
                          "src": "7917:55:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1913,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1742,
                                  "src": "7938:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7938:23:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1915,
                              "nodeType": "RevertStatement",
                              "src": "7931:30:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1918,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1907,
                              "src": "7985:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 1919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7987:12:8",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1732,
                            "src": "7985:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8008:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 1921,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8008:6:8",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 1920,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8003:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8003:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 1924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8016:3:8",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8003:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "7985:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1945,
                        "nodeType": "IfStatement",
                        "src": "7981:146:8",
                        "trueBody": {
                          "id": 1944,
                          "nodeType": "Block",
                          "src": "8021:106:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1926,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1907,
                                    "src": "8035:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 1928,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8037:12:8",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1732,
                                  "src": "8035:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1931,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8057:6:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 1930,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8057:6:8",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        }
                                      ],
                                      "id": 1929,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8052:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8052:12:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint64",
                                      "typeString": "type(uint64)"
                                    }
                                  },
                                  "id": 1933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8065:3:8",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8052:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8035:33:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 1935,
                              "nodeType": "ExpressionStatement",
                              "src": "8035:33:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1939,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8104:6:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 1938,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8104:6:8",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 1937,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "8099:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 1940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8099:12:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 1941,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8112:3:8",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8099:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 1936,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1750,
                                  "src": "8087:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 1942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8087:29:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1943,
                              "nodeType": "EmitStatement",
                              "src": "8082:34:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1902,
                    "nodeType": "StructuredDocumentation",
                    "src": "7231:475:8",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 1947,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "7720:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1903,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7740:2:8"
                  },
                  "returnParameters": {
                    "id": 1904,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7760:0:8"
                  },
                  "scope": 1979,
                  "src": "7711:422:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1957,
                    "nodeType": "Block",
                    "src": "8308:63:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1953,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1978,
                              "src": "8325:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1736_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 1954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8325:26:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8352:12:8",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1732,
                          "src": "8325:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 1952,
                        "id": 1956,
                        "nodeType": "Return",
                        "src": "8318:46:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1948,
                    "nodeType": "StructuredDocumentation",
                    "src": "8139:99:8",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 1958,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "8252:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8274:2:8"
                  },
                  "returnParameters": {
                    "id": 1952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1951,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1958,
                        "src": "8300:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1950,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8300:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8299:8:8"
                  },
                  "scope": 1979,
                  "src": "8243:128:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1968,
                    "nodeType": "Block",
                    "src": "8543:64:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1964,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1978,
                              "src": "8560:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1736_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8560:26:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8587:13:8",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1735,
                          "src": "8560:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1963,
                        "id": 1967,
                        "nodeType": "Return",
                        "src": "8553:47:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1959,
                    "nodeType": "StructuredDocumentation",
                    "src": "8377:105:8",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 1969,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "8496:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8511:2:8"
                  },
                  "returnParameters": {
                    "id": 1963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1962,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1969,
                        "src": "8537:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1961,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8537:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8536:6:8"
                  },
                  "scope": 1979,
                  "src": "8487:120:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1977,
                    "nodeType": "Block",
                    "src": "8827:80:8",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "8846:55:8",
                          "nodeType": "YulBlock",
                          "src": "8846:55:8",
                          "statements": [
                            {
                              "nativeSrc": "8860:31:8",
                              "nodeType": "YulAssignment",
                              "src": "8860:31:8",
                              "value": {
                                "name": "INITIALIZABLE_STORAGE",
                                "nativeSrc": "8870:21:8",
                                "nodeType": "YulIdentifier",
                                "src": "8870:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "8860:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1974,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "8860:6:8",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1739,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8870:21:8",
                            "valueSize": 1
                          }
                        ],
                        "id": 1976,
                        "nodeType": "InlineAssembly",
                        "src": "8837:64:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1970,
                    "nodeType": "StructuredDocumentation",
                    "src": "8613:67:8",
                    "text": " @dev Returns a pointer to the storage namespace."
                  },
                  "id": 1978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializableStorage",
                  "nameLocation": "8746:24:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8770:2:8"
                  },
                  "returnParameters": {
                    "id": 1975,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1974,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "8824:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "8795:30:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                          "typeString": "struct Initializable.InitializableStorage"
                        },
                        "typeName": {
                          "id": 1973,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1972,
                            "name": "InitializableStorage",
                            "nameLocations": [
                              "8795:20:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1736,
                            "src": "8795:20:8"
                          },
                          "referencedDeclaration": 1736,
                          "src": "8795:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$1736_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8794:32:8"
                  },
                  "scope": 1979,
                  "src": "8737:170:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1980,
              "src": "2349:6560:8",
              "usedErrors": [
                1742,
                1745
              ],
              "usedEvents": [
                1750
              ]
            }
          ],
          "src": "113:8797:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
          "exportedSymbols": {
            "ERC165Upgradeable": [
              2019
            ],
            "IERC165": [
              2031
            ],
            "Initializable": [
              1979
            ]
          },
          "id": 2020,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1981,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "id": 1983,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2020,
              "sourceUnit": 2032,
              "src": "140:80:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1982,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2031,
                    "src": "148:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../../proxy/utils/Initializable.sol",
              "id": 1985,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2020,
              "sourceUnit": 1980,
              "src": "221:66:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1984,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1979,
                    "src": "229:13:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1987,
                    "name": "Initializable",
                    "nameLocations": [
                      "808:13:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1979,
                    "src": "808:13:9"
                  },
                  "id": 1988,
                  "nodeType": "InheritanceSpecifier",
                  "src": "808:13:9"
                },
                {
                  "baseName": {
                    "id": 1989,
                    "name": "IERC165",
                    "nameLocations": [
                      "823:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2031,
                    "src": "823:7:9"
                  },
                  "id": 1990,
                  "nodeType": "InheritanceSpecifier",
                  "src": "823:7:9"
                }
              ],
              "canonicalName": "ERC165Upgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1986,
                "nodeType": "StructuredDocumentation",
                "src": "289:479:9",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 2019,
              "linearizedBaseContracts": [
                2019,
                2031,
                1979
              ],
              "name": "ERC165Upgradeable",
              "nameLocation": "787:17:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1995,
                    "nodeType": "Block",
                    "src": "888:7:9",
                    "statements": []
                  },
                  "id": 1996,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1993,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1992,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "871:16:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1888,
                        "src": "871:16:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "871:16:9"
                    }
                  ],
                  "name": "__ERC165_init",
                  "nameLocation": "846:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1991,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "859:2:9"
                  },
                  "returnParameters": {
                    "id": 1994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "888:0:9"
                  },
                  "scope": 2019,
                  "src": "837:58:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2001,
                    "nodeType": "Block",
                    "src": "962:7:9",
                    "statements": []
                  },
                  "id": 2002,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1999,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1998,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "945:16:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1888,
                        "src": "945:16:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "945:16:9"
                    }
                  ],
                  "name": "__ERC165_init_unchained",
                  "nameLocation": "910:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "933:2:9"
                  },
                  "returnParameters": {
                    "id": 2000,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "962:0:9"
                  },
                  "scope": 2019,
                  "src": "901:68:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2030
                  ],
                  "body": {
                    "id": 2017,
                    "nodeType": "Block",
                    "src": "1117:64:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2010,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2005,
                            "src": "1134:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2012,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2031,
                                  "src": "1154:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 2011,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "1149:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1149:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2031",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 2014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1163:11:9",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "1149:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "1134:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2009,
                        "id": 2016,
                        "nodeType": "Return",
                        "src": "1127:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2003,
                    "nodeType": "StructuredDocumentation",
                    "src": "974:56:9",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2018,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "1044:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2005,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "1069:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2018,
                        "src": "1062:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2004,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1062:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1061:20:9"
                  },
                  "returnParameters": {
                    "id": 2009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2008,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2018,
                        "src": "1111:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2007,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1111:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1110:6:9"
                  },
                  "scope": 2019,
                  "src": "1035:146:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 2020,
              "src": "769:414:9",
              "usedErrors": [
                1742,
                1745
              ],
              "usedEvents": [
                1750
              ]
            }
          ],
          "src": "114:1070:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              2031
            ]
          },
          "id": 2032,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2021,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2022,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 2031,
              "linearizedBaseContracts": [
                2031
              ],
              "name": "IERC165",
              "nameLocation": "432:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2023,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2030,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2025,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "818:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2024,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:10"
                  },
                  "returnParameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2028,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "861:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2027,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:10"
                  },
                  "scope": 2031,
                  "src": "791:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2032,
              "src": "422:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:10"
        },
        "id": 10
      },
      "contracts/system/identity-factory/identities/SMARTIdentityImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/system/identity-factory/identities/SMARTIdentityImplementation.sol",
          "exportedSymbols": {
            "ERC165Upgradeable": [
              2019
            ],
            "IERC165": [
              2031
            ],
            "IIdentity": [
              1630
            ],
            "Identity": [
              1301
            ],
            "SMARTIdentityImplementation": [
              2085
            ]
          },
          "id": 2086,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2033,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:11"
            },
            {
              "absolutePath": "@onchainid/contracts/Identity.sol",
              "file": "@onchainid/contracts/Identity.sol",
              "id": 2035,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2086,
              "sourceUnit": 1302,
              "src": "62:61:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2034,
                    "name": "Identity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1301,
                    "src": "71:8:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IIdentity.sol",
              "file": "@onchainid/contracts/interface/IIdentity.sol",
              "id": 2037,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2086,
              "sourceUnit": 1631,
              "src": "124:73:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2036,
                    "name": "IIdentity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1630,
                    "src": "133:9:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "id": 2039,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2086,
              "sourceUnit": 2032,
              "src": "198:82:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2038,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2031,
                    "src": "207:7:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
              "id": 2041,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2086,
              "sourceUnit": 2020,
              "src": "281:114:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2040,
                    "name": "ERC165Upgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2019,
                    "src": "290:17:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2042,
                    "name": "Identity",
                    "nameLocations": [
                      "518:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1301,
                    "src": "518:8:11"
                  },
                  "id": 2043,
                  "nodeType": "InheritanceSpecifier",
                  "src": "518:8:11"
                },
                {
                  "baseName": {
                    "id": 2044,
                    "name": "ERC165Upgradeable",
                    "nameLocations": [
                      "528:17:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2019,
                    "src": "528:17:11"
                  },
                  "id": 2045,
                  "nodeType": "InheritanceSpecifier",
                  "src": "528:17:11"
                }
              ],
              "canonicalName": "SMARTIdentityImplementation",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2085,
              "linearizedBaseContracts": [
                2085,
                2019,
                2031,
                1979,
                1301,
                1725,
                1630,
                1606,
                1498,
                1674,
                1712
              ],
              "name": "SMARTIdentityImplementation",
              "nameLocation": "487:27:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2055,
                    "nodeType": "Block",
                    "src": "593:3:11",
                    "statements": []
                  },
                  "id": 2056,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "583:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "575:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "575:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "575:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "587:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 2053,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2047,
                        "name": "Identity",
                        "nameLocations": [
                          "566:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1301,
                        "src": "566:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "566:26:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2046,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "563:2:11"
                  },
                  "returnParameters": {
                    "id": 2054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "593:0:11"
                  },
                  "scope": 2085,
                  "src": "552:44:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2018
                  ],
                  "body": {
                    "id": 2083,
                    "nodeType": "Block",
                    "src": "685:162:11",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2064,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2058,
                                "src": "702:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2066,
                                      "name": "IIdentity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1630,
                                      "src": "722:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IIdentity_$1630_$",
                                        "typeString": "type(contract IIdentity)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IIdentity_$1630_$",
                                        "typeString": "type(contract IIdentity)"
                                      }
                                    ],
                                    "id": 2065,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "717:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "717:15:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IIdentity_$1630",
                                    "typeString": "type(contract IIdentity)"
                                  }
                                },
                                "id": 2068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "733:11:11",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "717:27:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "702:42:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2070,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2058,
                                "src": "748:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2072,
                                      "name": "IERC165",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2031,
                                      "src": "768:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
                                        "typeString": "type(contract IERC165)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
                                        "typeString": "type(contract IERC165)"
                                      }
                                    ],
                                    "id": 2071,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "763:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "763:13:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2031",
                                    "typeString": "type(contract IERC165)"
                                  }
                                },
                                "id": 2074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "777:11:11",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "763:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "748:40:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "702:86:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2079,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2058,
                                "src": "828:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 2077,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "804:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_SMARTIdentityImplementation_$2085_$",
                                  "typeString": "type(contract super SMARTIdentityImplementation)"
                                }
                              },
                              "id": 2078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "810:17:11",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2018,
                              "src": "804:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "804:36:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "702:138:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2063,
                        "id": 2082,
                        "nodeType": "Return",
                        "src": "695:145:11"
                      }
                    ]
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "611:17:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2060,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "661:8:11"
                  },
                  "parameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "636:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2084,
                        "src": "629:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "629:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "628:20:11"
                  },
                  "returnParameters": {
                    "id": 2063,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2062,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2084,
                        "src": "679:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2061,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:6:11"
                  },
                  "scope": 2085,
                  "src": "602:245:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2086,
              "src": "478:371:11",
              "usedErrors": [
                1742,
                1745
              ],
              "usedEvents": [
                1361,
                1372,
                1383,
                1394,
                1403,
                1412,
                1518,
                1535,
                1552,
                1750
              ]
            }
          ],
          "src": "36:814:11"
        },
        "id": 11
      },
      "contracts/system/identity-factory/identities/SMARTTokenIdentityImplementation.sol": {
        "ast": {
          "absolutePath": "contracts/system/identity-factory/identities/SMARTTokenIdentityImplementation.sol",
          "exportedSymbols": {
            "ERC165Upgradeable": [
              2019
            ],
            "IERC165": [
              2031
            ],
            "IIdentity": [
              1630
            ],
            "Identity": [
              1301
            ],
            "SMARTTokenIdentityImplementation": [
              2139
            ]
          },
          "id": 2140,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2087,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".17"
              ],
              "nodeType": "PragmaDirective",
              "src": "36:24:12"
            },
            {
              "absolutePath": "@onchainid/contracts/Identity.sol",
              "file": "@onchainid/contracts/Identity.sol",
              "id": 2089,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2140,
              "sourceUnit": 1302,
              "src": "62:61:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2088,
                    "name": "Identity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1301,
                    "src": "71:8:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@onchainid/contracts/interface/IIdentity.sol",
              "file": "@onchainid/contracts/interface/IIdentity.sol",
              "id": 2091,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2140,
              "sourceUnit": 1631,
              "src": "124:73:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2090,
                    "name": "IIdentity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1630,
                    "src": "133:9:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "id": 2093,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2140,
              "sourceUnit": 2032,
              "src": "198:82:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2092,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2031,
                    "src": "207:7:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
              "id": 2095,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2140,
              "sourceUnit": 2020,
              "src": "281:114:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2094,
                    "name": "ERC165Upgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2019,
                    "src": "290:17:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2096,
                    "name": "Identity",
                    "nameLocations": [
                      "596:8:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1301,
                    "src": "596:8:12"
                  },
                  "id": 2097,
                  "nodeType": "InheritanceSpecifier",
                  "src": "596:8:12"
                },
                {
                  "baseName": {
                    "id": 2098,
                    "name": "ERC165Upgradeable",
                    "nameLocations": [
                      "606:17:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2019,
                    "src": "606:17:12"
                  },
                  "id": 2099,
                  "nodeType": "InheritanceSpecifier",
                  "src": "606:17:12"
                }
              ],
              "canonicalName": "SMARTTokenIdentityImplementation",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2139,
              "linearizedBaseContracts": [
                2139,
                2019,
                2031,
                1979,
                1301,
                1725,
                1630,
                1606,
                1498,
                1674,
                1712
              ],
              "name": "SMARTTokenIdentityImplementation",
              "nameLocation": "560:32:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2109,
                    "nodeType": "Block",
                    "src": "671:3:12",
                    "statements": []
                  },
                  "id": 2110,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "661:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "653:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "653:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "653:10:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 2107,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2101,
                        "name": "Identity",
                        "nameLocations": [
                          "644:8:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1301,
                        "src": "644:8:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "644:26:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "641:2:12"
                  },
                  "returnParameters": {
                    "id": 2108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "671:0:12"
                  },
                  "scope": 2139,
                  "src": "630:44:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2018
                  ],
                  "body": {
                    "id": 2137,
                    "nodeType": "Block",
                    "src": "763:162:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2118,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2112,
                                "src": "780:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2120,
                                      "name": "IIdentity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1630,
                                      "src": "800:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IIdentity_$1630_$",
                                        "typeString": "type(contract IIdentity)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IIdentity_$1630_$",
                                        "typeString": "type(contract IIdentity)"
                                      }
                                    ],
                                    "id": 2119,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "795:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "795:15:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IIdentity_$1630",
                                    "typeString": "type(contract IIdentity)"
                                  }
                                },
                                "id": 2122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "811:11:12",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "795:27:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "780:42:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2124,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2112,
                                "src": "826:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2126,
                                      "name": "IERC165",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2031,
                                      "src": "846:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
                                        "typeString": "type(contract IERC165)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IERC165_$2031_$",
                                        "typeString": "type(contract IERC165)"
                                      }
                                    ],
                                    "id": 2125,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "841:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2127,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "841:13:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2031",
                                    "typeString": "type(contract IERC165)"
                                  }
                                },
                                "id": 2128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "855:11:12",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "841:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "826:40:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "780:86:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2133,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2112,
                                "src": "906:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 2131,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "882:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_SMARTTokenIdentityImplementation_$2139_$",
                                  "typeString": "type(contract super SMARTTokenIdentityImplementation)"
                                }
                              },
                              "id": 2132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "888:17:12",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2018,
                              "src": "882:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 2134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "882:36:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "780:138:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2117,
                        "id": 2136,
                        "nodeType": "Return",
                        "src": "773:145:12"
                      }
                    ]
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "689:17:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2114,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "739:8:12"
                  },
                  "parameters": {
                    "id": 2113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "714:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2138,
                        "src": "707:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2111,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "707:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "706:20:12"
                  },
                  "returnParameters": {
                    "id": 2117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2116,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2138,
                        "src": "757:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2115,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "757:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "756:6:12"
                  },
                  "scope": 2139,
                  "src": "680:245:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2140,
              "src": "551:376:12",
              "usedErrors": [
                1742,
                1745
              ],
              "usedEvents": [
                1361,
                1372,
                1383,
                1394,
                1403,
                1412,
                1518,
                1535,
                1552,
                1750
              ]
            }
          ],
          "src": "36:892:12"
        },
        "id": 12
      }
    },
    "contracts": {
      "@onchainid/contracts/Identity.sol": {
        "Identity": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialManagementKey",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_isLibrary",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                }
              ],
              "name": "addClaim",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimRequestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_type",
                  "type": "uint256"
                }
              ],
              "name": "addKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_approve",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                }
              ],
              "name": "getClaimIdsByTopic",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "claimIds",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "purposes",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKeyPurposes",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_purposes",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "getKeysByPurpose",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "keys",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                }
              ],
              "name": "getRecoveredAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialManagementKey",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IIdentity",
                  "name": "_identity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimTopic",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "isClaimValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "claimValid",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "keyHasPurpose",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "result",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "removeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "removeKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "finalize_allocation": {
                  "entryPoint": 681,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346102a45760408161279f803803809161001f82856102a9565b8339810103126102a45780516001600160a01b03811691908290036102a457602001518015908115036102a45761ffff19600654169081600655600014610298575080156102535760065460ff811615801561024a575b15610205576101019061ffff19161760065560405160208101918252602081526100a16040826102a9565b519020806000526001602052806002604060002001556040516020810181811060018060401b038211176101ae5760405260018152816000526001602052604060002090815460018355806001106101db575b509060005260206000209060005b600181106101c4575050508060005260016020526001806040600020015560016000526002602052604060002090815490680100000000000000008210156101ae57600182018084558210156101985780600193928493600052602060002001557f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a45b6040516124d290816102cd8239f35b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600190602060ff8451169301928185015501610102565b826000526001602060002091820191015b8181106101f957506100f4565b600081556001016101ec565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b50303b15610076565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b60011760065550610189565b600080fd5b601f909101601f19168101906001600160401b038211908210176101ae5760405256fe6080604052600436101561001257600080fd5b60003560e01c806312aaac70146101175780631d381240146101125780634eee424a1461010d57806353d413c51461010857806354fd4d5014610103578063747442d3146100fe57806380e9e9e1146100f95780639010f726146100f4578063b1a34e0d146100ef578063b61d27f6146100ea578063c0969a6e146100e5578063c3b129e3146100e0578063c4d66de8146100db578063c9100bcb146100d6578063d202158d146100d15763fb307b34146100cc57600080fd5b611176565b611155565b6110e4565b610ef2565b610ea1565b610e32565b610c7f565b610bcc565b610a78565b610a03565b61097f565b61092e565b610654565b6103aa565b6101b4565b610150565b906020808351928381520192019060005b81811061013a5750505090565b825184526020938401939092019160010161012d565b346101af5760203660031901126101af576101a060043560009081526001602081905260409091209081015460028201549161018b906111b6565b9160405193849360608552606085019061011c565b91602084015260408301520390f35b600080fd5b346101af5760603660031901126101af57600435602435604435916101e5600160ff60065460081c16151514611201565b303314801561037a575b6101f890611269565b80600261020f826000526001602052604060002090565b0154036103185761023261022d826000526001602052604060002090565b6111b6565b9060005b82518110156102a7578361024a8285611391565b511461025857600101610236565b60405162461bcd60e51b815260206004820152602160248201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736044820152606560f81b6064820152608490fd5b50929190506102c9816102c4856000526001602052604060002090565b6113c2565b6102e1836102c4836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a46001815280602081015b0390f35b9190826002610331826000526001602052604060002090565b015561035c6103406020610b4b565b828152610357856000526001602052604060002090565b611343565b816001610373856000526001602052604060002090565b01556102c9565b506101f86103a360405160208101903382526020815261039b604082610b29565b519020612203565b90506101ef565b346101af5760203660031901126101af576004356103d4600160ff60065460081c16151514611201565b3033148015610624575b6103e7906113fb565b6103fb816000526004602052604060002090565b5480156105cb57600091610419826000526005602052604060002090565b54925b8161044761043d83610438876000526005602052604060002090565b6113aa565b90549060031b1c90565b146105b15761045590611462565b83811061041c57916104b06105a0936104aa61049561043d6105a5985b61048f610489886000526005602052604060002090565b91611476565b906113aa565b91610438856000526005602052604060002090565b906112e4565b6104cc6104c7826000526005602052604060002090565b61149b565b60016104e2836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a61052e6002610520846000526004602052604060002090565b01546001600160a01b031690565b6003610544846000526004602052604060002090565b019061058d600461055f866000526004602052604060002090565b016005610576876000526004602052604060002090565b019060405194859460018060a01b0316998561158e565b0390a46000526004602052604060002090565b611623565b60405160018152602090f35b916104b06105a0936104aa61049561043d6105a598610472565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506103e761064d604051602081019033825260208152610645604082610b29565b51902061228a565b90506103de565b346101af5760403660031901126101af57600435602435610681600160ff60065460081c16151514611201565b30331480156108c5575b61069490611269565b6106b68260026106ae826000526001602052604060002090565b01541461165b565b6106cd61022d836000526001602052604060002090565b9060005b816106dc8285611391565b5114610752576106eb90611462565b90825182146106fa57906106d1565b60405162461bcd60e51b815260206004820152602a60248201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604482015269636820707572706f736560b01b6064820152608490fd5b6107706107686107628551611476565b85611391565b519184611391565b5261078e82610789856000526001602052604060002090565b6116b1565b6107a56104c7846000526001602052604060002090565b600081815260026020526040812054905b846107d261043d83610438876000526002602052604060002090565b146108b3576107e090611462565b8181106107b6576104aa61080c61043d610821945b61048f610489886000526002602052604060002090565b91610438856000526002602052604060002090565b6108386104c7826000526002602052604060002090565b61085a6001610851856000526001602052604060002090565b01549251611476565b15610892575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b6108ae6108a9846000526001602052604060002090565b61172a565b610860565b6104aa61080c61043d610821946107f5565b506106946108e660405160208101903382526020815261039b604082610b29565b905061068b565b919082519283825260005b848110610919575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016108f8565b346101af5760003660031901126101af5761031460408051906109518183610b29565b6005825264322e322e3160d81b6020830152519182916020835260208301906108ed565b801515036101af57565b346101af5760403660031901126101af5760206109bf6024356004356109a482610975565b6109ba600160ff60065460081c16151514611201565b611974565b6040519015158152f35b602060408183019282815284518094520192019060005b8181106109ed5750505090565b82518452602093840193909201916001016109e0565b346101af5760203660031901126101af576004356000526005602052604060002060405190816020825491828152019160005260206000209060005b818110610a625761031485610a5681870382610b29565b604051918291826109c9565b8254845260209093019260019283019201610a3f565b346101af5760203660031901126101af576004356000526002602052604060002060405190816020825491828152019160005260206000209060005b818110610acb5761031485610a5681870382610b29565b8254845260209093019260019283019201610ab4565b6001600160a01b038116036101af57565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b2457604052565b610af2565b90601f8019910116810190811067ffffffffffffffff821117610b2457604052565b90610b596040519283610b29565b565b67ffffffffffffffff8111610b2457601f01601f191660200190565b929192610b8382610b5b565b91610b916040519384610b29565b8294818452818301116101af578281602093846000960137010152565b9080601f830112156101af57816020610bc993359101610b77565b90565b346101af5760c03660031901126101af57602435604435600435610bef82610ae1565b60643567ffffffffffffffff81116101af57610c0f903690600401610bae565b60843567ffffffffffffffff81116101af57610c2f903690600401610bae565b9060a4359367ffffffffffffffff85116101af57366023860112156101af5761031495610c69610c6f963690602481600401359101610b77565b94611c59565b6040519081529081906020820190565b60603660031901126101af57600435610c9781610ae1565b6024359060443567ffffffffffffffff81116101af57610314927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610ce4610d9a933690600401610bae565b90610cfb600160ff60065460081c16151514611201565b6000549481610d388793610d19856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610d4f856000526003602052604060002090565b0155610d71846002610d6b866000526003602052604060002090565b01611fa9565b610d7c600054611462565b6000556040516001600160a01b0391909116958694829190826120a5565b0390a4604080513360208201908152610dc79290919061039b90829081015b03601f198101835282610b29565b15610de75750610dd68161175e565b506040519081529081906020820190565b30141580610e04575b15610c6f57610dfe8161175e565b50610c6f565b50604080513360208201908152610e2d92909190610e259082908101610db9565b519020612305565b610df0565b346101af5760803660031901126101af57600435610e4f81610ae1565b6024359060443567ffffffffffffffff81116101af57610e73903690600401610bae565b906064359167ffffffffffffffff83116101af57602093610e9b6109bf943690600401610bae565b926120b6565b346101af5760403660031901126101af5760043567ffffffffffffffff81116101af57610ee0610ed76020923690600401610bae565b6024359061216d565b6040516001600160a01b039091168152f35b346101af5760203660031901126101af57600435610f0f81610ae1565b6001600160a01b0381161561104e57600654600191829160ff16158015611045575b610f3a90612415565b610f4c600160ff196006541617600655565b610f6061010061ff00196006541617600655565b604080516001600160a01b03909216602083019081529190610f859082908101610db9565b519020806002610f9f826000526001602052604060002090565b0155610fcb610fae6020610b4b565b60018152610fc6836000526001602052604060002090565b612461565b610fea82610fe3836000526001602052604060002090565b0160019055565b6001600052600260205261101e817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e06113c2565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610f31565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b9491936110d693610bc997956110c8938852602088015260018060a01b0316604087015260c0606087015260c08601906108ed565b9084820360808601526108ed565b9160a08184039101526108ed565b346101af5760203660031901126101af5760048035600090815260208290526040902080546001820154600283015490939192610314926001600160a01b0390921691600582019190810190611148906111429081906003016121e8565b926121e8565b9260405196879687611093565b346101af5760403660031901126101af5760206109bf602435600435612380565b346101af5760203660031901126101af5760043560005260016020526103146111a260406000206111b6565b60405191829160208352602083019061011c565b906040519182815491828252602082019060005260206000209260005b8181106111e8575050610b5992500383610b29565b84548352600194850194879450602090930192016111d3565b1561120857565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b1561127057565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b916112fe9183549060031b91821b91600019901b19161790565b9055565b81811061130d575050565b60008155600101611302565b8054600182558060011061132b575050565b610b5991600052600160206000209182019101611302565b9061134d82611319565b9060005260206000209060005b6001811061136757505050565b60019060208351930192818501550161135a565b634e487b7160e01b600052603260045260246000fd5b80518210156113a55760209160051b010190565b61137b565b80548210156113a55760005260206000200190600090565b805490600160401b821015610b2457816113e49160016112fe940181556113aa565b819391549060031b91821b91600019901b19161790565b1561140257565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b60001981146114715760010190565b6112ce565b60001981019190821161147157565b634e487b7160e01b600052603160045260246000fd5b805480156114cc5760001901906114c76114b583836113aa565b81929154906000199060031b1b191690565b905555565b611485565b90600182811c92168015611501575b60208310146114eb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916114e0565b6000929181549161151b836114d1565b8083529260018116908115611571575060011461153757505050565b60009081526020812093945091925b838310611557575060209250010190565b600181602092949394548385870101520191019190611546565b915050602093945060ff929192191683830152151560051b010190565b926115ae610bc995936115bc93865260806020870152608086019061150b565b90848203604086015261150b565b91606081840391015261150b565b6115d481546114d1565b90816115de575050565b601f82116001146115f0576000905550565b611612610b5992826000526001601f6020600020920160051c82019101611302565b600081815260208120918190559055565b600590600081556000600182015560006002820155611644600382016115ca565b611650600482016115ca565b016115d481546114d1565b1561166257565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b81519167ffffffffffffffff8311610b2457600160401b8311610b2457602090825484845580851061170d575b500190600052602060002060005b8381106116f95750505050565b6001906020845194019381840155016116ec565b611724908460005285846000209182019101611302565b386116de565b6002600091805483825580611745575b508260018201550155565b8184526020842061175891810190611302565b3861173a565b6001610bc9916109ba8260ff60065460081c16151514611201565b1561178057565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b156117dc57565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b1561182857565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b1561187457565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b600092918154916118d5836114d1565b926001811690811561192057506001146118ee57505050565b909192935060005260206000206000905b83821061190c5750500190565b6001816020925484860152019101906118ff565b60ff191683525050811515909102019150565b3d1561195e573d9061194482610b5b565b916119526040519384610b29565b82523d6000602084013e565b606090565b906020610bc992818152019061150b565b906001906119856000548410611779565b6119b86119b36119af60036119a4876000526003602052604060002090565b015460081c60ff1690565b1590565b6117d5565b6119dc6119cf846000526003602052604060002090565b546001600160a01b031690565b3090838060a01b031614600014611c2d57604080513360208201908152611a1492611a0f929061039b9082908101610db9565b61186d565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c0457611a726003611a64836000526003602052604060002090565b01805460ff19166001179055565b600080611a8c6119cf846000526003602052604060002090565b611aca6001611aa5866000526003602052604060002090565b01546002611abd876000526003602052604060002090565b01604051928380926118c5565b03925af1611ad6611933565b5015611b9257611b056003611af5836000526003602052604060002090565b01805461ff001916610100179055565b611b1c6119cf826000526003602052604060002090565b6001611b32836000526003602052604060002090565b0154917f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8611b8a6002611b6f846000526003602052604060002090565b6040516001600160a01b039096169592839290910182611963565b0390a4600190565b611ba96119cf826000526003602052604060002090565b6001611bbf836000526003602052604060002090565b0154917fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68611bfc6002611b6f846000526003602052604060002090565b0390a4600090565b6003611c1d611c28926000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611c5492611c4f9290610e259082908101610db9565b611821565b611a14565b9294909394611c74600160ff60065460081c16151514611201565b3033148015611ea7575b611c87906113fb565b6001600160a01b03831694308603611e30575b604080516001600160a01b03861660208201908152918101879052611cc28160608101610db9565b51902096879486611cdd876000526004602052604060002090565b55826001611cf5886000526004602052604060002090565b0155611d11846003610d6b896000526004602052604060002090565b611d2b826004610d6b896000526004602052604060002090565b611d45856005610d6b896000526004602052604060002090565b87611d6e611d6260026105208a6000526004602052604060002090565b6001600160a01b031690565b14611dfd5793611df791611deb7f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611db5896102c48c6000526005602052604060002090565b6002611dcb8a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b60405194859485612077565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611df79160405194859485612077565b60405163604b4d3760e11b815260208180611e518b878b3060048601611ee4565b03818a5afa8015611ea257611e6e91600091611e73575b50611f28565b611c9a565b611e95915060203d602011611e9b575b611e8d8183610b29565b810190611ecf565b38611e68565b503d611e83565b611f1c565b50611c87611ec8604051602081019033825260208152610645604082610b29565b9050611c7e565b908160209103126101af5751610bc981610975565b92610bc99492611f0e9260018060a01b0316855260208501526080604085015260808401906108ed565b9160608184039101526108ed565b6040513d6000823e3d90fd5b15611f2f57565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b9190601f8111611f7357505050565b610b59926000526020600020906020601f840160051c83019310611f9f575b601f0160051c0190611302565b9091508190611f92565b919091825167ffffffffffffffff8111610b2457611fd181611fcb84546114d1565b84611f64565b6020601f821160011461200e5781906112fe939495600092612003575b50508160011b916000199060031b1c19161790565b015190503880611fee565b601f1982169061202384600052602060002090565b9160005b81811061205f57509583600195969710612046575b505050811b019055565b015160001960f88460031b161c1916905538808061203c565b9192602060018192868b015181550194019201612027565b92612097610bc99593611f0e9386526080602087015260808601906108ed565b9084820360408601526108ed565b906020610bc99281815201906108ed565b61215f936120ef61213a9493610db9604051938492602084019660018060a01b03168752604084015260608084015260808301906108ed565b51902060405161213181610db9602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b5190209061216d565b604080516001600160a01b039092166020830190815291906106459082908101610db9565b61216857600090565b600190565b60009060418151036121e25760208101519160606040830151920151901a91601b83106121cc575b6040805194855260ff9093166020858101919091529284015260608301526000808052909160809060015afa15611ea25760005190565b9091601b019060ff821161147157909190612195565b50905090565b90610b596121fc926040519384809261150b565b0383610b29565b6000526001602052604060002060026040519161221f83610b08565b612228816111b6565b8352600181015460208401520154806040830152156122845760005b8151805182101561227c5761225b82600192611391565b51148015612277575b61227057600101612244565b5050600190565b612264565b505050600090565b50600090565b600052600160205260406000206002604051916122a683610b08565b6122af816111b6565b8352600181015460208401520154806040830152156122845760005b8151805182101561227c57816122e091611391565b51600181149081156122fa575b50612270576001016122cb565b6003915014386122ed565b6000526001602052604060002060026040519161232183610b08565b61232a816111b6565b8352600181015460208401520154806040830152156122845760005b8151805182101561227c578161235b91611391565b5160018114908115612375575b5061227057600101612346565b600291501438612368565b600052600160205260406000209060026040519261239d84610b08565b6123a6816111b6565b84526001810154602085015201548060408401521561240e5760005b8251805182101561240557816123d791611391565b5182600182149182156123fb575b50506123f3576001016123c2565b505050600190565b14905082386123e5565b50505050600090565b5050600090565b1561241c57565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b9061246b82611319565b9060005260206000209060005b6001811061248557505050565b600190602060ff845116930192818501550161247856fea2646970667358221220fddfb2373bb268d85d269be1383eb0ea7cc3fc46041db9b6adb50c1616d3982e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2A4 JUMPI PUSH1 0x40 DUP2 PUSH2 0x279F DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1F DUP3 DUP6 PUSH2 0x2A9 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x2A4 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x2A4 JUMPI PUSH1 0x20 ADD MLOAD DUP1 ISZERO SWAP1 DUP2 ISZERO SUB PUSH2 0x2A4 JUMPI PUSH2 0xFFFF NOT PUSH1 0x6 SLOAD AND SWAP1 DUP2 PUSH1 0x6 SSTORE PUSH1 0x0 EQ PUSH2 0x298 JUMPI POP DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x6 SLOAD PUSH1 0xFF DUP2 AND ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI JUMPDEST ISZERO PUSH2 0x205 JUMPI PUSH2 0x101 SWAP1 PUSH2 0xFFFF NOT AND OR PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0xA1 PUSH1 0x40 DUP3 PUSH2 0x2A9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1AE JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 DUP4 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x1DB JUMPI JUMPDEST POP SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x1C4 JUMPI POP POP POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP5 SSTORE DUP3 LT ISZERO PUSH2 0x198 JUMPI DUP1 PUSH1 0x1 SWAP4 SWAP3 DUP5 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D2 SWAP1 DUP2 PUSH2 0x2CD DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x102 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1F9 JUMPI POP PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 OR PUSH1 0x6 SSTORE POP PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x1AE JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4EEE424A EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x747442D3 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x80E9E9E1 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB1A34E0D EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xC0969A6E EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xC3B129E3 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0xD1 JUMPI PUSH4 0xFB307B34 EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0xE32 JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x13A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x12D JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x1A0 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x18B SWAP1 PUSH2 0x11B6 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x11C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1E5 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x37A JUMPI JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x1269 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH2 0x20F DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x318 JUMPI PUSH2 0x232 PUSH2 0x22D DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2A7 JUMPI DUP4 PUSH2 0x24A DUP3 DUP6 PUSH2 0x1391 JUMP JUMPDEST MLOAD EQ PUSH2 0x258 JUMPI PUSH1 0x1 ADD PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666C6963743A204B657920616C72656164792068617320707572706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2C4 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x2E1 DUP4 PUSH2 0x2C4 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH2 0x331 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x35C PUSH2 0x340 PUSH1 0x20 PUSH2 0xB4B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x357 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x373 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x2C9 JUMP JUMPDEST POP PUSH2 0x1F8 PUSH2 0x3A3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x39B PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EF JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3D4 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x624 JUMPI JUMPDEST PUSH2 0x3E7 SWAP1 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x3FB DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x419 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 JUMPDEST DUP2 PUSH2 0x447 PUSH2 0x43D DUP4 PUSH2 0x438 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST EQ PUSH2 0x5B1 JUMPI PUSH2 0x455 SWAP1 PUSH2 0x1462 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x41C JUMPI SWAP2 PUSH2 0x4B0 PUSH2 0x5A0 SWAP4 PUSH2 0x4AA PUSH2 0x495 PUSH2 0x43D PUSH2 0x5A5 SWAP9 JUMPDEST PUSH2 0x48F PUSH2 0x489 DUP9 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1476 JUMP JUMPDEST SWAP1 PUSH2 0x13AA JUMP JUMPDEST SWAP2 PUSH2 0x438 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x4C7 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x4E2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 DUP3 PUSH32 0x3CF57863A89432C61C4A27073C6EE39E8A764BFF5A05AEBFBCDCDC80B2E6130A PUSH2 0x52E PUSH1 0x2 PUSH2 0x520 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x544 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH2 0x58D PUSH1 0x4 PUSH2 0x55F DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x5 PUSH2 0x576 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP6 PUSH2 0x158E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH2 0x4B0 PUSH2 0x5A0 SWAP4 PUSH2 0x4AA PUSH2 0x495 PUSH2 0x43D PUSH2 0x5A5 SWAP9 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A205468657265206973206E6F20636C61696D2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1A5D1A081D1A1A5CC81251 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x64D PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x645 PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x228A JUMP JUMPDEST SWAP1 POP PUSH2 0x3DE JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x681 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH2 0x694 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x6B6 DUP3 PUSH1 0x2 PUSH2 0x6AE DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD EQ PUSH2 0x165B JUMP JUMPDEST PUSH2 0x6CD PUSH2 0x22D DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 PUSH2 0x6DC DUP3 DUP6 PUSH2 0x1391 JUMP JUMPDEST MLOAD EQ PUSH2 0x752 JUMPI PUSH2 0x6EB SWAP1 PUSH2 0x1462 JUMP JUMPDEST SWAP1 DUP3 MLOAD DUP3 EQ PUSH2 0x6FA JUMPI SWAP1 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B657920646F65736E27742068617665207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x636820707572706F7365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x770 PUSH2 0x768 PUSH2 0x762 DUP6 MLOAD PUSH2 0x1476 JUMP JUMPDEST DUP6 PUSH2 0x1391 JUMP JUMPDEST MLOAD SWAP2 DUP5 PUSH2 0x1391 JUMP JUMPDEST MSTORE PUSH2 0x78E DUP3 PUSH2 0x789 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x4C7 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 PUSH2 0x7D2 PUSH2 0x43D DUP4 PUSH2 0x438 DUP8 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST EQ PUSH2 0x8B3 JUMPI PUSH2 0x7E0 SWAP1 PUSH2 0x1462 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x7B6 JUMPI PUSH2 0x4AA PUSH2 0x80C PUSH2 0x43D PUSH2 0x821 SWAP5 JUMPDEST PUSH2 0x48F PUSH2 0x489 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x438 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x4C7 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x85A PUSH1 0x1 PUSH2 0x851 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP3 MLOAD PUSH2 0x1476 JUMP JUMPDEST ISZERO PUSH2 0x892 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x8AE PUSH2 0x8A9 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x80C PUSH2 0x43D PUSH2 0x821 SWAP5 PUSH2 0x7F5 JUMP JUMPDEST POP PUSH2 0x694 PUSH2 0x8E6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x39B PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST SWAP1 POP PUSH2 0x68B JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x919 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x8F8 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x314 PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x951 DUP2 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x1AF JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH2 0x9BF PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x9A4 DUP3 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x9BA PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x9ED JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x9E0 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA62 JUMPI PUSH2 0x314 DUP6 PUSH2 0xA56 DUP2 DUP8 SUB DUP3 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x9C9 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xA3F JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xACB JUMPI PUSH2 0x314 DUP6 PUSH2 0xA56 DUP2 DUP8 SUB DUP3 PUSH2 0xB29 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1AF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB24 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB24 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xB59 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xB29 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB24 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xB83 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 PUSH2 0xB91 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB29 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AF JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AF JUMPI DUP2 PUSH1 0x20 PUSH2 0xBC9 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xBEF DUP3 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xC0F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xC2F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1AF JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x314 SWAP6 PUSH2 0xC69 PUSH2 0xC6F SWAP7 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP5 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC97 DUP2 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x314 SWAP3 PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 SWAP3 PUSH2 0xCE4 PUSH2 0xD9A SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP1 PUSH2 0xCFB PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP5 DUP2 PUSH2 0xD38 DUP8 SWAP4 PUSH2 0xD19 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH2 0xD4F DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xD71 DUP5 PUSH1 0x2 PUSH2 0xD6B DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xD7C PUSH1 0x0 SLOAD PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP6 DUP7 SWAP5 DUP3 SWAP2 SWAP1 DUP3 PUSH2 0x20A5 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xDC7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x39B SWAP1 DUP3 SWAP1 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xB29 JUMP JUMPDEST ISZERO PUSH2 0xDE7 JUMPI POP PUSH2 0xDD6 DUP2 PUSH2 0x175E JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST ADDRESS EQ ISZERO DUP1 PUSH2 0xE04 JUMPI JUMPDEST ISZERO PUSH2 0xC6F JUMPI PUSH2 0xDFE DUP2 PUSH2 0x175E JUMP JUMPDEST POP PUSH2 0xC6F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xE2D SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE25 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2305 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE4F DUP2 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xE73 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1AF JUMPI PUSH1 0x20 SWAP4 PUSH2 0xE9B PUSH2 0x9BF SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP3 PUSH2 0x20B6 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xEE0 PUSH2 0xED7 PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF0F DUP2 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x104E JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1045 JUMPI JUMPDEST PUSH2 0xF3A SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xF60 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0xF85 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x2 PUSH2 0xF9F DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xFCB PUSH2 0xFAE PUSH1 0x20 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH2 0xFC6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2461 JUMP JUMPDEST PUSH2 0xFEA DUP3 PUSH2 0xFE3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x101E DUP2 PUSH32 0xE90B7BCEB6E7DF5418FB78D8EE546E97C83A08BBCCC01A0644D599CCD2A7C2E0 PUSH2 0x13C2 JUMP JUMPDEST PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 PUSH2 0x10D6 SWAP4 PUSH2 0xBC9 SWAP8 SWAP6 PUSH2 0x10C8 SWAP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x314 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x5 DUP3 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1148 SWAP1 PUSH2 0x1142 SWAP1 DUP2 SWAP1 PUSH1 0x3 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP3 PUSH2 0x21E8 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1093 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH2 0x9BF PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2380 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x314 PUSH2 0x11A2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x11C JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x11E8 JUMPI POP POP PUSH2 0xB59 SWAP3 POP SUB DUP4 PUSH2 0xB29 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x11D3 JUMP JUMPDEST ISZERO PUSH2 0x1208 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E746572616374696E67207769746820746865206C69627261727920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B1BA1034B9903337B93134B23232B717 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1270 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x65206D616E6167656D656E74206B6579 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x12FE SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x130D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1302 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x132B JUMPI POP POP JUMP JUMPDEST PUSH2 0xB59 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST SWAP1 PUSH2 0x134D DUP3 PUSH2 0x1319 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x1367 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x135A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xB24 JUMPI DUP2 PUSH2 0x13E4 SWAP2 PUSH1 0x1 PUSH2 0x12FE SWAP5 ADD DUP2 SSTORE PUSH2 0x13AA JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1402 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6520636C61696D207369676E6572206B6579 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1471 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1471 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x14C7 PUSH2 0x14B5 DUP4 DUP4 PUSH2 0x13AA JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1501 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x14EB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x151B DUP4 PUSH2 0x14D1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1571 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1537 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1557 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x15AE PUSH2 0xBC9 SWAP6 SWAP4 PUSH2 0x15BC SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x150B JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x150B JUMP JUMPDEST PUSH2 0x15D4 DUP2 SLOAD PUSH2 0x14D1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x15DE JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F0 JUMPI PUSH1 0x0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1612 PUSH2 0xB59 SWAP3 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP2 DUP2 SWAP1 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH1 0x0 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x1644 PUSH1 0x3 DUP3 ADD PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x1650 PUSH1 0x4 DUP3 ADD PUSH2 0x15CA JUMP JUMPDEST ADD PUSH2 0x15D4 DUP2 SLOAD PUSH2 0x14D1 JUMP JUMPDEST ISZERO PUSH2 0x1662 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B65792069736E277420726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB24 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xB24 JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x170D JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x16F9 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x1724 SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST CODESIZE PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP1 SLOAD DUP4 DUP3 SSTORE DUP1 PUSH2 0x1745 JUMPI JUMPDEST POP DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH2 0x1758 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1302 JUMP JUMPDEST CODESIZE PUSH2 0x173A JUMP JUMPDEST PUSH1 0x1 PUSH2 0xBC9 SWAP2 PUSH2 0x9BA DUP3 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ISZERO PUSH2 0x1780 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F76652061206E6F6E2D6578697374696E67206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32B1BABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x17DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1828 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1874 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F742068617665206D616E6167656D656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B6579 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x18D5 DUP4 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1920 JUMPI POP PUSH1 0x1 EQ PUSH2 0x18EE JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x190C JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x195E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1944 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 PUSH2 0x1952 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB29 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xBC9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1985 PUSH1 0x0 SLOAD DUP5 LT PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x19B8 PUSH2 0x19B3 PUSH2 0x19AF PUSH1 0x3 PUSH2 0x19A4 DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x19DC PUSH2 0x19CF DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADDRESS SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x0 EQ PUSH2 0x1C2D JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1A14 SWAP3 PUSH2 0x1A0F SWAP3 SWAP1 PUSH2 0x39B SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO ISZERO DUP2 MSTORE DUP4 SWAP1 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP1 PUSH1 0x20 SWAP1 LOG2 ISZERO ISZERO SUB PUSH2 0x1C04 JUMPI PUSH2 0x1A72 PUSH1 0x3 PUSH2 0x1A64 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A8C PUSH2 0x19CF DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1ACA PUSH1 0x1 PUSH2 0x1AA5 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x2 PUSH2 0x1ABD DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x18C5 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH2 0x1AD6 PUSH2 0x1933 JUMP JUMPDEST POP ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B05 PUSH1 0x3 PUSH2 0x1AF5 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B1C PUSH2 0x19CF DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1B32 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 PUSH2 0x1B8A PUSH1 0x2 PUSH2 0x1B6F DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 ADD DUP3 PUSH2 0x1963 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1BA9 PUSH2 0x19CF DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BBF DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 PUSH2 0x1BFC PUSH1 0x2 PUSH2 0x1B6F DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1C1D PUSH2 0x1C28 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1C54 SWAP3 PUSH2 0x1C4F SWAP3 SWAP1 PUSH2 0xE25 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP5 SWAP1 SWAP4 SWAP5 PUSH2 0x1C74 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x1EA7 JUMPI JUMPDEST PUSH2 0x1C87 SWAP1 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 ADDRESS DUP7 SUB PUSH2 0x1E30 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x1CC2 DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP7 PUSH2 0x1CDD DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP3 PUSH1 0x1 PUSH2 0x1CF5 DUP9 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1D11 DUP5 PUSH1 0x3 PUSH2 0xD6B DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1D2B DUP3 PUSH1 0x4 PUSH2 0xD6B DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1D45 DUP6 PUSH1 0x5 PUSH2 0xD6B DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1D6E PUSH2 0x1D62 PUSH1 0x2 PUSH2 0x520 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1DFD JUMPI SWAP4 PUSH2 0x1DF7 SWAP2 PUSH2 0x1DEB PUSH32 0x46149B18AA084502C3F12BC75E19EDA8BDA8D102B82CCE8474677A6D0D5F43C5 SWAP7 PUSH2 0x1DB5 DUP10 PUSH2 0x2C4 DUP13 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1DCB DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x2077 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST POP PUSH32 0x3BAB293FC00DB832D7619A9299914251B8747C036867EC056CBD506F60135B13 SWAP4 PUSH2 0x1DF7 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x1E51 DUP12 DUP8 DUP12 ADDRESS PUSH1 0x4 DUP7 ADD PUSH2 0x1EE4 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1EA2 JUMPI PUSH2 0x1E6E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1E73 JUMPI JUMPDEST POP PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x1E95 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E9B JUMPI JUMPDEST PUSH2 0x1E8D DUP2 DUP4 PUSH2 0xB29 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1ECF JUMP JUMPDEST CODESIZE PUSH2 0x1E68 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x1F1C JUMP JUMPDEST POP PUSH2 0x1C87 PUSH2 0x1EC8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x645 PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1AF JUMPI MLOAD PUSH2 0xBC9 DUP2 PUSH2 0x975 JUMP JUMPDEST SWAP3 PUSH2 0xBC9 SWAP5 SWAP3 PUSH2 0x1F0E SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F2F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420636C61696D PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1F73 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xB59 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1F9F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1302 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB24 JUMPI PUSH2 0x1FD1 DUP2 PUSH2 0x1FCB DUP5 SLOAD PUSH2 0x14D1 JUMP JUMPDEST DUP5 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x200E JUMPI DUP2 SWAP1 PUSH2 0x12FE SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x2003 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH2 0x2023 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x205F JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2046 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x203C JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2027 JUMP JUMPDEST SWAP3 PUSH2 0x2097 PUSH2 0xBC9 SWAP6 SWAP4 PUSH2 0x1F0E SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xBC9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST PUSH2 0x215F SWAP4 PUSH2 0x20EF PUSH2 0x213A SWAP5 SWAP4 PUSH2 0xDB9 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2131 DUP2 PUSH2 0xDB9 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH1 0x3C SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP3 MSTORE PUSH1 0x1C DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0x645 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x2168 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x41 DUP2 MLOAD SUB PUSH2 0x21E2 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 BYTE SWAP2 PUSH1 0x1B DUP4 LT PUSH2 0x21CC JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1B ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1471 JUMPI SWAP1 SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB59 PUSH2 0x21FC SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x150B JUMP JUMPDEST SUB DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x221F DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x2228 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x227C JUMPI PUSH2 0x225B DUP3 PUSH1 0x1 SWAP3 PUSH2 0x1391 JUMP JUMPDEST MLOAD EQ DUP1 ISZERO PUSH2 0x2277 JUMPI JUMPDEST PUSH2 0x2270 JUMPI PUSH1 0x1 ADD PUSH2 0x2244 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x2264 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x22A6 DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x22AF DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x227C JUMPI DUP2 PUSH2 0x22E0 SWAP2 PUSH2 0x1391 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x22FA JUMPI JUMPDEST POP PUSH2 0x2270 JUMPI PUSH1 0x1 ADD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x3 SWAP2 POP EQ CODESIZE PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2321 DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x232A DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x227C JUMPI DUP2 PUSH2 0x235B SWAP2 PUSH2 0x1391 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2375 JUMPI JUMPDEST POP PUSH2 0x2270 JUMPI PUSH1 0x1 ADD PUSH2 0x2346 JUMP JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x239D DUP5 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x23A6 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2405 JUMPI DUP2 PUSH2 0x23D7 SWAP2 PUSH2 0x1391 JUMP JUMPDEST MLOAD DUP3 PUSH1 0x1 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x23FB JUMPI JUMPDEST POP POP PUSH2 0x23F3 JUMPI PUSH1 0x1 ADD PUSH2 0x23C2 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EQ SWAP1 POP DUP3 CODESIZE PUSH2 0x23E5 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x241C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x246B DUP3 PUSH2 0x1319 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x2485 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x2478 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xDF 0xB2 CALLDATACOPY EXTCODESIZE 0xB2 PUSH9 0xD85D269BE1383EB0EA PUSH29 0xC3FC46041DB9B6ADB50C1616D3982E64736F6C634300081C0033000000 ",
              "sourceMap": "481:20426:0:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;481:20426:0;;;;;;;;;;;;;;;;;;;;;;787:5:5;481:20426:0;;;;787:5:5;481:20426:0;1765:212;481:20426;;;1796:34;;;481:20426;;787:5:5;481:20426:0;;;;20107:13;481:20426;;20107:33;;1765:212;481:20426;;;;;;;;;787:5:5;481:20426:0;;;;20269:32;;481:20426;;;;20269:32;;;481:20426;20269:32;;:::i;:::-;481:20426;20259:43;;481:20426;-1:-1:-1;481:20426:0;;;;;20312:15;481:20426;-1:-1:-1;481:20426:0;20312:15;481:20426;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;1765:212;481:20426;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;-1:-1:-1;481:20426:0;20380:19;481:20426;;-1:-1:-1;481:20426:0;20312:15;481:20426;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;20456:20;-1:-1:-1;20456:20:0;;1765:212;481:20426;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;-1:-1:-1;481:20426:0;;;;;-1:-1:-1;481:20426:0;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;20107:33;20748:4;;20839:36;20891:7;20107:33;;481:20426;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;1765:212;481:20426;;787:5:5;481:20426:0;-1:-1:-1;1765:212:0;;481:20426;-1:-1:-1;481:20426:0;;;;;;;-1:-1:-1;;481:20426:0;;;;-1:-1:-1;;;;;481:20426:0;;;;;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_available_length_bytes": {
                  "entryPoint": 2935,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 7887,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 2990,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_bytes32_dyn": {
                  "entryPoint": 2505,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 284,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_12630": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 8357,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage": {
                  "entryPoint": 6341,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage_to_bytes": {
                  "entryPoint": 5387,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_contract_IIdentity_uint256_bytes_bytes": {
                  "entryPoint": 7908,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_packed_stringliteral_178a_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 2285,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_5aba": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c5c6": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_ced1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes_storage": {
                  "entryPoint": 6499,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bytes_bytes_string": {
                  "entryPoint": 8311,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bytes_storage_bytes__string": {
                  "entryPoint": 5518,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_address_bytes_bytes_string": {
                  "entryPoint": 4243,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 2891,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 2907,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_uint256_dyn_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_pop_array_bytes32_dyn_storage_ptr": {
                  "entryPoint": 5275,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
                  "entryPoint": 5058,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_sub_uint256": {
                  "entryPoint": 5238,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_bytes_storage": {
                  "entryPoint": 8036,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_uint256": {
                  "entryPoint": 4866,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_from_storage_to_memory_array_uint256_dyn": {
                  "entryPoint": 4534,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_bytes": {
                  "entryPoint": 8680,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn": {
                  "entryPoint": 5809,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint256_to_array_uint256_dyn": {
                  "entryPoint": 4931,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint8_to_array_uint256_dyn": {
                  "entryPoint": 9313,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_bytes_to_bytes": {
                  "entryPoint": 8105,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "external_fun_addClaim": {
                  "entryPoint": 3020,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_addKey": {
                  "entryPoint": 436,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 2431,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_execute": {
                  "entryPoint": 3199,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getClaim": {
                  "entryPoint": 4324,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getClaimIdsByTopic": {
                  "entryPoint": 2563,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKey": {
                  "entryPoint": 336,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKeyPurposes": {
                  "entryPoint": 4470,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKeysByPurpose": {
                  "entryPoint": 2680,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getRecoveredAddress": {
                  "entryPoint": 3745,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_initialize": {
                  "entryPoint": 3826,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isClaimValid": {
                  "entryPoint": 3634,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_keyHasPurpose": {
                  "entryPoint": 4437,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeClaim": {
                  "entryPoint": 938,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeKey": {
                  "entryPoint": 1620,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_version": {
                  "entryPoint": 2350,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 5329,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 6451,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2857,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_12955": {
                  "entryPoint": 2824,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_approve_inner": {
                  "entryPoint": 6516,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_getRecoveredAddress": {
                  "entryPoint": 8557,
                  "id": 1210,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_isClaimValid": {
                  "entryPoint": 8374,
                  "id": 1157,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_isConstructor": {
                  "entryPoint": null,
                  "id": 1300,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose": {
                  "entryPoint": 9088,
                  "id": 1093,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12621": {
                  "entryPoint": 8707,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12632": {
                  "entryPoint": 8842,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12681": {
                  "entryPoint": 8965,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 5218,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12622": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12629": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12633": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12634": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12694": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 5009,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_delegatedOnly": {
                  "entryPoint": 5982,
                  "id": 24,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "modifier_delegatedOnly_12674": {
                  "entryPoint": 7257,
                  "id": 24,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 4814,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x31": {
                  "entryPoint": 5253,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 4987,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2802,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 6177,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_3c5b": {
                  "entryPoint": 4609,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6f6b": {
                  "entryPoint": 4713,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_7b35": {
                  "entryPoint": 5115,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_85cd": {
                  "entryPoint": 6009,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ac6b": {
                  "entryPoint": 6253,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_cc19": {
                  "entryPoint": 6101,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e9e2": {
                  "entryPoint": 7976,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf7": {
                  "entryPoint": 5723,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_f97b": {
                  "entryPoint": 9237,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "resize_array_array_uint256_dyn_storage": {
                  "entryPoint": 4889,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 7964,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn_ptr": {
                  "entryPoint": 5034,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_set_to_zero_bytes": {
                  "entryPoint": 5578,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_struct_Claim": {
                  "entryPoint": 5667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_struct_Key": {
                  "entryPoint": 5930,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "transit_byte_array_long_to_short_bytes_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic32_12761": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_12686": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_12886": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_12888": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bytes32_to_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_t_bool_to_t_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 4836,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 2785,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 2421,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_uint8": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806312aaac70146101175780631d381240146101125780634eee424a1461010d57806353d413c51461010857806354fd4d5014610103578063747442d3146100fe57806380e9e9e1146100f95780639010f726146100f4578063b1a34e0d146100ef578063b61d27f6146100ea578063c0969a6e146100e5578063c3b129e3146100e0578063c4d66de8146100db578063c9100bcb146100d6578063d202158d146100d15763fb307b34146100cc57600080fd5b611176565b611155565b6110e4565b610ef2565b610ea1565b610e32565b610c7f565b610bcc565b610a78565b610a03565b61097f565b61092e565b610654565b6103aa565b6101b4565b610150565b906020808351928381520192019060005b81811061013a5750505090565b825184526020938401939092019160010161012d565b346101af5760203660031901126101af576101a060043560009081526001602081905260409091209081015460028201549161018b906111b6565b9160405193849360608552606085019061011c565b91602084015260408301520390f35b600080fd5b346101af5760603660031901126101af57600435602435604435916101e5600160ff60065460081c16151514611201565b303314801561037a575b6101f890611269565b80600261020f826000526001602052604060002090565b0154036103185761023261022d826000526001602052604060002090565b6111b6565b9060005b82518110156102a7578361024a8285611391565b511461025857600101610236565b60405162461bcd60e51b815260206004820152602160248201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736044820152606560f81b6064820152608490fd5b50929190506102c9816102c4856000526001602052604060002090565b6113c2565b6102e1836102c4836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a46001815280602081015b0390f35b9190826002610331826000526001602052604060002090565b015561035c6103406020610b4b565b828152610357856000526001602052604060002090565b611343565b816001610373856000526001602052604060002090565b01556102c9565b506101f86103a360405160208101903382526020815261039b604082610b29565b519020612203565b90506101ef565b346101af5760203660031901126101af576004356103d4600160ff60065460081c16151514611201565b3033148015610624575b6103e7906113fb565b6103fb816000526004602052604060002090565b5480156105cb57600091610419826000526005602052604060002090565b54925b8161044761043d83610438876000526005602052604060002090565b6113aa565b90549060031b1c90565b146105b15761045590611462565b83811061041c57916104b06105a0936104aa61049561043d6105a5985b61048f610489886000526005602052604060002090565b91611476565b906113aa565b91610438856000526005602052604060002090565b906112e4565b6104cc6104c7826000526005602052604060002090565b61149b565b60016104e2836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a61052e6002610520846000526004602052604060002090565b01546001600160a01b031690565b6003610544846000526004602052604060002090565b019061058d600461055f866000526004602052604060002090565b016005610576876000526004602052604060002090565b019060405194859460018060a01b0316998561158e565b0390a46000526004602052604060002090565b611623565b60405160018152602090f35b916104b06105a0936104aa61049561043d6105a598610472565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506103e761064d604051602081019033825260208152610645604082610b29565b51902061228a565b90506103de565b346101af5760403660031901126101af57600435602435610681600160ff60065460081c16151514611201565b30331480156108c5575b61069490611269565b6106b68260026106ae826000526001602052604060002090565b01541461165b565b6106cd61022d836000526001602052604060002090565b9060005b816106dc8285611391565b5114610752576106eb90611462565b90825182146106fa57906106d1565b60405162461bcd60e51b815260206004820152602a60248201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604482015269636820707572706f736560b01b6064820152608490fd5b6107706107686107628551611476565b85611391565b519184611391565b5261078e82610789856000526001602052604060002090565b6116b1565b6107a56104c7846000526001602052604060002090565b600081815260026020526040812054905b846107d261043d83610438876000526002602052604060002090565b146108b3576107e090611462565b8181106107b6576104aa61080c61043d610821945b61048f610489886000526002602052604060002090565b91610438856000526002602052604060002090565b6108386104c7826000526002602052604060002090565b61085a6001610851856000526001602052604060002090565b01549251611476565b15610892575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b6108ae6108a9846000526001602052604060002090565b61172a565b610860565b6104aa61080c61043d610821946107f5565b506106946108e660405160208101903382526020815261039b604082610b29565b905061068b565b919082519283825260005b848110610919575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016108f8565b346101af5760003660031901126101af5761031460408051906109518183610b29565b6005825264322e322e3160d81b6020830152519182916020835260208301906108ed565b801515036101af57565b346101af5760403660031901126101af5760206109bf6024356004356109a482610975565b6109ba600160ff60065460081c16151514611201565b611974565b6040519015158152f35b602060408183019282815284518094520192019060005b8181106109ed5750505090565b82518452602093840193909201916001016109e0565b346101af5760203660031901126101af576004356000526005602052604060002060405190816020825491828152019160005260206000209060005b818110610a625761031485610a5681870382610b29565b604051918291826109c9565b8254845260209093019260019283019201610a3f565b346101af5760203660031901126101af576004356000526002602052604060002060405190816020825491828152019160005260206000209060005b818110610acb5761031485610a5681870382610b29565b8254845260209093019260019283019201610ab4565b6001600160a01b038116036101af57565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b2457604052565b610af2565b90601f8019910116810190811067ffffffffffffffff821117610b2457604052565b90610b596040519283610b29565b565b67ffffffffffffffff8111610b2457601f01601f191660200190565b929192610b8382610b5b565b91610b916040519384610b29565b8294818452818301116101af578281602093846000960137010152565b9080601f830112156101af57816020610bc993359101610b77565b90565b346101af5760c03660031901126101af57602435604435600435610bef82610ae1565b60643567ffffffffffffffff81116101af57610c0f903690600401610bae565b60843567ffffffffffffffff81116101af57610c2f903690600401610bae565b9060a4359367ffffffffffffffff85116101af57366023860112156101af5761031495610c69610c6f963690602481600401359101610b77565b94611c59565b6040519081529081906020820190565b60603660031901126101af57600435610c9781610ae1565b6024359060443567ffffffffffffffff81116101af57610314927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610ce4610d9a933690600401610bae565b90610cfb600160ff60065460081c16151514611201565b6000549481610d388793610d19856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610d4f856000526003602052604060002090565b0155610d71846002610d6b866000526003602052604060002090565b01611fa9565b610d7c600054611462565b6000556040516001600160a01b0391909116958694829190826120a5565b0390a4604080513360208201908152610dc79290919061039b90829081015b03601f198101835282610b29565b15610de75750610dd68161175e565b506040519081529081906020820190565b30141580610e04575b15610c6f57610dfe8161175e565b50610c6f565b50604080513360208201908152610e2d92909190610e259082908101610db9565b519020612305565b610df0565b346101af5760803660031901126101af57600435610e4f81610ae1565b6024359060443567ffffffffffffffff81116101af57610e73903690600401610bae565b906064359167ffffffffffffffff83116101af57602093610e9b6109bf943690600401610bae565b926120b6565b346101af5760403660031901126101af5760043567ffffffffffffffff81116101af57610ee0610ed76020923690600401610bae565b6024359061216d565b6040516001600160a01b039091168152f35b346101af5760203660031901126101af57600435610f0f81610ae1565b6001600160a01b0381161561104e57600654600191829160ff16158015611045575b610f3a90612415565b610f4c600160ff196006541617600655565b610f6061010061ff00196006541617600655565b604080516001600160a01b03909216602083019081529190610f859082908101610db9565b519020806002610f9f826000526001602052604060002090565b0155610fcb610fae6020610b4b565b60018152610fc6836000526001602052604060002090565b612461565b610fea82610fe3836000526001602052604060002090565b0160019055565b6001600052600260205261101e817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e06113c2565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610f31565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b9491936110d693610bc997956110c8938852602088015260018060a01b0316604087015260c0606087015260c08601906108ed565b9084820360808601526108ed565b9160a08184039101526108ed565b346101af5760203660031901126101af5760048035600090815260208290526040902080546001820154600283015490939192610314926001600160a01b0390921691600582019190810190611148906111429081906003016121e8565b926121e8565b9260405196879687611093565b346101af5760403660031901126101af5760206109bf602435600435612380565b346101af5760203660031901126101af5760043560005260016020526103146111a260406000206111b6565b60405191829160208352602083019061011c565b906040519182815491828252602082019060005260206000209260005b8181106111e8575050610b5992500383610b29565b84548352600194850194879450602090930192016111d3565b1561120857565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b1561127057565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b916112fe9183549060031b91821b91600019901b19161790565b9055565b81811061130d575050565b60008155600101611302565b8054600182558060011061132b575050565b610b5991600052600160206000209182019101611302565b9061134d82611319565b9060005260206000209060005b6001811061136757505050565b60019060208351930192818501550161135a565b634e487b7160e01b600052603260045260246000fd5b80518210156113a55760209160051b010190565b61137b565b80548210156113a55760005260206000200190600090565b805490600160401b821015610b2457816113e49160016112fe940181556113aa565b819391549060031b91821b91600019901b19161790565b1561140257565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b60001981146114715760010190565b6112ce565b60001981019190821161147157565b634e487b7160e01b600052603160045260246000fd5b805480156114cc5760001901906114c76114b583836113aa565b81929154906000199060031b1b191690565b905555565b611485565b90600182811c92168015611501575b60208310146114eb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916114e0565b6000929181549161151b836114d1565b8083529260018116908115611571575060011461153757505050565b60009081526020812093945091925b838310611557575060209250010190565b600181602092949394548385870101520191019190611546565b915050602093945060ff929192191683830152151560051b010190565b926115ae610bc995936115bc93865260806020870152608086019061150b565b90848203604086015261150b565b91606081840391015261150b565b6115d481546114d1565b90816115de575050565b601f82116001146115f0576000905550565b611612610b5992826000526001601f6020600020920160051c82019101611302565b600081815260208120918190559055565b600590600081556000600182015560006002820155611644600382016115ca565b611650600482016115ca565b016115d481546114d1565b1561166257565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b81519167ffffffffffffffff8311610b2457600160401b8311610b2457602090825484845580851061170d575b500190600052602060002060005b8381106116f95750505050565b6001906020845194019381840155016116ec565b611724908460005285846000209182019101611302565b386116de565b6002600091805483825580611745575b508260018201550155565b8184526020842061175891810190611302565b3861173a565b6001610bc9916109ba8260ff60065460081c16151514611201565b1561178057565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b156117dc57565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b1561182857565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b1561187457565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b600092918154916118d5836114d1565b926001811690811561192057506001146118ee57505050565b909192935060005260206000206000905b83821061190c5750500190565b6001816020925484860152019101906118ff565b60ff191683525050811515909102019150565b3d1561195e573d9061194482610b5b565b916119526040519384610b29565b82523d6000602084013e565b606090565b906020610bc992818152019061150b565b906001906119856000548410611779565b6119b86119b36119af60036119a4876000526003602052604060002090565b015460081c60ff1690565b1590565b6117d5565b6119dc6119cf846000526003602052604060002090565b546001600160a01b031690565b3090838060a01b031614600014611c2d57604080513360208201908152611a1492611a0f929061039b9082908101610db9565b61186d565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c0457611a726003611a64836000526003602052604060002090565b01805460ff19166001179055565b600080611a8c6119cf846000526003602052604060002090565b611aca6001611aa5866000526003602052604060002090565b01546002611abd876000526003602052604060002090565b01604051928380926118c5565b03925af1611ad6611933565b5015611b9257611b056003611af5836000526003602052604060002090565b01805461ff001916610100179055565b611b1c6119cf826000526003602052604060002090565b6001611b32836000526003602052604060002090565b0154917f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8611b8a6002611b6f846000526003602052604060002090565b6040516001600160a01b039096169592839290910182611963565b0390a4600190565b611ba96119cf826000526003602052604060002090565b6001611bbf836000526003602052604060002090565b0154917fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68611bfc6002611b6f846000526003602052604060002090565b0390a4600090565b6003611c1d611c28926000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611c5492611c4f9290610e259082908101610db9565b611821565b611a14565b9294909394611c74600160ff60065460081c16151514611201565b3033148015611ea7575b611c87906113fb565b6001600160a01b03831694308603611e30575b604080516001600160a01b03861660208201908152918101879052611cc28160608101610db9565b51902096879486611cdd876000526004602052604060002090565b55826001611cf5886000526004602052604060002090565b0155611d11846003610d6b896000526004602052604060002090565b611d2b826004610d6b896000526004602052604060002090565b611d45856005610d6b896000526004602052604060002090565b87611d6e611d6260026105208a6000526004602052604060002090565b6001600160a01b031690565b14611dfd5793611df791611deb7f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611db5896102c48c6000526005602052604060002090565b6002611dcb8a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b60405194859485612077565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611df79160405194859485612077565b60405163604b4d3760e11b815260208180611e518b878b3060048601611ee4565b03818a5afa8015611ea257611e6e91600091611e73575b50611f28565b611c9a565b611e95915060203d602011611e9b575b611e8d8183610b29565b810190611ecf565b38611e68565b503d611e83565b611f1c565b50611c87611ec8604051602081019033825260208152610645604082610b29565b9050611c7e565b908160209103126101af5751610bc981610975565b92610bc99492611f0e9260018060a01b0316855260208501526080604085015260808401906108ed565b9160608184039101526108ed565b6040513d6000823e3d90fd5b15611f2f57565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b9190601f8111611f7357505050565b610b59926000526020600020906020601f840160051c83019310611f9f575b601f0160051c0190611302565b9091508190611f92565b919091825167ffffffffffffffff8111610b2457611fd181611fcb84546114d1565b84611f64565b6020601f821160011461200e5781906112fe939495600092612003575b50508160011b916000199060031b1c19161790565b015190503880611fee565b601f1982169061202384600052602060002090565b9160005b81811061205f57509583600195969710612046575b505050811b019055565b015160001960f88460031b161c1916905538808061203c565b9192602060018192868b015181550194019201612027565b92612097610bc99593611f0e9386526080602087015260808601906108ed565b9084820360408601526108ed565b906020610bc99281815201906108ed565b61215f936120ef61213a9493610db9604051938492602084019660018060a01b03168752604084015260608084015260808301906108ed565b51902060405161213181610db9602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b5190209061216d565b604080516001600160a01b039092166020830190815291906106459082908101610db9565b61216857600090565b600190565b60009060418151036121e25760208101519160606040830151920151901a91601b83106121cc575b6040805194855260ff9093166020858101919091529284015260608301526000808052909160809060015afa15611ea25760005190565b9091601b019060ff821161147157909190612195565b50905090565b90610b596121fc926040519384809261150b565b0383610b29565b6000526001602052604060002060026040519161221f83610b08565b612228816111b6565b8352600181015460208401520154806040830152156122845760005b8151805182101561227c5761225b82600192611391565b51148015612277575b61227057600101612244565b5050600190565b612264565b505050600090565b50600090565b600052600160205260406000206002604051916122a683610b08565b6122af816111b6565b8352600181015460208401520154806040830152156122845760005b8151805182101561227c57816122e091611391565b51600181149081156122fa575b50612270576001016122cb565b6003915014386122ed565b6000526001602052604060002060026040519161232183610b08565b61232a816111b6565b8352600181015460208401520154806040830152156122845760005b8151805182101561227c578161235b91611391565b5160018114908115612375575b5061227057600101612346565b600291501438612368565b600052600160205260406000209060026040519261239d84610b08565b6123a6816111b6565b84526001810154602085015201548060408401521561240e5760005b8251805182101561240557816123d791611391565b5182600182149182156123fb575b50506123f3576001016123c2565b505050600190565b14905082386123e5565b50505050600090565b5050600090565b1561241c57565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b9061246b82611319565b9060005260206000209060005b6001811061248557505050565b600190602060ff845116930192818501550161247856fea2646970667358221220fddfb2373bb268d85d269be1383eb0ea7cc3fc46041db9b6adb50c1616d3982e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4EEE424A EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x747442D3 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x80E9E9E1 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB1A34E0D EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xC0969A6E EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xC3B129E3 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0xD1 JUMPI PUSH4 0xFB307B34 EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0xE32 JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x13A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x12D JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x1A0 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x18B SWAP1 PUSH2 0x11B6 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x11C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1E5 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x37A JUMPI JUMPDEST PUSH2 0x1F8 SWAP1 PUSH2 0x1269 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH2 0x20F DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x318 JUMPI PUSH2 0x232 PUSH2 0x22D DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2A7 JUMPI DUP4 PUSH2 0x24A DUP3 DUP6 PUSH2 0x1391 JUMP JUMPDEST MLOAD EQ PUSH2 0x258 JUMPI PUSH1 0x1 ADD PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666C6963743A204B657920616C72656164792068617320707572706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2C4 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x2E1 DUP4 PUSH2 0x2C4 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH2 0x331 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x35C PUSH2 0x340 PUSH1 0x20 PUSH2 0xB4B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x357 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x373 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x2C9 JUMP JUMPDEST POP PUSH2 0x1F8 PUSH2 0x3A3 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x39B PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EF JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3D4 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x624 JUMPI JUMPDEST PUSH2 0x3E7 SWAP1 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x3FB DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x419 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 JUMPDEST DUP2 PUSH2 0x447 PUSH2 0x43D DUP4 PUSH2 0x438 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST EQ PUSH2 0x5B1 JUMPI PUSH2 0x455 SWAP1 PUSH2 0x1462 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x41C JUMPI SWAP2 PUSH2 0x4B0 PUSH2 0x5A0 SWAP4 PUSH2 0x4AA PUSH2 0x495 PUSH2 0x43D PUSH2 0x5A5 SWAP9 JUMPDEST PUSH2 0x48F PUSH2 0x489 DUP9 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x1476 JUMP JUMPDEST SWAP1 PUSH2 0x13AA JUMP JUMPDEST SWAP2 PUSH2 0x438 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x4C7 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x4E2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 DUP3 PUSH32 0x3CF57863A89432C61C4A27073C6EE39E8A764BFF5A05AEBFBCDCDC80B2E6130A PUSH2 0x52E PUSH1 0x2 PUSH2 0x520 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x544 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH2 0x58D PUSH1 0x4 PUSH2 0x55F DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x5 PUSH2 0x576 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP6 PUSH2 0x158E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH2 0x4B0 PUSH2 0x5A0 SWAP4 PUSH2 0x4AA PUSH2 0x495 PUSH2 0x43D PUSH2 0x5A5 SWAP9 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A205468657265206973206E6F20636C61696D2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1A5D1A081D1A1A5CC81251 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x64D PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x645 PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x228A JUMP JUMPDEST SWAP1 POP PUSH2 0x3DE JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x681 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x8C5 JUMPI JUMPDEST PUSH2 0x694 SWAP1 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x6B6 DUP3 PUSH1 0x2 PUSH2 0x6AE DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD EQ PUSH2 0x165B JUMP JUMPDEST PUSH2 0x6CD PUSH2 0x22D DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 PUSH2 0x6DC DUP3 DUP6 PUSH2 0x1391 JUMP JUMPDEST MLOAD EQ PUSH2 0x752 JUMPI PUSH2 0x6EB SWAP1 PUSH2 0x1462 JUMP JUMPDEST SWAP1 DUP3 MLOAD DUP3 EQ PUSH2 0x6FA JUMPI SWAP1 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B657920646F65736E27742068617665207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x636820707572706F7365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x770 PUSH2 0x768 PUSH2 0x762 DUP6 MLOAD PUSH2 0x1476 JUMP JUMPDEST DUP6 PUSH2 0x1391 JUMP JUMPDEST MLOAD SWAP2 DUP5 PUSH2 0x1391 JUMP JUMPDEST MSTORE PUSH2 0x78E DUP3 PUSH2 0x789 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x4C7 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 PUSH2 0x7D2 PUSH2 0x43D DUP4 PUSH2 0x438 DUP8 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST EQ PUSH2 0x8B3 JUMPI PUSH2 0x7E0 SWAP1 PUSH2 0x1462 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x7B6 JUMPI PUSH2 0x4AA PUSH2 0x80C PUSH2 0x43D PUSH2 0x821 SWAP5 JUMPDEST PUSH2 0x48F PUSH2 0x489 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x438 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x838 PUSH2 0x4C7 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x85A PUSH1 0x1 PUSH2 0x851 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP3 MLOAD PUSH2 0x1476 JUMP JUMPDEST ISZERO PUSH2 0x892 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x8AE PUSH2 0x8A9 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0x80C PUSH2 0x43D PUSH2 0x821 SWAP5 PUSH2 0x7F5 JUMP JUMPDEST POP PUSH2 0x694 PUSH2 0x8E6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x39B PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST SWAP1 POP PUSH2 0x68B JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x919 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x8F8 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH2 0x314 PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x951 DUP2 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x1AF JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH2 0x9BF PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x9A4 DUP3 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x9BA PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x9ED JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x9E0 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA62 JUMPI PUSH2 0x314 DUP6 PUSH2 0xA56 DUP2 DUP8 SUB DUP3 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x9C9 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xA3F JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xACB JUMPI PUSH2 0x314 DUP6 PUSH2 0xA56 DUP2 DUP8 SUB DUP3 PUSH2 0xB29 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x1AF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB24 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB24 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xB59 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xB29 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB24 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xB83 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 PUSH2 0xB91 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB29 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AF JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AF JUMPI DUP2 PUSH1 0x20 PUSH2 0xBC9 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xBEF DUP3 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xC0F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xC2F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x1AF JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x314 SWAP6 PUSH2 0xC69 PUSH2 0xC6F SWAP7 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP5 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC97 DUP2 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0x314 SWAP3 PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 SWAP3 PUSH2 0xCE4 PUSH2 0xD9A SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP1 PUSH2 0xCFB PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP5 DUP2 PUSH2 0xD38 DUP8 SWAP4 PUSH2 0xD19 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH2 0xD4F DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xD71 DUP5 PUSH1 0x2 PUSH2 0xD6B DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xD7C PUSH1 0x0 SLOAD PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP6 DUP7 SWAP5 DUP3 SWAP2 SWAP1 DUP3 PUSH2 0x20A5 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xDC7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x39B SWAP1 DUP3 SWAP1 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xB29 JUMP JUMPDEST ISZERO PUSH2 0xDE7 JUMPI POP PUSH2 0xDD6 DUP2 PUSH2 0x175E JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST ADDRESS EQ ISZERO DUP1 PUSH2 0xE04 JUMPI JUMPDEST ISZERO PUSH2 0xC6F JUMPI PUSH2 0xDFE DUP2 PUSH2 0x175E JUMP JUMPDEST POP PUSH2 0xC6F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xE2D SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE25 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2305 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE4F DUP2 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xE73 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1AF JUMPI PUSH1 0x20 SWAP4 PUSH2 0xE9B PUSH2 0x9BF SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST SWAP3 PUSH2 0x20B6 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AF JUMPI PUSH2 0xEE0 PUSH2 0xED7 PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF0F DUP2 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x104E JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1045 JUMPI JUMPDEST PUSH2 0xF3A SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0xF4C PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xF60 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0xF85 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x2 PUSH2 0xF9F DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xFCB PUSH2 0xFAE PUSH1 0x20 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH2 0xFC6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2461 JUMP JUMPDEST PUSH2 0xFEA DUP3 PUSH2 0xFE3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x101E DUP2 PUSH32 0xE90B7BCEB6E7DF5418FB78D8EE546E97C83A08BBCCC01A0644D599CCD2A7C2E0 PUSH2 0x13C2 JUMP JUMPDEST PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 PUSH2 0x10D6 SWAP4 PUSH2 0xBC9 SWAP8 SWAP6 PUSH2 0x10C8 SWAP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x314 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x5 DUP3 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1148 SWAP1 PUSH2 0x1142 SWAP1 DUP2 SWAP1 PUSH1 0x3 ADD PUSH2 0x21E8 JUMP JUMPDEST SWAP3 PUSH2 0x21E8 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1093 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x20 PUSH2 0x9BF PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2380 JUMP JUMPDEST CALLVALUE PUSH2 0x1AF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x314 PUSH2 0x11A2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x11C JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x11E8 JUMPI POP POP PUSH2 0xB59 SWAP3 POP SUB DUP4 PUSH2 0xB29 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x11D3 JUMP JUMPDEST ISZERO PUSH2 0x1208 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E746572616374696E67207769746820746865206C69627261727920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B1BA1034B9903337B93134B23232B717 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1270 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x65206D616E6167656D656E74206B6579 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x12FE SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x130D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1302 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x132B JUMPI POP POP JUMP JUMPDEST PUSH2 0xB59 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST SWAP1 PUSH2 0x134D DUP3 PUSH2 0x1319 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x1367 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x135A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x137B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xB24 JUMPI DUP2 PUSH2 0x13E4 SWAP2 PUSH1 0x1 PUSH2 0x12FE SWAP5 ADD DUP2 SSTORE PUSH2 0x13AA JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1402 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6520636C61696D207369676E6572206B6579 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1471 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1471 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x14C7 PUSH2 0x14B5 DUP4 DUP4 PUSH2 0x13AA JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1501 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x14EB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x151B DUP4 PUSH2 0x14D1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1571 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1537 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1557 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x15AE PUSH2 0xBC9 SWAP6 SWAP4 PUSH2 0x15BC SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x150B JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x150B JUMP JUMPDEST PUSH2 0x15D4 DUP2 SLOAD PUSH2 0x14D1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x15DE JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F0 JUMPI PUSH1 0x0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1612 PUSH2 0xB59 SWAP3 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP2 DUP2 SWAP1 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH1 0x0 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x1644 PUSH1 0x3 DUP3 ADD PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x1650 PUSH1 0x4 DUP3 ADD PUSH2 0x15CA JUMP JUMPDEST ADD PUSH2 0x15D4 DUP2 SLOAD PUSH2 0x14D1 JUMP JUMPDEST ISZERO PUSH2 0x1662 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B65792069736E277420726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB24 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xB24 JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x170D JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x16F9 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x1724 SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST CODESIZE PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP1 SLOAD DUP4 DUP3 SSTORE DUP1 PUSH2 0x1745 JUMPI JUMPDEST POP DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH2 0x1758 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1302 JUMP JUMPDEST CODESIZE PUSH2 0x173A JUMP JUMPDEST PUSH1 0x1 PUSH2 0xBC9 SWAP2 PUSH2 0x9BA DUP3 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ISZERO PUSH2 0x1780 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F76652061206E6F6E2D6578697374696E67206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32B1BABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x17DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1828 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1874 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F742068617665206D616E6167656D656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B6579 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x18D5 DUP4 PUSH2 0x14D1 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1920 JUMPI POP PUSH1 0x1 EQ PUSH2 0x18EE JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x190C JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x195E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1944 DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP2 PUSH2 0x1952 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB29 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xBC9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1985 PUSH1 0x0 SLOAD DUP5 LT PUSH2 0x1779 JUMP JUMPDEST PUSH2 0x19B8 PUSH2 0x19B3 PUSH2 0x19AF PUSH1 0x3 PUSH2 0x19A4 DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x19DC PUSH2 0x19CF DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADDRESS SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x0 EQ PUSH2 0x1C2D JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1A14 SWAP3 PUSH2 0x1A0F SWAP3 SWAP1 PUSH2 0x39B SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO ISZERO DUP2 MSTORE DUP4 SWAP1 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP1 PUSH1 0x20 SWAP1 LOG2 ISZERO ISZERO SUB PUSH2 0x1C04 JUMPI PUSH2 0x1A72 PUSH1 0x3 PUSH2 0x1A64 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A8C PUSH2 0x19CF DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1ACA PUSH1 0x1 PUSH2 0x1AA5 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x2 PUSH2 0x1ABD DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x18C5 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH2 0x1AD6 PUSH2 0x1933 JUMP JUMPDEST POP ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B05 PUSH1 0x3 PUSH2 0x1AF5 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B1C PUSH2 0x19CF DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1B32 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 PUSH2 0x1B8A PUSH1 0x2 PUSH2 0x1B6F DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 ADD DUP3 PUSH2 0x1963 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1BA9 PUSH2 0x19CF DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BBF DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 PUSH2 0x1BFC PUSH1 0x2 PUSH2 0x1B6F DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1C1D PUSH2 0x1C28 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1C54 SWAP3 PUSH2 0x1C4F SWAP3 SWAP1 PUSH2 0xE25 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP5 SWAP1 SWAP4 SWAP5 PUSH2 0x1C74 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x1201 JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x1EA7 JUMPI JUMPDEST PUSH2 0x1C87 SWAP1 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 ADDRESS DUP7 SUB PUSH2 0x1E30 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x1CC2 DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP7 PUSH2 0x1CDD DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP3 PUSH1 0x1 PUSH2 0x1CF5 DUP9 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1D11 DUP5 PUSH1 0x3 PUSH2 0xD6B DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1D2B DUP3 PUSH1 0x4 PUSH2 0xD6B DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1D45 DUP6 PUSH1 0x5 PUSH2 0xD6B DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1D6E PUSH2 0x1D62 PUSH1 0x2 PUSH2 0x520 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1DFD JUMPI SWAP4 PUSH2 0x1DF7 SWAP2 PUSH2 0x1DEB PUSH32 0x46149B18AA084502C3F12BC75E19EDA8BDA8D102B82CCE8474677A6D0D5F43C5 SWAP7 PUSH2 0x1DB5 DUP10 PUSH2 0x2C4 DUP13 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1DCB DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x2077 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST POP PUSH32 0x3BAB293FC00DB832D7619A9299914251B8747C036867EC056CBD506F60135B13 SWAP4 PUSH2 0x1DF7 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x1E51 DUP12 DUP8 DUP12 ADDRESS PUSH1 0x4 DUP7 ADD PUSH2 0x1EE4 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1EA2 JUMPI PUSH2 0x1E6E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1E73 JUMPI JUMPDEST POP PUSH2 0x1F28 JUMP JUMPDEST PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x1E95 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E9B JUMPI JUMPDEST PUSH2 0x1E8D DUP2 DUP4 PUSH2 0xB29 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1ECF JUMP JUMPDEST CODESIZE PUSH2 0x1E68 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x1F1C JUMP JUMPDEST POP PUSH2 0x1C87 PUSH2 0x1EC8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x645 PUSH1 0x40 DUP3 PUSH2 0xB29 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1AF JUMPI MLOAD PUSH2 0xBC9 DUP2 PUSH2 0x975 JUMP JUMPDEST SWAP3 PUSH2 0xBC9 SWAP5 SWAP3 PUSH2 0x1F0E SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F2F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420636C61696D PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1F73 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xB59 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1F9F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1302 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB24 JUMPI PUSH2 0x1FD1 DUP2 PUSH2 0x1FCB DUP5 SLOAD PUSH2 0x14D1 JUMP JUMPDEST DUP5 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x200E JUMPI DUP2 SWAP1 PUSH2 0x12FE SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x2003 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH2 0x2023 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x205F JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2046 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x203C JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2027 JUMP JUMPDEST SWAP3 PUSH2 0x2097 PUSH2 0xBC9 SWAP6 SWAP4 PUSH2 0x1F0E SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x8ED JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xBC9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST PUSH2 0x215F SWAP4 PUSH2 0x20EF PUSH2 0x213A SWAP5 SWAP4 PUSH2 0xDB9 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x8ED JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2131 DUP2 PUSH2 0xDB9 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH1 0x3C SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP3 MSTORE PUSH1 0x1C DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0x645 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x2168 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x41 DUP2 MLOAD SUB PUSH2 0x21E2 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 BYTE SWAP2 PUSH1 0x1B DUP4 LT PUSH2 0x21CC JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1B ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1471 JUMPI SWAP1 SWAP2 SWAP1 PUSH2 0x2195 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB59 PUSH2 0x21FC SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x150B JUMP JUMPDEST SUB DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x221F DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x2228 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x227C JUMPI PUSH2 0x225B DUP3 PUSH1 0x1 SWAP3 PUSH2 0x1391 JUMP JUMPDEST MLOAD EQ DUP1 ISZERO PUSH2 0x2277 JUMPI JUMPDEST PUSH2 0x2270 JUMPI PUSH1 0x1 ADD PUSH2 0x2244 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x2264 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x22A6 DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x22AF DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x227C JUMPI DUP2 PUSH2 0x22E0 SWAP2 PUSH2 0x1391 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x22FA JUMPI JUMPDEST POP PUSH2 0x2270 JUMPI PUSH1 0x1 ADD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x3 SWAP2 POP EQ CODESIZE PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2321 DUP4 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x232A DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x227C JUMPI DUP2 PUSH2 0x235B SWAP2 PUSH2 0x1391 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2375 JUMPI JUMPDEST POP PUSH2 0x2270 JUMPI PUSH1 0x1 ADD PUSH2 0x2346 JUMP JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x239D DUP5 PUSH2 0xB08 JUMP JUMPDEST PUSH2 0x23A6 DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2405 JUMPI DUP2 PUSH2 0x23D7 SWAP2 PUSH2 0x1391 JUMP JUMPDEST MLOAD DUP3 PUSH1 0x1 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x23FB JUMPI JUMPDEST POP POP PUSH2 0x23F3 JUMPI PUSH1 0x1 ADD PUSH2 0x23C2 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EQ SWAP1 POP DUP3 CODESIZE PUSH2 0x23E5 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x241C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x246B DUP3 PUSH2 0x1319 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x2485 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x2478 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xDF 0xB2 CALLDATACOPY EXTCODESIZE 0xB2 PUSH9 0xD85D269BE1383EB0EA PUSH29 0xC3FC46041DB9B6ADB50C1616D3982E64736F6C634300081C0033000000 ",
              "sourceMap": "481:20426:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;-1:-1:-1;481:20426:0;;;4426:5;481:20426;;;;;;;;4448:19;;;481:20426;4469:15;;;481:20426;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;;;693:84;717:4;481:20426;701:12;481:20426;;;;;;701:20;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;481:20426;929:152;;;:::i;:::-;7228:11;:15;:11;;481:20426;;717:4;481:20426;;;;;;;7228:11;:15;481:20426;7228:23;;;481:20426;7296:11;;481:20426;;717:4;481:20426;;;;;;;7296:11;481:20426;:::i;:::-;7335:24;-1:-1:-1;7397:17:0;481:20426;;7361:34;;;;;7452:26;;;;;:::i;:::-;481:20426;7501:19;7497:109;;717:4;481:20426;7335:24;;7497:109;481:20426;;-1:-1:-1;;;7544:43:0;;481:20426;;7544:43;;481:20426;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;7544:43;7361:34;;;;;;7634:35;:11;;;481:20426;;717:4;481:20426;;;;;;;7634:11;:35;:::i;:::-;7831;:24;;;481:20426;;7228:15;481:20426;;;;;;;7831:35;481:20426;;7882:31;;-1:-1:-1;7882:31:0;;717:4;481:20426;;;;;;;;;;7224:597;7700:11;;;7228:15;7700:11;;481:20426;;717:4;481:20426;;;;;;;7700:11;:15;481:20426;;;;;:::i;:::-;;;;7736:11;;481:20426;;717:4;481:20426;;;;;;;7736:11;481:20426;:::i;:::-;7783:11;717:4;7783:11;;481:20426;;717:4;481:20426;;;;;;;7783:11;:19;481:20426;7224:597;;937:82;481:20426;929:152;968:51;481:20426;;;992:22;;937:10;;481:20426;;;992:22;;;481:20426;992:22;;:::i;:::-;481:20426;982:33;;968:51;:::i;:::-;937:82;;;;481:20426;;;;;;-1:-1:-1;;481:20426:0;;;;;;693:84;717:4;481:20426;701:12;481:20426;;;;;;701:20;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;481:20426;1229:154;;;:::i;:::-;14236:17;;481:20426;;;;;;;;;;14236:17;481:20426;14273:11;;14269:95;;-1:-1:-1;14422:22:0;;;481:20426;;14422:14;481:20426;;;;;;;14422:22;481:20426;14461:175;;14468:22;481:20426;14468:34;:22;;;481:20426;;14422:14;481:20426;;;;;;;14468:22;:34;:::i;:::-;481:20426;;;;;;;;;14468:46;;;14530:12;;;:::i;:::-;14561:25;;;14461:175;14557:69;14606:5;14646:84;15054:17;14606:5;14646:34;481:20426;14691:39;15047:24;14606:5;14461:175;14714:15;14691:22;;481:20426;;14422:14;481:20426;;;;;;;14691:22;14714:15;;:::i;:::-;14691:39;;:::i;481:20426::-;14646:22;;;481:20426;;14422:14;481:20426;;;;;;;14646:34;:84;;:::i;:::-;14740:26;:22;;481:20426;;14422:14;481:20426;;;;;;;14740:22;:26;:::i;:::-;717:4;14852:17;;481:20426;;;;;;;;;;14852:17;:24;481:20426;14890:17;;14784:252;481:20426;14890:24;:17;;481:20426;;;;;;;;;;14890:17;:24;481:20426;-1:-1:-1;;;;;481:20426:0;;;;14928:27;:17;;481:20426;;;;;;;;;;14928:17;:27;14969:17;14784:252;481:20426;14969:17;;481:20426;;;;;;;;;;14969:17;:22;14422:14;15005:17;;481:20426;;;;;;;;;;15005:17;:21;481:20426;;;;;;;;;;;;14784:252;;;:::i;:::-;;;;481:20426;;;;;;;;;;15054:17;15047:24;:::i;:::-;481:20426;;717:4;481:20426;;;;;14468:46;;14646:84;15054:17;14468:46;14646:34;481:20426;14691:39;15047:24;14468:46;;;14269:95;481:20426;;-1:-1:-1;;;14300:53:0;;481:20426;;14300:53;;481:20426;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;7544:43;1237:82;481:20426;1229:154;1268:51;481:20426;;;1292:22;;1237:10;;481:20426;;;1292:22;;;481:20426;1292:22;;:::i;:::-;481:20426;1282:33;;1268:51;:::i;:::-;1237:82;;;;481:20426;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;693:84;717:4;481:20426;701:12;481:20426;;;;;;701:20;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;481:20426;929:152;;;:::i;:::-;10193:69;10201:11;:15;:11;;481:20426;;717:4;481:20426;;;;;;;10201:11;:15;481:20426;10201:23;10193:69;:::i;:::-;481:20426;10301:11;;481:20426;;717:4;481:20426;;;;;;;;10332:21;-1:-1:-1;10363:220:0;10370:23;;;;;:::i;:::-;481:20426;10370:35;;;10421:14;;;:::i;:::-;481:20426;;;10454:32;;10450:123;;10363:220;;;10450:123;481:20426;;-1:-1:-1;;;10506:52:0;;481:20426;;10506:52;;481:20426;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;7544:43;10370:35;10593:57;10619:31;10629:20;481:20426;;10629:20;:::i;:::-;10619:31;;:::i;:::-;481:20426;10593:57;;;:::i;:::-;481:20426;;10660:11;;;481:20426;;717:4;481:20426;;;;;;;10660:11;481:20426;:::i;:::-;10702:24;:11;;481:20426;;717:4;481:20426;;;;;;;10702:24;-1:-1:-1;481:20426:0;;;7228:15;481:20426;;;;;;10827:167;;10834:24;481:20426;10834:34;:24;;;481:20426;;7228:15;481:20426;;;;;;;;10834:42;;;10892:10;;;:::i;:::-;10921:23;;;10827:167;10917:67;11004:34;481:20426;11041:41;11004:78;10964:5;10827:167;11066:15;11041:24;;481:20426;;7228:15;481:20426;;;;;;;;11004:24;;;481:20426;;7228:15;481:20426;;;;;;;11004:78;11092:28;:24;;481:20426;;7228:15;481:20426;;;;;;;11092:28;11182:20;717:4;11148:11;;481:20426;;717:4;481:20426;;;;;;;11148:11;:19;481:20426;;;11182:20;:::i;:::-;:25;11178:74;;10827:167;481:20426;;11267:35;;-1:-1:-1;11267:35:0;;717:4;481:20426;;;;;11178:74;11223:18;11230:11;;481:20426;;717:4;481:20426;;;;;;;11230:11;11223:18;:::i;:::-;11178:74;;10834:42;11004:34;481:20426;11041:41;11004:78;10834:42;;;937:82;481:20426;929:152;968:51;481:20426;;;992:22;;937:10;;481:20426;;;992:22;;;481:20426;992:22;;:::i;968:51::-;937:82;;;;481:20426;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;481:20426:0;;;;;8381:1560;481:20426;;;;;;;:::i;:::-;693:84;717:4;481:20426;701:12;481:20426;;;;;;701:20;693:84;:::i;:::-;8381:1560;:::i;:::-;481:20426;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;-1:-1:-1;481:20426:0;5960:14;481:20426;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;-1:-1:-1;481:20426:0;5422:14;481:20426;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;481:20426:0;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;481:20426:0;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12732:22;481:20426;;;;;;;;;;;:::i;:::-;12732:22;;:::i;:::-;481:20426;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3453:52;481:20426;;3453:52;481:20426;;;;;;:::i;:::-;;693:84;717:4;481:20426;701:12;481:20426;;;;;;701:20;693:84;:::i;:::-;-1:-1:-1;481:20426:0;3278:25;;:34;:25;;;;481:20426;;3278:11;481:20426;;;;;;;3278:25;481:20426;;-1:-1:-1;;;;;;481:20426:0;-1:-1:-1;;;;;481:20426:0;;;;;;;;;;3278:34;3322:25;717:4;3322:25;;481:20426;;3278:11;481:20426;;;;;;;3322:25;:31;481:20426;;3372:25;:30;:25;;481:20426;;3278:11;481:20426;;;;;;;3372:25;:30;481:20426;:::i;:::-;3420:17;-1:-1:-1;481:20426:0;3420:17;:::i;:::-;-1:-1:-1;481:20426:0;;;-1:-1:-1;;;;;481:20426:0;;;;;;;;;;;3453:52;:::i;:::-;;;;481:20426;;;3555:10;481:20426;3544:22;;481:20426;;;3520:51;;3544:22;;481:20426;3544:22;;481:20426;;;;3544:22;;481:20426;;3544:22;;;;;;:::i;3520:51::-;3534:33;;;8481:12;;;;:::i;:::-;;481:20426;;;;;;;;;;;;;3516:255;3658:4;3643:20;;:75;;;3516:255;3639:132;3516:255;3639:132;8481:12;;;:::i;:::-;;3516:255;;3643:75;-1:-1:-1;481:20426:0;;;3555:10;481:20426;3691:22;;481:20426;;;3667:51;;3691:22;;481:20426;3691:22;;481:20426;;;;3691:22;481:20426;3691:22;481:20426;3681:33;;3667:51;:::i;:::-;3643:75;;481:20426;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;;;481:20426:0;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;481:20426:0;;2312:34;481:20426;;20108:12;481:20426;20200:4;;;;481:20426;;20107:13;:33;;;;481:20426;20099:76;;;:::i;:::-;20185:19;20200:4;481:20426;;20108:12;481:20426;;;20108:12;481:20426;;20185:19;20214;481:20426;;;20108:12;481:20426;;;20108:12;481:20426;;20214:19;481:20426;;;-1:-1:-1;;;;;481:20426:0;;;;20269:32;;481:20426;;;20269:32;481:20426;20269:32;;481:20426;;;;20269:32;481:20426;20269:32;481:20426;20259:43;;20312:11;:15;:11;;481:20426;;717:4;481:20426;;;;;;;20312:11;:15;481:20426;;;;;:::i;:::-;;;;20344:11;;481:20426;;717:4;481:20426;;;;;;;20344:11;481:20426;:::i;:::-;20380:23;:11;;;481:20426;;717:4;481:20426;;;;;;;20380:11;:19;20200:4;481:20426;;;20380:23;20200:4;481:20426;;20312:15;481:20426;;20413:28;:17;481:20426;7634:35;:::i;20413:28::-;20456:20;-1:-1:-1;20456:20:0;;481:20426;20107:33;-1:-1:-1;20748:4:0;20839:36;20891:7;20107:33;;481:20426;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20426:0;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;16498:24;;;481:20426;16532:24;;;481:20426;;;;;;;-1:-1:-1;;;;;481:20426:0;;;;16635:21;;;;16603:22;;;;481:20426;;;;;;16566:27;;481:20426;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20426:0;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;481:20426:0;;;;;;-1:-1:-1;481:20426:0;4892:5;481:20426;;;;;-1:-1:-1;481:20426:0;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;481:20426:0;;;-1:-1:-1;481:20426:0;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;-1:-1:-1;481:20426:0;:::o;:::-;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;481:20426:0;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;481:20426:0;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0:o;:::-;;;;;-1:-1:-1;481:20426:0;;;;-1:-1:-1;481:20426:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;-1:-1:-1;481:20426:0;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;-1:-1:-1;481:20426:0;;;;;;;:::i;:::-;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;658:137;717:4;8381:1560;658:137;693:84;481:20426;;701:12;481:20426;;;;;;701:20;693:84;:::i;481:20426::-;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;-1:-1:-1;481:20426:0;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;481:20426:0;;;-1:-1:-1;;481:20426:0;;;;;;;;-1:-1:-1;481:20426:0:o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;481:20426:0;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::i;8381:1560::-;;9030:4;8381:1560;8509:73;8523:15;481:20426;8517:21;;8509:73;:::i;:::-;8592:63;8600:26;8601:25;:11;:16;;481:20426;;3278:11;481:20426;;;;;;;8601:16;:25;481:20426;;;;;;;8601:25;8600:26;;481:20426;8600:26;8592:63;:::i;:::-;8669:19;:16;;481:20426;;3278:11;481:20426;;;;;;;8669:16;481:20426;-1:-1:-1;;;;;481:20426:0;;;8669:19;8700:4;481:20426;;;;;;;8669:36;8666:299;8700:4;;;481:20426;;;8764:10;8753:22;;;481:20426;;;8721:99;;8729:51;;481:20426;8753:22;;481:20426;;;;8753:22;481:20426;8729:51;8721:99;:::i;:::-;481:20426;;;;;;;;;8980:23;;481:20426;;8980:23;481:20426;;9018:16;9030:4;;9050:32;8601:11;9050:16;;481:20426;;3278:11;481:20426;;;;;;;9050:16;:25;481:20426;;-1:-1:-1;;481:20426:0;9030:4;481:20426;;;;9050:32;8523:15;9173:16;:19;:16;;481:20426;;3278:11;481:20426;;;;;;;9173:19;481:20426;9030:4;9205:16;;481:20426;;3278:11;481:20426;;;;;;;9205:16;:22;481:20426;9230:21;:16;;481:20426;;3278:11;481:20426;;;;;;;9230:16;:21;481:20426;;;;;;;:::i;:::-;9173:79;;;;;;:::i;:::-;-1:-1:-1;9267:572:0;;;9298:32;8601:11;9298:16;;481:20426;;3278:11;481:20426;;;;;;;9298:16;:25;481:20426;;-1:-1:-1;;481:20426:0;;;;;;9298:32;9409:19;:16;;481:20426;;3278:11;481:20426;;;;;;;9409:19;9030:4;9450:16;;481:20426;;3278:11;481:20426;;;;;;;9450:16;:22;481:20426;9494:16;9354:179;;9230:21;9494:16;;481:20426;;3278:11;481:20426;;;;;;;9494:16;481:20426;;-1:-1:-1;;;;;481:20426:0;;;;;;;;;9494:21;481:20426;9354:179;:::i;:::-;;;;9030:4;9552:11;:::o;9267:572::-;9669:19;:16;;481:20426;;3278:11;481:20426;;;;;;;9669:19;9030:4;9710:16;;481:20426;;3278:11;481:20426;;;;;;;9710:16;:22;481:20426;9754:16;9607:186;;9230:21;9754:16;;481:20426;;3278:11;481:20426;;;;;;;9607:186;;;;8523:15;9812:12;:::o;9014:899::-;8601:11;9869:16;:33;:16;481:20426;;3278:11;481:20426;;;;;;;9869:16;:25;481:20426;;-1:-1:-1;;481:20426:0;;;;9869:33;8523:15;8381:1560;:::o;8666:299::-;481:20426;;;8902:10;8891:22;;;481:20426;;;8859:95;;8867:51;;481:20426;8891:22;;481:20426;;;;8891:22;481:20426;8867:51;8859:95;:::i;:::-;8666:299;;658:137;;;;;;693:84;717:4;481:20426;701:12;481:20426;;;;;;701:20;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;658:137;1229:154;;;:::i;:::-;-1:-1:-1;;;;;481:20426:0;;;1259:4;12774:24;;12770:168;;658:137;481:20426;;;-1:-1:-1;;;;;481:20426:0;;12976:27;;;481:20426;;;;;;;;;12976:27;481:20426;;;;12976:27;481:20426;12976:27;481:20426;12966:38;;13014:16;;;;;;481:20426;;;;;;;;;;13014:16;481:20426;13055:16;717:4;13055:16;;481:20426;;;;;;;;;;13055:16;:23;481:20426;;13098:16;:26;:16;;481:20426;;;;;;;;;;;;13147:16;13014:7;13147:16;;481:20426;;;;;;;;;;;;13186:16;:20;:16;;481:20426;;;;;;;;;;;13228:16;:34;481:20426;13228:23;:16;;481:20426;;;;;;;;;;;-1:-1:-1;;;;;481:20426:0;;;13228:34;;;;13278:22;13381:70;13278:22;13328:33;13381:70;13278:22;:36;:22;;;481:20426;;14422:14;481:20426;;;;;;;13278:36;13228:23;13328:16;;481:20426;;;;;;;;;;13328:16;:23;481:20426;;-1:-1:-1;;;;;;481:20426:0;-1:-1:-1;;;;;481:20426:0;;;;;;;;;;13328:33;481:20426;;13381:70;;;;;:::i;:::-;;;;658:137;:::o;13224:354::-;481:20426;13495:72;481:20426;13495:72;481:20426;;;13495:72;;;;;:::i;12770:168::-;481:20426;;-1:-1:-1;;;12822:87:0;;;481:20426;;12822:87;1259:4;;;;12822:87;;;;:::i;:::-;;;;;;;;;;12814:113;12822:87;481:20426;12822:87;;;12770:168;12814:113;;:::i;:::-;12770:168;;12822:87;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1237:82::-;481:20426;1229:154;1268:51;481:20426;;1292:22;;;1237:10;;481:20426;;1292:22;;;;481:20426;1292:22;;:::i;1268:51::-;1237:82;;;;481:20426;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;481:20426:0;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;17861:934::-;18700:28;17861:934;18096:39;18406:38;17861:934;;481:20426;;;18096:39;;;;;;481:20426;;;;;;;;;;;;;;;;;;;;;;;:::i;18096:39::-;481:20426;18086:50;;481:20426;;18270:62;;;18096:39;18270:62;;;;481:20426;;;;;;;;;;;;18270:62;481:20426;18260:73;;18406:38;;:::i;:::-;481:20426;;;-1:-1:-1;;;;;481:20426:0;;;18096:39;18528:21;;481:20426;;;18528:21;481:20426;18528:21;;481:20426;;;;18528:21;481:20426;18700:28;18696:70;;481:20426;17861:934;:::o;18696:70::-;18751:4;18744:11;:::o;19046:719::-;481:20426;;19287:2;481:20426;;19273:16;19269:64;;19455:143;;;;;;;;;;;;;;;19612:7;19617:2;19612:7;;19608:46;;19046:719;19455:143;481:20426;;;;;;;;;19455:143;481:20426;;;;;;;;;;;;;;;;19691:31;;;19455:143;;481:20426;;19691:31;;;;;;481:20426;19691:31;19046:719;:::o;19608:46::-;481:20426;;19617:2;481:20426;;;;;;;19635:8;;;19608:46;;19269:64;19305:17;;;;:::o;481:20426::-;;;;;;;;;;;;:::i;:::-;;;;:::i;16821:463::-;481:20426;;717:4;481:20426;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;717:4;481:20426;;;;;;;;;;;;;;16990:12;16986:30;;481:20426;17097:17;17076:12;;481:20426;;17058:37;;;;;17148:29;;717:4;17148:29;;:::i;:::-;481:20426;17196:12;:35;;;;17097:17;17192:52;;717:4;481:20426;17032:24;;17192:52;17233:11;;717:4;17233:11;:::o;17196:35::-;;;17058:37;;;;481:20426;16821:463;:::o;16986:30::-;17004:12;481:20426;17004:12;:::o;16821:463::-;481:20426;;16965:5;481:20426;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5;481:20426;;;;;;;;;;;;;;16990:12;16986:30;;481:20426;17097:17;17076:12;;481:20426;;17058:37;;;;;17148:29;;;;:::i;:::-;481:20426;16965:5;17196:12;;:35;;;;;17097:17;17192:52;;;16965:5;481:20426;17032:24;;17196:35;1317:1;17212:19;;;17196:35;;;16821:463;481:20426;;16965:5;481:20426;;;;;3372:30;481:20426;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5;481:20426;;;;;;;;;;;;;;16990:12;16986:30;;481:20426;17097:17;17076:12;;481:20426;;17058:37;;;;;17148:29;;;;:::i;:::-;481:20426;16965:5;17196:12;;:35;;;;;17097:17;17192:52;;;16965:5;481:20426;17032:24;;17196:35;3372:30;17212:19;;;17196:35;;;16821:463;481:20426;;16965:5;481:20426;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5;481:20426;;;;;;;;;;;;;;16990:12;16986:30;;481:20426;17097:17;17076:12;;481:20426;;17058:37;;;;;17148:29;;;;:::i;:::-;481:20426;17196:12;16965:5;17196:12;;:35;;;;;17097:17;17192:52;;;;16965:5;481:20426;17032:24;;17192:52;17233:11;;;16965:5;17233:11;:::o;17196:35::-;17212:19;;-1:-1:-1;17196:35:0;;;;17058:37;;;;;481:20426;16821:463;:::o;16986:30::-;17004:12;;481:20426;17004:12;:::o;481:20426::-;;;;:::o;:::-;;;-1:-1:-1;;;481:20426:0;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
              "addKey(bytes32,uint256,uint256)": "1d381240",
              "approve(uint256,bool)": "747442d3",
              "execute(address,uint256,bytes)": "b61d27f6",
              "getClaim(bytes32)": "c9100bcb",
              "getClaimIdsByTopic(uint256)": "80e9e9e1",
              "getKey(bytes32)": "12aaac70",
              "getKeyPurposes(bytes32)": "fb307b34",
              "getKeysByPurpose(uint256)": "9010f726",
              "getRecoveredAddress(bytes,bytes32)": "c3b129e3",
              "initialize(address)": "c4d66de8",
              "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
              "keyHasPurpose(bytes32,uint256)": "d202158d",
              "removeClaim(bytes32)": "4eee424a",
              "removeKey(bytes32,uint256)": "53d413c5",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLibrary\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC734` \\\"KeyHolder\\\" and the `IERC735` \\\"ClaimHolder\\\" interfaces into a common Identity Contract. This implementation has a separate contract were it declares all storage, allowing for it to be used as an upgradable logic contract.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"See {IERC735-addClaim}.\",\"params\":{\"_data\":\"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\",\"_issuer\":\"The issuers identity contract address, or the address used to sign the above signature.\",\"_scheme\":\"The scheme with which this claim SHOULD be verified or how it should be processed.\",\"_signature\":\"Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\",\"_topic\":\"The type of claim\",\"_uri\":\"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\"},\"returns\":{\"claimRequestId\":\"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event.\"}},\"addKey(bytes32,uint256,uint256)\":{\"params\":{\"_key\":\"keccak256 representation of an ethereum address\",\"_purpose\":\"a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\",\"_type\":\"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\"},\"returns\":{\"success\":\"Returns TRUE if the addition was successful and FALSE if not\"}},\"approve(uint256,bool)\":{\"details\":\"See {IERC734-approve}.\"},\"constructor\":{\"params\":{\"_isLibrary\":\"boolean value stating if the contract is library or not calls __Identity_init if contract is not library\",\"initialManagementKey\":\"the address of the management key at deployment\"}},\"execute(address,uint256,bytes)\":{\"details\":\"See {IERC734-execute}.\",\"returns\":{\"executionId\":\"to use in the approve function, to approve or reject this execution.\"}},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"data\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"issuer\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"scheme\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"signature\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"topic\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"uri\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\"}},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}.\",\"params\":{\"_topic\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"claimIds\":\"Returns an array of claim IDs by topic.\"}},\"getKey(bytes32)\":{\"details\":\"See {IERC734-getKey}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"key\":\"Returns the full key data, if present in the identity.\",\"keyType\":\"Returns the full key data, if present in the identity.\",\"purposes\":\"Returns the full key data, if present in the identity.\"}},\"getKeyPurposes(bytes32)\":{\"details\":\"See {IERC734-getKeyPurposes}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"_purposes\":\"Returns the purposes of the specified key\"}},\"getKeysByPurpose(uint256)\":{\"details\":\"See {IERC734-getKeysByPurpose}.\",\"params\":{\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\"},\"returns\":{\"keys\":\"Returns an array of public key bytes32 hold by this identity and having the specified purpose\"}},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"initialize(address)\":{\"params\":{\"initialManagementKey\":\"The ethereum address to be set as the management key of the ONCHAINID.\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"claimValid\":\"true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"See {IERC734-keyHasPurpose}.\"},\"removeClaim(bytes32)\":{\"details\":\"See {IERC735-removeClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"success\":\"Returns TRUE when the claim was removed. triggers ClaimRemoved event\"}},\"removeKey(bytes32,uint256)\":{\"details\":\"See {IERC734-removeKey}.\"},\"version()\":{\"details\":\"Returns the string of the current version.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"notice\":\"Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key.\"},\"addKey(bytes32,uint256,uint256)\":{\"notice\":\"implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"notice\":\"Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key.\"},\"constructor\":{\"notice\":\"constructor of the Identity contract\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method.\"},\"getClaim(bytes32)\":{\"notice\":\"Implementation of the getClaim function from the ERC-735 standard.\"},\"getClaimIdsByTopic(uint256)\":{\"notice\":\"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic\"},\"getKey(bytes32)\":{\"notice\":\"Implementation of the getKey function from the ERC-734 standard\"},\"getKeyPurposes(bytes32)\":{\"notice\":\"gets the purposes of a key\"},\"getKeysByPurpose(uint256)\":{\"notice\":\"gets all the keys with a specific purpose from an identity\"},\"initialize(address)\":{\"notice\":\"When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\"},\"keyHasPurpose(bytes32,uint256)\":{\"notice\":\"Returns true if the key has MANAGEMENT purpose or the specified purpose.\"},\"removeClaim(bytes32)\":{\"notice\":\"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself.\"},\"removeKey(bytes32,uint256)\":{\"notice\":\"Remove the purpose from a key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/Identity.sol\":\"Identity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/Identity.sol\":{\"keccak256\":\"0x5bc52be65a62f9dc00b27ceb8722187cdd38eb261461057a90a93e0ed6e6ea96\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://409bc6ccbe2c62849c3643d90f6fd588ab136602119efb98ef916ee5249078d4\",\"dweb:/ipfs/QmR6fAgKkpbinKJTjrzC6hnUebYfXz6B8aQo6HAZM85FSp\"]},\"@onchainid/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3d1aa644ee16edee30a1e5b3a8c2388e99a6b4d46fadf7fea0c377529c3f03a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3714bbd6e289bdd2a61074bad5b6841bbab2f1bbcb4f461d41210cec8811ae\",\"dweb:/ipfs/QmNTvHAANFjFxzZs6uTniiNW5cJSADKh37g8gaCnujNope\"]},\"@onchainid/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]},\"@onchainid/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]},\"@onchainid/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264\",\"dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo\"]},\"@onchainid/contracts/storage/Storage.sol\":{\"keccak256\":\"0x8cc9c1d7c00214df76680b475b99c0f296c6e876d9a3a701e0e4074ea1160571\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://707ecf18de2c2d6da9f5827e2416934de65fae4109369ca8743b2e469661b094\",\"dweb:/ipfs/QmcRV2o4BRvDAHDaG7hjZtHB2WjxBPL1zkfZq7hwpbAYZG\"]},\"@onchainid/contracts/storage/Structs.sol\":{\"keccak256\":\"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c\",\"dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV\"]},\"@onchainid/contracts/version/Version.sol\":{\"keccak256\":\"0x9edca39fb2e35af59f82ce30de0f2b7727e0a2df9cf9b703288db868ea4e8405\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf16acdc9fbada3d392c243f3ded28d654084f2c367c7103b1769f0ee0a7b1a4\",\"dweb:/ipfs/QmeVUtHa9LGdiaxKav6swxHuWTYLhz3FXbQfY4wUMUKd97\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/interface/IClaimIssuer.sol": {
        "IClaimIssuer": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "ClaimRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                }
              ],
              "name": "addClaim",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimRequestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_keyType",
                  "type": "uint256"
                }
              ],
              "name": "addKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_approve",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                }
              ],
              "name": "getClaimIdsByTopic",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "claimIds",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "purposes",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKeyPurposes",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_purposes",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "getKeysByPurpose",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "keys",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_sig",
                  "type": "bytes"
                }
              ],
              "name": "isClaimRevoked",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IIdentity",
                  "name": "_identity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimTopic",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "isClaimValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "keyHasPurpose",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "removeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "removeKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_identity",
                  "type": "address"
                }
              ],
              "name": "revokeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "revokeClaimBySignature",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
              "addKey(bytes32,uint256,uint256)": "1d381240",
              "approve(uint256,bool)": "747442d3",
              "execute(address,uint256,bytes)": "b61d27f6",
              "getClaim(bytes32)": "c9100bcb",
              "getClaimIdsByTopic(uint256)": "80e9e9e1",
              "getKey(bytes32)": "12aaac70",
              "getKeyPurposes(bytes32)": "fb307b34",
              "getKeysByPurpose(uint256)": "9010f726",
              "isClaimRevoked(bytes)": "2646b264",
              "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
              "keyHasPurpose(bytes32,uint256)": "d202158d",
              "removeClaim(bytes32)": "4eee424a",
              "removeKey(bytes32,uint256)": "53d413c5",
              "revokeClaim(bytes32,address)": "73c33708",
              "revokeClaimBySignature(bytes)": "9f7f9edd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3d1aa644ee16edee30a1e5b3a8c2388e99a6b4d46fadf7fea0c377529c3f03a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3714bbd6e289bdd2a61074bad5b6841bbab2f1bbcb4f461d41210cec8811ae\",\"dweb:/ipfs/QmNTvHAANFjFxzZs6uTniiNW5cJSADKh37g8gaCnujNope\"]},\"@onchainid/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]},\"@onchainid/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]},\"@onchainid/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264\",\"dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/interface/IERC734.sol": {
        "IERC734": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_keyType",
                  "type": "uint256"
                }
              ],
              "name": "addKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_approve",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "purposes",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKeyPurposes",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_purposes",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "getKeysByPurpose",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "keys",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "keyHasPurpose",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "removeKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addKey(bytes32,uint256,uint256)": "1d381240",
              "approve(uint256,bool)": "747442d3",
              "execute(address,uint256,bytes)": "b61d27f6",
              "getKey(bytes32)": "12aaac70",
              "getKeyPurposes(bytes32)": "fb307b34",
              "getKeysByPurpose(uint256)": "9010f726",
              "keyHasPurpose(bytes32,uint256)": "d202158d",
              "removeKey(bytes32,uint256)": "53d413c5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/interface/IERC735.sol": {
        "IERC735": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                }
              ],
              "name": "addClaim",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimRequestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                }
              ],
              "name": "getClaimIdsByTopic",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "claimIds",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "removeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
              "getClaim(bytes32)": "c9100bcb",
              "getClaimIdsByTopic(uint256)": "80e9e9e1",
              "removeClaim(bytes32)": "4eee424a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/interface/IIdentity.sol": {
        "IIdentity": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                }
              ],
              "name": "addClaim",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimRequestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_keyType",
                  "type": "uint256"
                }
              ],
              "name": "addKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_approve",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                }
              ],
              "name": "getClaimIdsByTopic",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "claimIds",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "purposes",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKeyPurposes",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_purposes",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "getKeysByPurpose",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "keys",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IIdentity",
                  "name": "_identity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimTopic",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "isClaimValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "keyHasPurpose",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "removeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "removeKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
              "addKey(bytes32,uint256,uint256)": "1d381240",
              "approve(uint256,bool)": "747442d3",
              "execute(address,uint256,bytes)": "b61d27f6",
              "getClaim(bytes32)": "c9100bcb",
              "getClaimIdsByTopic(uint256)": "80e9e9e1",
              "getKey(bytes32)": "12aaac70",
              "getKeyPurposes(bytes32)": "fb307b34",
              "getKeysByPurpose(uint256)": "9010f726",
              "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
              "keyHasPurpose(bytes32,uint256)": "d202158d",
              "removeClaim(bytes32)": "4eee424a",
              "removeKey(bytes32,uint256)": "53d413c5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]},\"@onchainid/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]},\"@onchainid/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264\",\"dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/storage/Storage.sol": {
        "Storage": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601e5761ffff1960065416600655603a908160248239f35b600080fdfe600080fdfea2646970667358221220fe1f7c44a5cfb4f0b84f3d674dd531453c79d47145fb70f7b29f2dc8df2c974e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1E JUMPI PUSH2 0xFFFF NOT PUSH1 0x6 SLOAD AND PUSH1 0x6 SSTORE PUSH1 0x3A SWAP1 DUP2 PUSH1 0x24 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x1F PUSH29 0x44A5CFB4F0B84F3D674DD531453C79D47145FB70F7B29F2DC8DF2C974E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "86:1019:5:-:0;;;;;;;;;787:5;86:1019;;787:5;86:1019;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220fe1f7c44a5cfb4f0b84f3d674dd531453c79d47145fb70f7b29f2dc8df2c974e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x1F PUSH29 0x44A5CFB4F0B84F3D674DD531453C79D47145FB70F7B29F2DC8DF2C974E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "86:1019:5:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/storage/Storage.sol\":\"Storage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/storage/Storage.sol\":{\"keccak256\":\"0x8cc9c1d7c00214df76680b475b99c0f296c6e876d9a3a701e0e4074ea1160571\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://707ecf18de2c2d6da9f5827e2416934de65fae4109369ca8743b2e469661b094\",\"dweb:/ipfs/QmcRV2o4BRvDAHDaG7hjZtHB2WjxBPL1zkfZq7hwpbAYZG\"]},\"@onchainid/contracts/storage/Structs.sol\":{\"keccak256\":\"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c\",\"dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/storage/Structs.sol": {
        "Structs": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220d6d10faff3caa307956ed00af780ce0687b533136c79b1cf3e8dfee7b492dc2264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xD1 0xF 0xAF RETURN 0xCA LOG3 SMOD SWAP6 PUSH15 0xD00AF780CE0687B533136C79B1CF3E DUP14 INVALID 0xE7 0xB4 SWAP3 0xDC 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "62:3192:6:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220d6d10faff3caa307956ed00af780ce0687b533136c79b1cf3e8dfee7b492dc2264736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xD1 0xF 0xAF RETURN 0xCA LOG3 SMOD SWAP6 PUSH15 0xD00AF780CE0687B533136C79B1CF3E DUP14 INVALID 0xE7 0xB4 SWAP3 0xDC 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "62:3192:6:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/storage/Structs.sol\":\"Structs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/storage/Structs.sol\":{\"keccak256\":\"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c\",\"dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV\"]}},\"version\":1}"
        }
      },
      "@onchainid/contracts/version/Version.sol": {
        "Version": {
          "abi": [
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460145760fa908161001a8239f35b600080fdfe60806004361015600e57600080fd5b60003560e01c6354fd4d5014602257600080fd5b3460bf57600036600319011260bf576040810181811067ffffffffffffffff82111760a9576040526005815264322e322e3160d81b602082015260405190602082528181519182602083015260005b83811060925750508160006040809484010152601f80199101168101030190f35b602082820181015160408784010152859350016071565b634e487b7160e01b600052604160045260246000fd5b600080fdfea2646970667358221220b490cf013836c9443579469add3cde2b512a54596393b6c346635b45ae35098964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x14 JUMPI PUSH1 0xFA SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x54FD4D50 EQ PUSH1 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0xBF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0xBF JUMPI PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH1 0xA9 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH1 0x92 JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH1 0x71 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 SWAP1 0xCF ADD CODESIZE CALLDATASIZE 0xC9 PREVRANDAO CALLDATALOAD PUSH26 0x469ADD3CDE2B512A54596393B6C346635B45AE35098964736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "160:209:7:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806004361015600e57600080fd5b60003560e01c6354fd4d5014602257600080fd5b3460bf57600036600319011260bf576040810181811067ffffffffffffffff82111760a9576040526005815264322e322e3160d81b602082015260405190602082528181519182602083015260005b83811060925750508160006040809484010152601f80199101168101030190f35b602082820181015160408784010152859350016071565b634e487b7160e01b600052604160045260246000fd5b600080fdfea2646970667358221220b490cf013836c9443579469add3cde2b512a54596393b6c346635b45ae35098964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x54FD4D50 EQ PUSH1 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0xBF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0xBF JUMPI PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH1 0xA9 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH1 0x92 JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH1 0x71 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 SWAP1 0xCF ADD CODESIZE CALLDATASIZE 0xC9 PREVRANDAO CALLDATALOAD PUSH26 0x469ADD3CDE2B512A54596393B6C346635B45AE35098964736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "160:209:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:209:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:209:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;160:209:7;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version contract gives the versioning information of the implementation contract\",\"kind\":\"dev\",\"methods\":{\"version()\":{\"details\":\"Returns the string of the current version.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchainid/contracts/version/Version.sol\":\"Version\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/version/Version.sol\":{\"keccak256\":\"0x9edca39fb2e35af59f82ce30de0f2b7727e0a2df9cf9b703288db868ea4e8405\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf16acdc9fbada3d392c243f3ded28d654084f2c367c7103b1769f0ee0a7b1a4\",\"dweb:/ipfs/QmeVUtHa9LGdiaxKav6swxHuWTYLhz3FXbQfY4wUMUKd97\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "ERC165Upgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "contracts/system/identity-factory/identities/SMARTIdentityImplementation.sol": {
        "SMARTIdentityImplementation": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                }
              ],
              "name": "addClaim",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimRequestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_type",
                  "type": "uint256"
                }
              ],
              "name": "addKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_approve",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                }
              ],
              "name": "getClaimIdsByTopic",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "claimIds",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "purposes",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKeyPurposes",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_purposes",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "getKeysByPurpose",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "keys",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                }
              ],
              "name": "getRecoveredAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialManagementKey",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IIdentity",
                  "name": "_identity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimTopic",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "isClaimValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "claimValid",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "keyHasPurpose",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "result",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "removeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "removeKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346025576006805461ffff1916600117905560405161254b908161002b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461012757806312aaac70146101225780631d3812401461011d5780634eee424a1461011857806353d413c51461011357806354fd4d501461010e578063747442d31461010957806380e9e9e1146101045780639010f726146100ff578063b1a34e0d146100fa578063b61d27f6146100f5578063c0969a6e146100f0578063c3b129e3146100eb578063c4d66de8146100e6578063c9100bcb146100e1578063d202158d146100dc5763fb307b34146100d757600080fd5b6111ef565b6111ce565b61115d565b610f6b565b610f1a565b610eab565b610cf8565b610c45565b610af1565b610a7c565b6109f8565b6109a7565b6106cd565b610423565b61022d565b6101ce565b346101955760203660031901126101955760043563ffffffff60e01b81168091036101955763604b4d3760e11b8114908115610184575b8115610173575b506040519015158152602090f35b6301ffc9a760e01b14905038610165565b6301ffc9a760e01b8114915061015e565b600080fd5b906020808351928381520192019060005b8181106101b85750505090565b82518452602093840193909201916001016101ab565b346101955760203660031901126101955761021e6004356000908152600160208190526040909120908101546002820154916102099061122f565b9160405193849360608552606085019061019a565b91602084015260408301520390f35b34610195576060366003190112610195576004356024356044359161025e600160ff60065460081c1615151461127a565b30331480156103f3575b610271906112e2565b806002610288826000526001602052604060002090565b015403610391576102ab6102a6826000526001602052604060002090565b61122f565b9060005b825181101561032057836102c3828561140a565b51146102d1576001016102af565b60405162461bcd60e51b815260206004820152602160248201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736044820152606560f81b6064820152608490fd5b50929190506103428161033d856000526001602052604060002090565b61143b565b61035a8361033d836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a46001815280602081015b0390f35b91908260026103aa826000526001602052604060002090565b01556103d56103b96020610bc4565b8281526103d0856000526001602052604060002090565b6113bc565b8160016103ec856000526001602052604060002090565b0155610342565b5061027161041c604051602081019033825260208152610414604082610ba2565b51902061227c565b9050610268565b346101955760203660031901126101955760043561044d600160ff60065460081c1615151461127a565b303314801561069d575b61046090611474565b610474816000526004602052604060002090565b54801561064457600091610492826000526005602052604060002090565b54925b816104c06104b6836104b1876000526005602052604060002090565b611423565b90549060031b1c90565b1461062a576104ce906114db565b83811061049557916105296106199361052361050e6104b661061e985b610508610502886000526005602052604060002090565b916114ef565b90611423565b916104b1856000526005602052604060002090565b9061135d565b610545610540826000526005602052604060002090565b611514565b600161055b836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6105a76002610599846000526004602052604060002090565b01546001600160a01b031690565b60036105bd846000526004602052604060002090565b019061060660046105d8866000526004602052604060002090565b0160056105ef876000526004602052604060002090565b019060405194859460018060a01b03169985611607565b0390a46000526004602052604060002090565b61169c565b60405160018152602090f35b916105296106199361052361050e6104b661061e986104eb565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506104606106c66040516020810190338252602081526106be604082610ba2565b519020612303565b9050610457565b34610195576040366003190112610195576004356024356106fa600160ff60065460081c1615151461127a565b303314801561093e575b61070d906112e2565b61072f826002610727826000526001602052604060002090565b0154146116d4565b6107466102a6836000526001602052604060002090565b9060005b81610755828561140a565b51146107cb57610764906114db565b9082518214610773579061074a565b60405162461bcd60e51b815260206004820152602a60248201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604482015269636820707572706f736560b01b6064820152608490fd5b6107e96107e16107db85516114ef565b8561140a565b51918461140a565b5261080782610802856000526001602052604060002090565b61172a565b61081e610540846000526001602052604060002090565b600081815260026020526040812054905b8461084b6104b6836104b1876000526002602052604060002090565b1461092c57610859906114db565b81811061082f576105236108856104b661089a945b610508610502886000526002602052604060002090565b916104b1856000526002602052604060002090565b6108b1610540826000526002602052604060002090565b6108d360016108ca856000526001602052604060002090565b015492516114ef565b1561090b575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b610927610922846000526001602052604060002090565b6117a3565b6108d9565b6105236108856104b661089a9461086e565b5061070d61095f604051602081019033825260208152610414604082610ba2565b9050610704565b919082519283825260005b848110610992575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610971565b346101955760003660031901126101955761038d60408051906109ca8183610ba2565b6005825264322e322e3160d81b602083015251918291602083526020830190610966565b8015150361019557565b34610195576040366003190112610195576020610a38602435600435610a1d826109ee565b610a33600160ff60065460081c1615151461127a565b6119ed565b6040519015158152f35b602060408183019282815284518094520192019060005b818110610a665750505090565b8251845260209384019390920191600101610a59565b34610195576020366003190112610195576004356000526005602052604060002060405190816020825491828152019160005260206000209060005b818110610adb5761038d85610acf81870382610ba2565b60405191829182610a42565b8254845260209093019260019283019201610ab8565b34610195576020366003190112610195576004356000526002602052604060002060405190816020825491828152019160005260206000209060005b818110610b445761038d85610acf81870382610ba2565b8254845260209093019260019283019201610b2d565b6001600160a01b0381160361019557565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b9d57604052565b610b6b565b90601f8019910116810190811067ffffffffffffffff821117610b9d57604052565b90610bd26040519283610ba2565b565b67ffffffffffffffff8111610b9d57601f01601f191660200190565b929192610bfc82610bd4565b91610c0a6040519384610ba2565b829481845281830111610195578281602093846000960137010152565b9080601f8301121561019557816020610c4293359101610bf0565b90565b346101955760c036600319011261019557602435604435600435610c6882610b5a565b60643567ffffffffffffffff811161019557610c88903690600401610c27565b60843567ffffffffffffffff811161019557610ca8903690600401610c27565b9060a4359367ffffffffffffffff851161019557366023860112156101955761038d95610ce2610ce8963690602481600401359101610bf0565b94611cd2565b6040519081529081906020820190565b606036600319011261019557600435610d1081610b5a565b6024359060443567ffffffffffffffff81116101955761038d927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610d5d610e13933690600401610c27565b90610d74600160ff60065460081c1615151461127a565b6000549481610db18793610d92856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610dc8856000526003602052604060002090565b0155610dea846002610de4866000526003602052604060002090565b01612022565b610df56000546114db565b6000556040516001600160a01b03919091169586948291908261211e565b0390a4604080513360208201908152610e409290919061041490829081015b03601f198101835282610ba2565b15610e605750610e4f816117d7565b506040519081529081906020820190565b30141580610e7d575b15610ce857610e77816117d7565b50610ce8565b50604080513360208201908152610ea692909190610e9e9082908101610e32565b51902061237e565b610e69565b3461019557608036600319011261019557600435610ec881610b5a565b6024359060443567ffffffffffffffff811161019557610eec903690600401610c27565b906064359167ffffffffffffffff831161019557602093610f14610a38943690600401610c27565b9261212f565b346101955760403660031901126101955760043567ffffffffffffffff811161019557610f59610f506020923690600401610c27565b602435906121e6565b6040516001600160a01b039091168152f35b3461019557602036600319011261019557600435610f8881610b5a565b6001600160a01b038116156110c757600654600191829160ff161580156110be575b610fb39061248e565b610fc5600160ff196006541617600655565b610fd961010061ff00196006541617600655565b604080516001600160a01b03909216602083019081529190610ffe9082908101610e32565b519020806002611018826000526001602052604060002090565b01556110446110276020610bc4565b6001815261103f836000526001602052604060002090565b6124da565b6110638261105c836000526001602052604060002090565b0160019055565b60016000526002602052611097817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e061143b565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610faa565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b94919361114f93610c429795611141938852602088015260018060a01b0316604087015260c0606087015260c0860190610966565b908482036080860152610966565b9160a0818403910152610966565b34610195576020366003190112610195576004803560009081526020829052604090208054600182015460028301549093919261038d926001600160a01b03909216916005820191908101906111c1906111bb908190600301612261565b92612261565b926040519687968761110c565b34610195576040366003190112610195576020610a386024356004356123f9565b3461019557602036600319011261019557600435600052600160205261038d61121b604060002061122f565b60405191829160208352602083019061019a565b906040519182815491828252602082019060005260206000209260005b818110611261575050610bd292500383610ba2565b845483526001948501948794506020909301920161124c565b1561128157565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b156112e957565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b916113779183549060031b91821b91600019901b19161790565b9055565b818110611386575050565b6000815560010161137b565b805460018255806001106113a4575050565b610bd29160005260016020600020918201910161137b565b906113c682611392565b9060005260206000209060005b600181106113e057505050565b6001906020835193019281850155016113d3565b634e487b7160e01b600052603260045260246000fd5b805182101561141e5760209160051b010190565b6113f4565b805482101561141e5760005260206000200190600090565b805490600160401b821015610b9d578161145d91600161137794018155611423565b819391549060031b91821b91600019901b19161790565b1561147b57565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b60001981146114ea5760010190565b611347565b6000198101919082116114ea57565b634e487b7160e01b600052603160045260246000fd5b8054801561154557600019019061154061152e8383611423565b81929154906000199060031b1b191690565b905555565b6114fe565b90600182811c9216801561157a575b602083101461156457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611559565b600092918154916115948361154a565b80835292600181169081156115ea57506001146115b057505050565b60009081526020812093945091925b8383106115d0575060209250010190565b6001816020929493945483858701015201910191906115bf565b915050602093945060ff929192191683830152151560051b010190565b92611627610c429593611635938652608060208701526080860190611584565b908482036040860152611584565b916060818403910152611584565b61164d815461154a565b9081611657575050565b601f8211600114611669576000905550565b61168b610bd292826000526001601f6020600020920160051c8201910161137b565b600081815260208120918190559055565b6005906000815560006001820155600060028201556116bd60038201611643565b6116c960048201611643565b0161164d815461154a565b156116db57565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b81519167ffffffffffffffff8311610b9d57600160401b8311610b9d576020908254848455808510611786575b500190600052602060002060005b8381106117725750505050565b600190602084519401938184015501611765565b61179d90846000528584600020918201910161137b565b38611757565b60026000918054838255806117be575b508260018201550155565b818452602084206117d19181019061137b565b386117b3565b6001610c4291610a338260ff60065460081c1615151461127a565b156117f957565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b1561185557565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b156118a157565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b156118ed57565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b6000929181549161194e8361154a565b9260018116908115611999575060011461196757505050565b909192935060005260206000206000905b8382106119855750500190565b600181602092548486015201910190611978565b60ff191683525050811515909102019150565b3d156119d7573d906119bd82610bd4565b916119cb6040519384610ba2565b82523d6000602084013e565b606090565b906020610c42928181520190611584565b906001906119fe60005484106117f2565b611a31611a2c611a286003611a1d876000526003602052604060002090565b015460081c60ff1690565b1590565b61184e565b611a55611a48846000526003602052604060002090565b546001600160a01b031690565b3090838060a01b031614600014611ca657604080513360208201908152611a8d92611a8892906104149082908101610e32565b6118e6565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c7d57611aeb6003611add836000526003602052604060002090565b01805460ff19166001179055565b600080611b05611a48846000526003602052604060002090565b611b436001611b1e866000526003602052604060002090565b01546002611b36876000526003602052604060002090565b016040519283809261193e565b03925af1611b4f6119ac565b5015611c0b57611b7e6003611b6e836000526003602052604060002090565b01805461ff001916610100179055565b611b95611a48826000526003602052604060002090565b6001611bab836000526003602052604060002090565b0154917f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8611c036002611be8846000526003602052604060002090565b6040516001600160a01b0390961695928392909101826119dc565b0390a4600190565b611c22611a48826000526003602052604060002090565b6001611c38836000526003602052604060002090565b0154917fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68611c756002611be8846000526003602052604060002090565b0390a4600090565b6003611c96611ca1926000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611ccd92611cc89290610e9e9082908101610e32565b61189a565b611a8d565b9294909394611ced600160ff60065460081c1615151461127a565b3033148015611f20575b611d0090611474565b6001600160a01b03831694308603611ea9575b604080516001600160a01b03861660208201908152918101879052611d3b8160608101610e32565b51902096879486611d56876000526004602052604060002090565b55826001611d6e886000526004602052604060002090565b0155611d8a846003610de4896000526004602052604060002090565b611da4826004610de4896000526004602052604060002090565b611dbe856005610de4896000526004602052604060002090565b87611de7611ddb60026105998a6000526004602052604060002090565b6001600160a01b031690565b14611e765793611e7091611e647f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611e2e8961033d8c6000526005602052604060002090565b6002611e448a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b604051948594856120f0565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611e7091604051948594856120f0565b60405163604b4d3760e11b815260208180611eca8b878b3060048601611f5d565b03818a5afa8015611f1b57611ee791600091611eec575b50611fa1565b611d13565b611f0e915060203d602011611f14575b611f068183610ba2565b810190611f48565b38611ee1565b503d611efc565b611f95565b50611d00611f416040516020810190338252602081526106be604082610ba2565b9050611cf7565b908160209103126101955751610c42816109ee565b92610c429492611f879260018060a01b031685526020850152608060408501526080840190610966565b916060818403910152610966565b6040513d6000823e3d90fd5b15611fa857565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b9190601f8111611fec57505050565b610bd2926000526020600020906020601f840160051c83019310612018575b601f0160051c019061137b565b909150819061200b565b919091825167ffffffffffffffff8111610b9d5761204a81612044845461154a565b84611fdd565b6020601f821160011461208757819061137793949560009261207c575b50508160011b916000199060031b1c19161790565b015190503880612067565b601f1982169061209c84600052602060002090565b9160005b8181106120d8575095836001959697106120bf575b505050811b019055565b015160001960f88460031b161c191690553880806120b5565b9192602060018192868b0151815501940192016120a0565b92612110610c429593611f87938652608060208701526080860190610966565b908482036040860152610966565b906020610c42928181520190610966565b6121d8936121686121b39493610e32604051938492602084019660018060a01b0316875260408401526060808401526080830190610966565b5190206040516121aa81610e32602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b519020906121e6565b604080516001600160a01b039092166020830190815291906106be9082908101610e32565b6121e157600090565b600190565b600090604181510361225b5760208101519160606040830151920151901a91601b8310612245575b6040805194855260ff9093166020858101919091529284015260608301526000808052909160809060015afa15611f1b5760005190565b9091601b019060ff82116114ea5790919061220e565b50905090565b90610bd26122759260405193848092611584565b0383610ba2565b6000526001602052604060002060026040519161229883610b81565b6122a18161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f5576122d48260019261140a565b511480156122f0575b6122e9576001016122bd565b5050600190565b6122dd565b505050600090565b50600090565b6000526001602052604060002060026040519161231f83610b81565b6123288161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123599161140a565b5160018114908115612373575b506122e957600101612344565b600391501438612366565b6000526001602052604060002060026040519161239a83610b81565b6123a38161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123d49161140a565b51600181149081156123ee575b506122e9576001016123bf565b6002915014386123e1565b600052600160205260406000209060026040519261241684610b81565b61241f8161122f565b8452600181015460208501520154806040840152156124875760005b8251805182101561247e57816124509161140a565b518260018214918215612474575b505061246c5760010161243b565b505050600190565b149050823861245e565b50505050600090565b5050600090565b1561249557565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b906124e482611392565b9060005260206000209060005b600181106124fe57505050565b600190602060ff84511693019281850155016124f156fea2646970667358221220b9d361e7f19d4f57cb1c5c77892a93d781556312408bf57ff2d6a1a0f0eb5dd064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x25 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x254B SWAP1 DUP2 PUSH2 0x2B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4EEE424A EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x747442D3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x80E9E9E1 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xB1A34E0D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xC0969A6E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC3B129E3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0xDC JUMPI PUSH4 0xFB307B34 EQ PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x195 JUMPI PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x184 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x173 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x165 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x21E PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x209 SWAP1 PUSH2 0x122F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x25E PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x3F3 JUMPI JUMPDEST PUSH2 0x271 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH2 0x288 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x391 JUMPI PUSH2 0x2AB PUSH2 0x2A6 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x320 JUMPI DUP4 PUSH2 0x2C3 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x2D1 JUMPI PUSH1 0x1 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666C6963743A204B657920616C72656164792068617320707572706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 SWAP1 POP PUSH2 0x342 DUP2 PUSH2 0x33D DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST PUSH2 0x35A DUP4 PUSH2 0x33D DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH2 0x3AA DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x3D5 PUSH2 0x3B9 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x3D0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x3EC DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x342 JUMP JUMPDEST POP PUSH2 0x271 PUSH2 0x41C PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP PUSH2 0x268 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x44D PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x460 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x492 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 JUMPDEST DUP2 PUSH2 0x4C0 PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1423 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST EQ PUSH2 0x62A JUMPI PUSH2 0x4CE SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x495 JUMPI SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14EF JUMP JUMPDEST SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x545 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x55B DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 DUP3 PUSH32 0x3CF57863A89432C61C4A27073C6EE39E8A764BFF5A05AEBFBCDCDC80B2E6130A PUSH2 0x5A7 PUSH1 0x2 PUSH2 0x599 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x5BD DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH2 0x606 PUSH1 0x4 PUSH2 0x5D8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x5 PUSH2 0x5EF DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP6 PUSH2 0x1607 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A205468657265206973206E6F20636C61696D2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1A5D1A081D1A1A5CC81251 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH2 0x6C6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2303 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x6FA PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x93E JUMPI JUMPDEST PUSH2 0x70D SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH2 0x72F DUP3 PUSH1 0x2 PUSH2 0x727 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD EQ PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x2A6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 PUSH2 0x755 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x7CB JUMPI PUSH2 0x764 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 DUP3 MLOAD DUP3 EQ PUSH2 0x773 JUMPI SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B657920646F65736E27742068617665207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x636820707572706F7365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x7E9 PUSH2 0x7E1 PUSH2 0x7DB DUP6 MLOAD PUSH2 0x14EF JUMP JUMPDEST DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD SWAP2 DUP5 PUSH2 0x140A JUMP JUMPDEST MSTORE PUSH2 0x807 DUP3 PUSH2 0x802 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH2 0x81E PUSH2 0x540 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 PUSH2 0x84B PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST EQ PUSH2 0x92C JUMPI PUSH2 0x859 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8D3 PUSH1 0x1 PUSH2 0x8CA DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP3 MLOAD PUSH2 0x14EF JUMP JUMPDEST ISZERO PUSH2 0x90B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x927 PUSH2 0x922 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 PUSH2 0x86E JUMP JUMPDEST POP PUSH2 0x70D PUSH2 0x95F PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x704 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x992 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x971 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x38D PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x9CA DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x195 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xA1D DUP3 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA33 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA66 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA59 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xADB JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA42 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB44 JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x195 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xBA2 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xBFC DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0xC0A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x195 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x195 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC42 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xC68 DUP3 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xC88 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xCA8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x195 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x38D SWAP6 PUSH2 0xCE2 PUSH2 0xCE8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP5 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD10 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0x38D SWAP3 PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 SWAP3 PUSH2 0xD5D PUSH2 0xE13 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH2 0xD74 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP5 DUP2 PUSH2 0xDB1 DUP8 SWAP4 PUSH2 0xD92 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH2 0xDC8 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xDEA DUP5 PUSH1 0x2 PUSH2 0xDE4 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2022 JUMP JUMPDEST PUSH2 0xDF5 PUSH1 0x0 SLOAD PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP6 DUP7 SWAP5 DUP3 SWAP2 SWAP1 DUP3 PUSH2 0x211E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xE40 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xBA2 JUMP JUMPDEST ISZERO PUSH2 0xE60 JUMPI POP PUSH2 0xE4F DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST ADDRESS EQ ISZERO DUP1 PUSH2 0xE7D JUMPI JUMPDEST ISZERO PUSH2 0xCE8 JUMPI PUSH2 0xE77 DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH2 0xCE8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xEA6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x237E JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEC8 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xEEC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP4 PUSH2 0xF14 PUSH2 0xA38 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP3 PUSH2 0x212F JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xF59 PUSH2 0xF50 PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF88 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10BE JUMPI JUMPDEST PUSH2 0xFB3 SWAP1 PUSH2 0x248E JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xFD9 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0xFFE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x2 PUSH2 0x1018 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1044 PUSH2 0x1027 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH2 0x103F DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x1063 DUP3 PUSH2 0x105C DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1097 DUP2 PUSH32 0xE90B7BCEB6E7DF5418FB78D8EE546E97C83A08BBCCC01A0644D599CCD2A7C2E0 PUSH2 0x143B JUMP JUMPDEST PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 PUSH2 0x114F SWAP4 PUSH2 0xC42 SWAP8 SWAP6 PUSH2 0x1141 SWAP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x38D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x5 DUP3 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11C1 SWAP1 PUSH2 0x11BB SWAP1 DUP2 SWAP1 PUSH1 0x3 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x110C JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x23F9 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x38D PUSH2 0x121B PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1261 JUMPI POP POP PUSH2 0xBD2 SWAP3 POP SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x124C JUMP JUMPDEST ISZERO PUSH2 0x1281 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E746572616374696E67207769746820746865206C69627261727920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B1BA1034B9903337B93134B23232B717 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x65206D616E6167656D656E74206B6579 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x1377 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1386 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x137B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x13A4 JUMPI POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 PUSH2 0x13C6 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x13E0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x13D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xB9D JUMPI DUP2 PUSH2 0x145D SWAP2 PUSH1 0x1 PUSH2 0x1377 SWAP5 ADD DUP2 SSTORE PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x147B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6520636C61696D207369676E6572206B6579 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x14EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1545 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1540 PUSH2 0x152E DUP4 DUP4 PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x14FE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x157A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1564 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x1594 DUP4 PUSH2 0x154A JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x15B0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x15D0 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1627 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1635 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1657 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1669 JUMPI PUSH1 0x0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x168B PUSH2 0xBD2 SWAP3 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP2 DUP2 SWAP1 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH1 0x0 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x16BD PUSH1 0x3 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x16C9 PUSH1 0x4 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST ADD PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST ISZERO PUSH2 0x16DB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B65792069736E277420726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x1786 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1772 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x179D SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP1 SLOAD DUP4 DUP3 SSTORE DUP1 PUSH2 0x17BE JUMPI JUMPDEST POP DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH2 0x17D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xC42 SWAP2 PUSH2 0xA33 DUP3 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ISZERO PUSH2 0x17F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F76652061206E6F6E2D6578697374696E67206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32B1BABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1855 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F742068617665206D616E6167656D656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B6579 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x194E DUP4 PUSH2 0x154A JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1999 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1967 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1985 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x19BD DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0x19CB PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19FE PUSH1 0x0 SLOAD DUP5 LT PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1A31 PUSH2 0x1A2C PUSH2 0x1A28 PUSH1 0x3 PUSH2 0x1A1D DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1A55 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADDRESS SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x0 EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1A8D SWAP3 PUSH2 0x1A88 SWAP3 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO ISZERO DUP2 MSTORE DUP4 SWAP1 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP1 PUSH1 0x20 SWAP1 LOG2 ISZERO ISZERO SUB PUSH2 0x1C7D JUMPI PUSH2 0x1AEB PUSH1 0x3 PUSH2 0x1ADD DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B05 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x1 PUSH2 0x1B1E DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x2 PUSH2 0x1B36 DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x193E JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH2 0x1B4F PUSH2 0x19AC JUMP JUMPDEST POP ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1B7E PUSH1 0x3 PUSH2 0x1B6E DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B95 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BAB DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 PUSH2 0x1C03 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 ADD DUP3 PUSH2 0x19DC JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1C22 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C38 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 PUSH2 0x1C75 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1C96 PUSH2 0x1CA1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1CCD SWAP3 PUSH2 0x1CC8 SWAP3 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST SWAP3 SWAP5 SWAP1 SWAP4 SWAP5 PUSH2 0x1CED PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x1F20 JUMPI JUMPDEST PUSH2 0x1D00 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 ADDRESS DUP7 SUB PUSH2 0x1EA9 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x1D3B DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP7 PUSH2 0x1D56 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP3 PUSH1 0x1 PUSH2 0x1D6E DUP9 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1D8A DUP5 PUSH1 0x3 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DA4 DUP3 PUSH1 0x4 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DBE DUP6 PUSH1 0x5 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1DE7 PUSH2 0x1DDB PUSH1 0x2 PUSH2 0x599 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1E76 JUMPI SWAP4 PUSH2 0x1E70 SWAP2 PUSH2 0x1E64 PUSH32 0x46149B18AA084502C3F12BC75E19EDA8BDA8D102B82CCE8474677A6D0D5F43C5 SWAP7 PUSH2 0x1E2E DUP10 PUSH2 0x33D DUP13 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1E44 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST POP PUSH32 0x3BAB293FC00DB832D7619A9299914251B8747C036867EC056CBD506F60135B13 SWAP4 PUSH2 0x1E70 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x1ECA DUP12 DUP8 DUP12 ADDRESS PUSH1 0x4 DUP7 ADD PUSH2 0x1F5D JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1EE7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1EEC JUMPI JUMPDEST POP PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1F0E SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F14 JUMPI JUMPDEST PUSH2 0x1F06 DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F48 JUMP JUMPDEST CODESIZE PUSH2 0x1EE1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1F95 JUMP JUMPDEST POP PUSH2 0x1D00 PUSH2 0x1F41 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x195 JUMPI MLOAD PUSH2 0xC42 DUP2 PUSH2 0x9EE JUMP JUMPDEST SWAP3 PUSH2 0xC42 SWAP5 SWAP3 PUSH2 0x1F87 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420636C61696D PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1FEC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2018 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH2 0x204A DUP2 PUSH2 0x2044 DUP5 SLOAD PUSH2 0x154A JUMP JUMPDEST DUP5 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2087 JUMPI DUP2 SWAP1 PUSH2 0x1377 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x207C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH2 0x209C DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20D8 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x20A0 JUMP JUMPDEST SWAP3 PUSH2 0x2110 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1F87 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x21D8 SWAP4 PUSH2 0x2168 PUSH2 0x21B3 SWAP5 SWAP4 PUSH2 0xE32 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x21AA DUP2 PUSH2 0xE32 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH1 0x3C SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP3 MSTORE PUSH1 0x1C DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0x6BE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x21E1 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x41 DUP2 MLOAD SUB PUSH2 0x225B JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 BYTE SWAP2 PUSH1 0x1B DUP4 LT PUSH2 0x2245 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1B ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x14EA JUMPI SWAP1 SWAP2 SWAP1 PUSH2 0x220E JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH2 0x2275 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1584 JUMP JUMPDEST SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2298 DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x22A1 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x22D4 DUP3 PUSH1 0x1 SWAP3 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ DUP1 ISZERO PUSH2 0x22F0 JUMPI JUMPDEST PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x22BD JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x22DD JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x231F DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x2359 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2373 JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP EQ CODESIZE PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x239A DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x23A3 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x23D4 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x23EE JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x23E1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2416 DUP5 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x241F DUP2 PUSH2 0x122F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x247E JUMPI DUP2 PUSH2 0x2450 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD DUP3 PUSH1 0x1 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x2474 JUMPI JUMPDEST POP POP PUSH2 0x246C JUMPI PUSH1 0x1 ADD PUSH2 0x243B JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EQ SWAP1 POP DUP3 CODESIZE PUSH2 0x245E JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x24E4 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x24FE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x24F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xD3 PUSH2 0xE7F1 SWAP14 0x4F JUMPI 0xCB SHR TLOAD PUSH24 0x892A93D781556312408BF57FF2D6A1A0F0EB5DD064736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "478:371:11:-:0;;;;;;787:5:5;478:371:11;;-1:-1:-1;;478:371:11;587:4;478:371;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_available_length_bytes": {
                  "entryPoint": 3056,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 8008,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 3111,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_bytes32_dyn": {
                  "entryPoint": 2626,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 410,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_12828": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 8478,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage": {
                  "entryPoint": 6462,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage_to_bytes": {
                  "entryPoint": 5508,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_contract_IIdentity_uint256_bytes_bytes": {
                  "entryPoint": 8029,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_packed_stringliteral_178a_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 2406,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_5aba": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c5c6": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_ced1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes_storage": {
                  "entryPoint": 6620,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bytes_bytes_string": {
                  "entryPoint": 8432,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bytes_storage_bytes__string": {
                  "entryPoint": 5639,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_address_bytes_bytes_string": {
                  "entryPoint": 4364,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 3012,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 3028,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_uint256_dyn_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_pop_array_bytes32_dyn_storage_ptr": {
                  "entryPoint": 5396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
                  "entryPoint": 5179,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_sub_uint256": {
                  "entryPoint": 5359,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_bytes_storage": {
                  "entryPoint": 8157,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_uint256": {
                  "entryPoint": 4987,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_from_storage_to_memory_array_uint256_dyn": {
                  "entryPoint": 4655,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_bytes": {
                  "entryPoint": 8801,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn": {
                  "entryPoint": 5930,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint256_to_array_uint256_dyn": {
                  "entryPoint": 5052,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint8_to_array_uint256_dyn": {
                  "entryPoint": 9434,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_bytes_to_bytes": {
                  "entryPoint": 8226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "external_fun_addClaim": {
                  "entryPoint": 3141,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_addKey": {
                  "entryPoint": 557,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 2552,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_execute": {
                  "entryPoint": 3320,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getClaim": {
                  "entryPoint": 4445,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getClaimIdsByTopic": {
                  "entryPoint": 2684,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKey": {
                  "entryPoint": 462,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKeyPurposes": {
                  "entryPoint": 4591,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKeysByPurpose": {
                  "entryPoint": 2801,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getRecoveredAddress": {
                  "entryPoint": 3866,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_initialize": {
                  "entryPoint": 3947,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isClaimValid": {
                  "entryPoint": 3755,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_keyHasPurpose": {
                  "entryPoint": 4558,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeClaim": {
                  "entryPoint": 1059,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeKey": {
                  "entryPoint": 1741,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_supportsInterface": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_version": {
                  "entryPoint": 2471,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 5450,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 6572,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2978,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_13153": {
                  "entryPoint": 2945,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_approve_inner": {
                  "entryPoint": 6637,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_getRecoveredAddress": {
                  "entryPoint": 8678,
                  "id": 1210,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_isClaimValid": {
                  "entryPoint": 8495,
                  "id": 1157,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_isConstructor": {
                  "entryPoint": null,
                  "id": 1300,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose": {
                  "entryPoint": 9209,
                  "id": 1093,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12819": {
                  "entryPoint": 8828,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12830": {
                  "entryPoint": 8963,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12879": {
                  "entryPoint": 9086,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 5339,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12820": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12827": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12831": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12832": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12892": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 5130,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_delegatedOnly": {
                  "entryPoint": 6103,
                  "id": 24,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "modifier_delegatedOnly_12872": {
                  "entryPoint": 7378,
                  "id": 24,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 4935,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x31": {
                  "entryPoint": 5374,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 5108,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2923,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 6298,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_3c5b": {
                  "entryPoint": 4730,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6f6b": {
                  "entryPoint": 4834,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_7b35": {
                  "entryPoint": 5236,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_85cd": {
                  "entryPoint": 6130,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ac6b": {
                  "entryPoint": 6374,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_cc19": {
                  "entryPoint": 6222,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e9e2": {
                  "entryPoint": 8097,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf7": {
                  "entryPoint": 5844,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_f97b": {
                  "entryPoint": 9358,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "resize_array_array_uint256_dyn_storage": {
                  "entryPoint": 5010,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 8085,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn_ptr": {
                  "entryPoint": 5155,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_set_to_zero_bytes": {
                  "entryPoint": 5699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_struct_Claim": {
                  "entryPoint": 5788,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_struct_Key": {
                  "entryPoint": 6051,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "transit_byte_array_long_to_short_bytes_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic32_12959": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_12884": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_13084": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_13086": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bytes32_to_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_t_bool_to_t_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 4957,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 2906,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 2542,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_uint8": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461012757806312aaac70146101225780631d3812401461011d5780634eee424a1461011857806353d413c51461011357806354fd4d501461010e578063747442d31461010957806380e9e9e1146101045780639010f726146100ff578063b1a34e0d146100fa578063b61d27f6146100f5578063c0969a6e146100f0578063c3b129e3146100eb578063c4d66de8146100e6578063c9100bcb146100e1578063d202158d146100dc5763fb307b34146100d757600080fd5b6111ef565b6111ce565b61115d565b610f6b565b610f1a565b610eab565b610cf8565b610c45565b610af1565b610a7c565b6109f8565b6109a7565b6106cd565b610423565b61022d565b6101ce565b346101955760203660031901126101955760043563ffffffff60e01b81168091036101955763604b4d3760e11b8114908115610184575b8115610173575b506040519015158152602090f35b6301ffc9a760e01b14905038610165565b6301ffc9a760e01b8114915061015e565b600080fd5b906020808351928381520192019060005b8181106101b85750505090565b82518452602093840193909201916001016101ab565b346101955760203660031901126101955761021e6004356000908152600160208190526040909120908101546002820154916102099061122f565b9160405193849360608552606085019061019a565b91602084015260408301520390f35b34610195576060366003190112610195576004356024356044359161025e600160ff60065460081c1615151461127a565b30331480156103f3575b610271906112e2565b806002610288826000526001602052604060002090565b015403610391576102ab6102a6826000526001602052604060002090565b61122f565b9060005b825181101561032057836102c3828561140a565b51146102d1576001016102af565b60405162461bcd60e51b815260206004820152602160248201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736044820152606560f81b6064820152608490fd5b50929190506103428161033d856000526001602052604060002090565b61143b565b61035a8361033d836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a46001815280602081015b0390f35b91908260026103aa826000526001602052604060002090565b01556103d56103b96020610bc4565b8281526103d0856000526001602052604060002090565b6113bc565b8160016103ec856000526001602052604060002090565b0155610342565b5061027161041c604051602081019033825260208152610414604082610ba2565b51902061227c565b9050610268565b346101955760203660031901126101955760043561044d600160ff60065460081c1615151461127a565b303314801561069d575b61046090611474565b610474816000526004602052604060002090565b54801561064457600091610492826000526005602052604060002090565b54925b816104c06104b6836104b1876000526005602052604060002090565b611423565b90549060031b1c90565b1461062a576104ce906114db565b83811061049557916105296106199361052361050e6104b661061e985b610508610502886000526005602052604060002090565b916114ef565b90611423565b916104b1856000526005602052604060002090565b9061135d565b610545610540826000526005602052604060002090565b611514565b600161055b836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6105a76002610599846000526004602052604060002090565b01546001600160a01b031690565b60036105bd846000526004602052604060002090565b019061060660046105d8866000526004602052604060002090565b0160056105ef876000526004602052604060002090565b019060405194859460018060a01b03169985611607565b0390a46000526004602052604060002090565b61169c565b60405160018152602090f35b916105296106199361052361050e6104b661061e986104eb565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506104606106c66040516020810190338252602081526106be604082610ba2565b519020612303565b9050610457565b34610195576040366003190112610195576004356024356106fa600160ff60065460081c1615151461127a565b303314801561093e575b61070d906112e2565b61072f826002610727826000526001602052604060002090565b0154146116d4565b6107466102a6836000526001602052604060002090565b9060005b81610755828561140a565b51146107cb57610764906114db565b9082518214610773579061074a565b60405162461bcd60e51b815260206004820152602a60248201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604482015269636820707572706f736560b01b6064820152608490fd5b6107e96107e16107db85516114ef565b8561140a565b51918461140a565b5261080782610802856000526001602052604060002090565b61172a565b61081e610540846000526001602052604060002090565b600081815260026020526040812054905b8461084b6104b6836104b1876000526002602052604060002090565b1461092c57610859906114db565b81811061082f576105236108856104b661089a945b610508610502886000526002602052604060002090565b916104b1856000526002602052604060002090565b6108b1610540826000526002602052604060002090565b6108d360016108ca856000526001602052604060002090565b015492516114ef565b1561090b575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b610927610922846000526001602052604060002090565b6117a3565b6108d9565b6105236108856104b661089a9461086e565b5061070d61095f604051602081019033825260208152610414604082610ba2565b9050610704565b919082519283825260005b848110610992575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610971565b346101955760003660031901126101955761038d60408051906109ca8183610ba2565b6005825264322e322e3160d81b602083015251918291602083526020830190610966565b8015150361019557565b34610195576040366003190112610195576020610a38602435600435610a1d826109ee565b610a33600160ff60065460081c1615151461127a565b6119ed565b6040519015158152f35b602060408183019282815284518094520192019060005b818110610a665750505090565b8251845260209384019390920191600101610a59565b34610195576020366003190112610195576004356000526005602052604060002060405190816020825491828152019160005260206000209060005b818110610adb5761038d85610acf81870382610ba2565b60405191829182610a42565b8254845260209093019260019283019201610ab8565b34610195576020366003190112610195576004356000526002602052604060002060405190816020825491828152019160005260206000209060005b818110610b445761038d85610acf81870382610ba2565b8254845260209093019260019283019201610b2d565b6001600160a01b0381160361019557565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b9d57604052565b610b6b565b90601f8019910116810190811067ffffffffffffffff821117610b9d57604052565b90610bd26040519283610ba2565b565b67ffffffffffffffff8111610b9d57601f01601f191660200190565b929192610bfc82610bd4565b91610c0a6040519384610ba2565b829481845281830111610195578281602093846000960137010152565b9080601f8301121561019557816020610c4293359101610bf0565b90565b346101955760c036600319011261019557602435604435600435610c6882610b5a565b60643567ffffffffffffffff811161019557610c88903690600401610c27565b60843567ffffffffffffffff811161019557610ca8903690600401610c27565b9060a4359367ffffffffffffffff851161019557366023860112156101955761038d95610ce2610ce8963690602481600401359101610bf0565b94611cd2565b6040519081529081906020820190565b606036600319011261019557600435610d1081610b5a565b6024359060443567ffffffffffffffff81116101955761038d927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610d5d610e13933690600401610c27565b90610d74600160ff60065460081c1615151461127a565b6000549481610db18793610d92856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610dc8856000526003602052604060002090565b0155610dea846002610de4866000526003602052604060002090565b01612022565b610df56000546114db565b6000556040516001600160a01b03919091169586948291908261211e565b0390a4604080513360208201908152610e409290919061041490829081015b03601f198101835282610ba2565b15610e605750610e4f816117d7565b506040519081529081906020820190565b30141580610e7d575b15610ce857610e77816117d7565b50610ce8565b50604080513360208201908152610ea692909190610e9e9082908101610e32565b51902061237e565b610e69565b3461019557608036600319011261019557600435610ec881610b5a565b6024359060443567ffffffffffffffff811161019557610eec903690600401610c27565b906064359167ffffffffffffffff831161019557602093610f14610a38943690600401610c27565b9261212f565b346101955760403660031901126101955760043567ffffffffffffffff811161019557610f59610f506020923690600401610c27565b602435906121e6565b6040516001600160a01b039091168152f35b3461019557602036600319011261019557600435610f8881610b5a565b6001600160a01b038116156110c757600654600191829160ff161580156110be575b610fb39061248e565b610fc5600160ff196006541617600655565b610fd961010061ff00196006541617600655565b604080516001600160a01b03909216602083019081529190610ffe9082908101610e32565b519020806002611018826000526001602052604060002090565b01556110446110276020610bc4565b6001815261103f836000526001602052604060002090565b6124da565b6110638261105c836000526001602052604060002090565b0160019055565b60016000526002602052611097817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e061143b565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610faa565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b94919361114f93610c429795611141938852602088015260018060a01b0316604087015260c0606087015260c0860190610966565b908482036080860152610966565b9160a0818403910152610966565b34610195576020366003190112610195576004803560009081526020829052604090208054600182015460028301549093919261038d926001600160a01b03909216916005820191908101906111c1906111bb908190600301612261565b92612261565b926040519687968761110c565b34610195576040366003190112610195576020610a386024356004356123f9565b3461019557602036600319011261019557600435600052600160205261038d61121b604060002061122f565b60405191829160208352602083019061019a565b906040519182815491828252602082019060005260206000209260005b818110611261575050610bd292500383610ba2565b845483526001948501948794506020909301920161124c565b1561128157565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b156112e957565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b916113779183549060031b91821b91600019901b19161790565b9055565b818110611386575050565b6000815560010161137b565b805460018255806001106113a4575050565b610bd29160005260016020600020918201910161137b565b906113c682611392565b9060005260206000209060005b600181106113e057505050565b6001906020835193019281850155016113d3565b634e487b7160e01b600052603260045260246000fd5b805182101561141e5760209160051b010190565b6113f4565b805482101561141e5760005260206000200190600090565b805490600160401b821015610b9d578161145d91600161137794018155611423565b819391549060031b91821b91600019901b19161790565b1561147b57565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b60001981146114ea5760010190565b611347565b6000198101919082116114ea57565b634e487b7160e01b600052603160045260246000fd5b8054801561154557600019019061154061152e8383611423565b81929154906000199060031b1b191690565b905555565b6114fe565b90600182811c9216801561157a575b602083101461156457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611559565b600092918154916115948361154a565b80835292600181169081156115ea57506001146115b057505050565b60009081526020812093945091925b8383106115d0575060209250010190565b6001816020929493945483858701015201910191906115bf565b915050602093945060ff929192191683830152151560051b010190565b92611627610c429593611635938652608060208701526080860190611584565b908482036040860152611584565b916060818403910152611584565b61164d815461154a565b9081611657575050565b601f8211600114611669576000905550565b61168b610bd292826000526001601f6020600020920160051c8201910161137b565b600081815260208120918190559055565b6005906000815560006001820155600060028201556116bd60038201611643565b6116c960048201611643565b0161164d815461154a565b156116db57565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b81519167ffffffffffffffff8311610b9d57600160401b8311610b9d576020908254848455808510611786575b500190600052602060002060005b8381106117725750505050565b600190602084519401938184015501611765565b61179d90846000528584600020918201910161137b565b38611757565b60026000918054838255806117be575b508260018201550155565b818452602084206117d19181019061137b565b386117b3565b6001610c4291610a338260ff60065460081c1615151461127a565b156117f957565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b1561185557565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b156118a157565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b156118ed57565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b6000929181549161194e8361154a565b9260018116908115611999575060011461196757505050565b909192935060005260206000206000905b8382106119855750500190565b600181602092548486015201910190611978565b60ff191683525050811515909102019150565b3d156119d7573d906119bd82610bd4565b916119cb6040519384610ba2565b82523d6000602084013e565b606090565b906020610c42928181520190611584565b906001906119fe60005484106117f2565b611a31611a2c611a286003611a1d876000526003602052604060002090565b015460081c60ff1690565b1590565b61184e565b611a55611a48846000526003602052604060002090565b546001600160a01b031690565b3090838060a01b031614600014611ca657604080513360208201908152611a8d92611a8892906104149082908101610e32565b6118e6565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c7d57611aeb6003611add836000526003602052604060002090565b01805460ff19166001179055565b600080611b05611a48846000526003602052604060002090565b611b436001611b1e866000526003602052604060002090565b01546002611b36876000526003602052604060002090565b016040519283809261193e565b03925af1611b4f6119ac565b5015611c0b57611b7e6003611b6e836000526003602052604060002090565b01805461ff001916610100179055565b611b95611a48826000526003602052604060002090565b6001611bab836000526003602052604060002090565b0154917f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8611c036002611be8846000526003602052604060002090565b6040516001600160a01b0390961695928392909101826119dc565b0390a4600190565b611c22611a48826000526003602052604060002090565b6001611c38836000526003602052604060002090565b0154917fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68611c756002611be8846000526003602052604060002090565b0390a4600090565b6003611c96611ca1926000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611ccd92611cc89290610e9e9082908101610e32565b61189a565b611a8d565b9294909394611ced600160ff60065460081c1615151461127a565b3033148015611f20575b611d0090611474565b6001600160a01b03831694308603611ea9575b604080516001600160a01b03861660208201908152918101879052611d3b8160608101610e32565b51902096879486611d56876000526004602052604060002090565b55826001611d6e886000526004602052604060002090565b0155611d8a846003610de4896000526004602052604060002090565b611da4826004610de4896000526004602052604060002090565b611dbe856005610de4896000526004602052604060002090565b87611de7611ddb60026105998a6000526004602052604060002090565b6001600160a01b031690565b14611e765793611e7091611e647f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611e2e8961033d8c6000526005602052604060002090565b6002611e448a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b604051948594856120f0565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611e7091604051948594856120f0565b60405163604b4d3760e11b815260208180611eca8b878b3060048601611f5d565b03818a5afa8015611f1b57611ee791600091611eec575b50611fa1565b611d13565b611f0e915060203d602011611f14575b611f068183610ba2565b810190611f48565b38611ee1565b503d611efc565b611f95565b50611d00611f416040516020810190338252602081526106be604082610ba2565b9050611cf7565b908160209103126101955751610c42816109ee565b92610c429492611f879260018060a01b031685526020850152608060408501526080840190610966565b916060818403910152610966565b6040513d6000823e3d90fd5b15611fa857565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b9190601f8111611fec57505050565b610bd2926000526020600020906020601f840160051c83019310612018575b601f0160051c019061137b565b909150819061200b565b919091825167ffffffffffffffff8111610b9d5761204a81612044845461154a565b84611fdd565b6020601f821160011461208757819061137793949560009261207c575b50508160011b916000199060031b1c19161790565b015190503880612067565b601f1982169061209c84600052602060002090565b9160005b8181106120d8575095836001959697106120bf575b505050811b019055565b015160001960f88460031b161c191690553880806120b5565b9192602060018192868b0151815501940192016120a0565b92612110610c429593611f87938652608060208701526080860190610966565b908482036040860152610966565b906020610c42928181520190610966565b6121d8936121686121b39493610e32604051938492602084019660018060a01b0316875260408401526060808401526080830190610966565b5190206040516121aa81610e32602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b519020906121e6565b604080516001600160a01b039092166020830190815291906106be9082908101610e32565b6121e157600090565b600190565b600090604181510361225b5760208101519160606040830151920151901a91601b8310612245575b6040805194855260ff9093166020858101919091529284015260608301526000808052909160809060015afa15611f1b5760005190565b9091601b019060ff82116114ea5790919061220e565b50905090565b90610bd26122759260405193848092611584565b0383610ba2565b6000526001602052604060002060026040519161229883610b81565b6122a18161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f5576122d48260019261140a565b511480156122f0575b6122e9576001016122bd565b5050600190565b6122dd565b505050600090565b50600090565b6000526001602052604060002060026040519161231f83610b81565b6123288161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123599161140a565b5160018114908115612373575b506122e957600101612344565b600391501438612366565b6000526001602052604060002060026040519161239a83610b81565b6123a38161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123d49161140a565b51600181149081156123ee575b506122e9576001016123bf565b6002915014386123e1565b600052600160205260406000209060026040519261241684610b81565b61241f8161122f565b8452600181015460208501520154806040840152156124875760005b8251805182101561247e57816124509161140a565b518260018214918215612474575b505061246c5760010161243b565b505050600190565b149050823861245e565b50505050600090565b5050600090565b1561249557565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b906124e482611392565b9060005260206000209060005b600181106124fe57505050565b600190602060ff84511693019281850155016124f156fea2646970667358221220b9d361e7f19d4f57cb1c5c77892a93d781556312408bf57ff2d6a1a0f0eb5dd064736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4EEE424A EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x747442D3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x80E9E9E1 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xB1A34E0D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xC0969A6E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC3B129E3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0xDC JUMPI PUSH4 0xFB307B34 EQ PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x195 JUMPI PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x184 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x173 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x165 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x21E PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x209 SWAP1 PUSH2 0x122F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x25E PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x3F3 JUMPI JUMPDEST PUSH2 0x271 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH2 0x288 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x391 JUMPI PUSH2 0x2AB PUSH2 0x2A6 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x320 JUMPI DUP4 PUSH2 0x2C3 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x2D1 JUMPI PUSH1 0x1 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666C6963743A204B657920616C72656164792068617320707572706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 SWAP1 POP PUSH2 0x342 DUP2 PUSH2 0x33D DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST PUSH2 0x35A DUP4 PUSH2 0x33D DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH2 0x3AA DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x3D5 PUSH2 0x3B9 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x3D0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x3EC DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x342 JUMP JUMPDEST POP PUSH2 0x271 PUSH2 0x41C PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP PUSH2 0x268 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x44D PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x460 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x492 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 JUMPDEST DUP2 PUSH2 0x4C0 PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1423 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST EQ PUSH2 0x62A JUMPI PUSH2 0x4CE SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x495 JUMPI SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14EF JUMP JUMPDEST SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x545 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x55B DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 DUP3 PUSH32 0x3CF57863A89432C61C4A27073C6EE39E8A764BFF5A05AEBFBCDCDC80B2E6130A PUSH2 0x5A7 PUSH1 0x2 PUSH2 0x599 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x5BD DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH2 0x606 PUSH1 0x4 PUSH2 0x5D8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x5 PUSH2 0x5EF DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP6 PUSH2 0x1607 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A205468657265206973206E6F20636C61696D2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1A5D1A081D1A1A5CC81251 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH2 0x6C6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2303 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x6FA PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x93E JUMPI JUMPDEST PUSH2 0x70D SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH2 0x72F DUP3 PUSH1 0x2 PUSH2 0x727 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD EQ PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x2A6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 PUSH2 0x755 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x7CB JUMPI PUSH2 0x764 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 DUP3 MLOAD DUP3 EQ PUSH2 0x773 JUMPI SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B657920646F65736E27742068617665207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x636820707572706F7365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x7E9 PUSH2 0x7E1 PUSH2 0x7DB DUP6 MLOAD PUSH2 0x14EF JUMP JUMPDEST DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD SWAP2 DUP5 PUSH2 0x140A JUMP JUMPDEST MSTORE PUSH2 0x807 DUP3 PUSH2 0x802 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH2 0x81E PUSH2 0x540 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 PUSH2 0x84B PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST EQ PUSH2 0x92C JUMPI PUSH2 0x859 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8D3 PUSH1 0x1 PUSH2 0x8CA DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP3 MLOAD PUSH2 0x14EF JUMP JUMPDEST ISZERO PUSH2 0x90B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x927 PUSH2 0x922 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 PUSH2 0x86E JUMP JUMPDEST POP PUSH2 0x70D PUSH2 0x95F PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x704 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x992 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x971 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x38D PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x9CA DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x195 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xA1D DUP3 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA33 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA66 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA59 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xADB JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA42 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB44 JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x195 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xBA2 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xBFC DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0xC0A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x195 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x195 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC42 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xC68 DUP3 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xC88 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xCA8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x195 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x38D SWAP6 PUSH2 0xCE2 PUSH2 0xCE8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP5 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD10 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0x38D SWAP3 PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 SWAP3 PUSH2 0xD5D PUSH2 0xE13 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH2 0xD74 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP5 DUP2 PUSH2 0xDB1 DUP8 SWAP4 PUSH2 0xD92 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH2 0xDC8 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xDEA DUP5 PUSH1 0x2 PUSH2 0xDE4 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2022 JUMP JUMPDEST PUSH2 0xDF5 PUSH1 0x0 SLOAD PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP6 DUP7 SWAP5 DUP3 SWAP2 SWAP1 DUP3 PUSH2 0x211E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xE40 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xBA2 JUMP JUMPDEST ISZERO PUSH2 0xE60 JUMPI POP PUSH2 0xE4F DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST ADDRESS EQ ISZERO DUP1 PUSH2 0xE7D JUMPI JUMPDEST ISZERO PUSH2 0xCE8 JUMPI PUSH2 0xE77 DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH2 0xCE8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xEA6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x237E JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEC8 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xEEC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP4 PUSH2 0xF14 PUSH2 0xA38 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP3 PUSH2 0x212F JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xF59 PUSH2 0xF50 PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF88 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10BE JUMPI JUMPDEST PUSH2 0xFB3 SWAP1 PUSH2 0x248E JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xFD9 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0xFFE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x2 PUSH2 0x1018 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1044 PUSH2 0x1027 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH2 0x103F DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x1063 DUP3 PUSH2 0x105C DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1097 DUP2 PUSH32 0xE90B7BCEB6E7DF5418FB78D8EE546E97C83A08BBCCC01A0644D599CCD2A7C2E0 PUSH2 0x143B JUMP JUMPDEST PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 PUSH2 0x114F SWAP4 PUSH2 0xC42 SWAP8 SWAP6 PUSH2 0x1141 SWAP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x38D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x5 DUP3 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11C1 SWAP1 PUSH2 0x11BB SWAP1 DUP2 SWAP1 PUSH1 0x3 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x110C JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x23F9 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x38D PUSH2 0x121B PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1261 JUMPI POP POP PUSH2 0xBD2 SWAP3 POP SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x124C JUMP JUMPDEST ISZERO PUSH2 0x1281 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E746572616374696E67207769746820746865206C69627261727920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B1BA1034B9903337B93134B23232B717 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x65206D616E6167656D656E74206B6579 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x1377 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1386 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x137B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x13A4 JUMPI POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 PUSH2 0x13C6 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x13E0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x13D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xB9D JUMPI DUP2 PUSH2 0x145D SWAP2 PUSH1 0x1 PUSH2 0x1377 SWAP5 ADD DUP2 SSTORE PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x147B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6520636C61696D207369676E6572206B6579 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x14EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1545 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1540 PUSH2 0x152E DUP4 DUP4 PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x14FE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x157A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1564 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x1594 DUP4 PUSH2 0x154A JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x15B0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x15D0 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1627 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1635 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1657 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1669 JUMPI PUSH1 0x0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x168B PUSH2 0xBD2 SWAP3 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP2 DUP2 SWAP1 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH1 0x0 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x16BD PUSH1 0x3 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x16C9 PUSH1 0x4 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST ADD PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST ISZERO PUSH2 0x16DB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B65792069736E277420726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x1786 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1772 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x179D SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP1 SLOAD DUP4 DUP3 SSTORE DUP1 PUSH2 0x17BE JUMPI JUMPDEST POP DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH2 0x17D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xC42 SWAP2 PUSH2 0xA33 DUP3 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ISZERO PUSH2 0x17F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F76652061206E6F6E2D6578697374696E67206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32B1BABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1855 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F742068617665206D616E6167656D656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B6579 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x194E DUP4 PUSH2 0x154A JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1999 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1967 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1985 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x19BD DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0x19CB PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19FE PUSH1 0x0 SLOAD DUP5 LT PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1A31 PUSH2 0x1A2C PUSH2 0x1A28 PUSH1 0x3 PUSH2 0x1A1D DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1A55 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADDRESS SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x0 EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1A8D SWAP3 PUSH2 0x1A88 SWAP3 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO ISZERO DUP2 MSTORE DUP4 SWAP1 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP1 PUSH1 0x20 SWAP1 LOG2 ISZERO ISZERO SUB PUSH2 0x1C7D JUMPI PUSH2 0x1AEB PUSH1 0x3 PUSH2 0x1ADD DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B05 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x1 PUSH2 0x1B1E DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x2 PUSH2 0x1B36 DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x193E JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH2 0x1B4F PUSH2 0x19AC JUMP JUMPDEST POP ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1B7E PUSH1 0x3 PUSH2 0x1B6E DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B95 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BAB DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 PUSH2 0x1C03 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 ADD DUP3 PUSH2 0x19DC JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1C22 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C38 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 PUSH2 0x1C75 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1C96 PUSH2 0x1CA1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1CCD SWAP3 PUSH2 0x1CC8 SWAP3 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST SWAP3 SWAP5 SWAP1 SWAP4 SWAP5 PUSH2 0x1CED PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x1F20 JUMPI JUMPDEST PUSH2 0x1D00 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 ADDRESS DUP7 SUB PUSH2 0x1EA9 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x1D3B DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP7 PUSH2 0x1D56 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP3 PUSH1 0x1 PUSH2 0x1D6E DUP9 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1D8A DUP5 PUSH1 0x3 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DA4 DUP3 PUSH1 0x4 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DBE DUP6 PUSH1 0x5 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1DE7 PUSH2 0x1DDB PUSH1 0x2 PUSH2 0x599 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1E76 JUMPI SWAP4 PUSH2 0x1E70 SWAP2 PUSH2 0x1E64 PUSH32 0x46149B18AA084502C3F12BC75E19EDA8BDA8D102B82CCE8474677A6D0D5F43C5 SWAP7 PUSH2 0x1E2E DUP10 PUSH2 0x33D DUP13 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1E44 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST POP PUSH32 0x3BAB293FC00DB832D7619A9299914251B8747C036867EC056CBD506F60135B13 SWAP4 PUSH2 0x1E70 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x1ECA DUP12 DUP8 DUP12 ADDRESS PUSH1 0x4 DUP7 ADD PUSH2 0x1F5D JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1EE7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1EEC JUMPI JUMPDEST POP PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1F0E SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F14 JUMPI JUMPDEST PUSH2 0x1F06 DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F48 JUMP JUMPDEST CODESIZE PUSH2 0x1EE1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1F95 JUMP JUMPDEST POP PUSH2 0x1D00 PUSH2 0x1F41 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x195 JUMPI MLOAD PUSH2 0xC42 DUP2 PUSH2 0x9EE JUMP JUMPDEST SWAP3 PUSH2 0xC42 SWAP5 SWAP3 PUSH2 0x1F87 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420636C61696D PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1FEC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2018 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH2 0x204A DUP2 PUSH2 0x2044 DUP5 SLOAD PUSH2 0x154A JUMP JUMPDEST DUP5 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2087 JUMPI DUP2 SWAP1 PUSH2 0x1377 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x207C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH2 0x209C DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20D8 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x20A0 JUMP JUMPDEST SWAP3 PUSH2 0x2110 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1F87 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x21D8 SWAP4 PUSH2 0x2168 PUSH2 0x21B3 SWAP5 SWAP4 PUSH2 0xE32 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x21AA DUP2 PUSH2 0xE32 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH1 0x3C SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP3 MSTORE PUSH1 0x1C DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0x6BE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x21E1 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x41 DUP2 MLOAD SUB PUSH2 0x225B JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 BYTE SWAP2 PUSH1 0x1B DUP4 LT PUSH2 0x2245 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1B ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x14EA JUMPI SWAP1 SWAP2 SWAP1 PUSH2 0x220E JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH2 0x2275 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1584 JUMP JUMPDEST SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2298 DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x22A1 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x22D4 DUP3 PUSH1 0x1 SWAP3 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ DUP1 ISZERO PUSH2 0x22F0 JUMPI JUMPDEST PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x22BD JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x22DD JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x231F DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x2359 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2373 JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP EQ CODESIZE PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x239A DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x23A3 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x23D4 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x23EE JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x23E1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2416 DUP5 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x241F DUP2 PUSH2 0x122F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x247E JUMPI DUP2 PUSH2 0x2450 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD DUP3 PUSH1 0x1 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x2474 JUMPI JUMPDEST POP POP PUSH2 0x246C JUMPI PUSH1 0x1 ADD PUSH2 0x243B JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EQ SWAP1 POP DUP3 CODESIZE PUSH2 0x245E JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x24E4 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x24FE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x24F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xD3 PUSH2 0xE7F1 SWAP14 0x4F JUMPI 0xCB SHR TLOAD PUSH24 0x892A93D781556312408BF57FF2D6A1A0F0EB5DD064736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "478:371:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;;;;;;;;-1:-1:-1;;;702:42:11;;;:86;;;;478:371;702:138;;;;478:371;-1:-1:-1;478:371:11;;;;;;;;;;702:138;-1:-1:-1;;;1134:40:9;;-1:-1:-1;702:138:11;;;:86;-1:-1:-1;;;748:40:11;;;-1:-1:-1;702:86:11;;478:371;-1:-1:-1;478:371:11;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;-1:-1:-1;478:371:11;;;4426:5:0;478:371:11;;;;;;;;4448:19:0;;;478:371:11;4469:15:0;;;478:371:11;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;;;693:84:0;717:4;478:371:11;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;478:371:11;929:152:0;;;:::i;:::-;7228:11;:15;:11;;478:371:11;;717:4:0;478:371:11;;;;;;;7228:11:0;:15;478:371:11;7228:23:0;;;478:371:11;7296:11:0;;478:371:11;;717:4:0;478:371:11;;;;;;;7296:11:0;478:371:11;:::i;:::-;7335:24:0;-1:-1:-1;7397:17:0;478:371:11;;7361:34:0;;;;;7452:26;;;;;:::i;:::-;478:371:11;7501:19:0;7497:109;;717:4;478:371:11;7335:24:0;;7497:109;478:371:11;;-1:-1:-1;;;7544:43:0;;478:371:11;;7544:43:0;;478:371:11;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;7544:43:0;7361:34;;;;;;7634:35;:11;;;478:371:11;;717:4:0;478:371:11;;;;;;;7634:11:0;:35;:::i;:::-;7831;:24;;;478:371:11;;7228:15:0;478:371:11;;;;;;;7831:35:0;478:371:11;;7882:31:0;;-1:-1:-1;7882:31:0;;717:4;478:371:11;;;;;;;;;;7224:597:0;7700:11;;;7228:15;7700:11;;478:371:11;;717:4:0;478:371:11;;;;;;;7700:11:0;:15;478:371:11;;;;;:::i;:::-;;;;7736:11:0;;478:371:11;;717:4:0;478:371:11;;;;;;;7736:11:0;478:371:11;:::i;:::-;7783:11:0;717:4;7783:11;;478:371:11;;717:4:0;478:371:11;;;;;;;7783:11:0;:19;478:371:11;7224:597:0;;937:82;478:371:11;929:152:0;968:51;478:371:11;;;992:22:0;;937:10;;478:371:11;;;992:22:0;;;478:371:11;992:22:0;;:::i;:::-;478:371:11;982:33:0;;968:51;:::i;:::-;937:82;;;;478:371:11;;;;;;-1:-1:-1;;478:371:11;;;;;;693:84:0;717:4;478:371:11;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;478:371:11;1229:154:0;;;:::i;:::-;14236:17;;478:371:11;;;;;;;;;;14236:17:0;478:371:11;14273:11:0;;14269:95;;-1:-1:-1;14422:22:0;;;478:371:11;;14422:14:0;478:371:11;;;;;;;14422:22:0;478:371:11;14461:175:0;;14468:22;478:371:11;14468:34:0;:22;;;478:371:11;;14422:14:0;478:371:11;;;;;;;14468:22:0;:34;:::i;:::-;478:371:11;;;;;;;;;14468:46:0;;;14530:12;;;:::i;:::-;14561:25;;;14461:175;14557:69;14606:5;14646:84;15054:17;14606:5;14646:34;478:371:11;14691:39:0;15047:24;14606:5;14461:175;14714:15;14691:22;;478:371:11;;14422:14:0;478:371:11;;;;;;;14691:22:0;14714:15;;:::i;:::-;14691:39;;:::i;478:371:11:-;14646:22:0;;;478:371:11;;14422:14:0;478:371:11;;;;;;;14646:34:0;:84;;:::i;:::-;14740:26;:22;;478:371:11;;14422:14:0;478:371:11;;;;;;;14740:22:0;:26;:::i;:::-;717:4;14852:17;;478:371:11;;;;;;;;;;14852:17:0;:24;478:371:11;14890:17:0;;14784:252;478:371:11;14890:24:0;:17;;478:371:11;;;;;;;;;;14890:17:0;:24;478:371:11;-1:-1:-1;;;;;478:371:11;;;;14928:27:0;:17;;478:371:11;;;;;;;;;;14928:17:0;:27;14969:17;14784:252;478:371:11;14969:17:0;;478:371:11;;;;;;;;;;14969:17:0;:22;14422:14;15005:17;;478:371:11;;;;;;;;;;15005:17:0;:21;478:371:11;;;;;;;;;;;;14784:252:0;;;:::i;:::-;;;;478:371:11;;;;;;;;;;15054:17:0;15047:24;:::i;:::-;478:371:11;;717:4:0;478:371:11;;;;;14468:46:0;;14646:84;15054:17;14468:46;14646:34;478:371:11;14691:39:0;15047:24;14468:46;;;14269:95;478:371:11;;-1:-1:-1;;;14300:53:0;;478:371:11;;14300:53:0;;478:371:11;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;7544:43:0;1237:82;478:371:11;1229:154:0;1268:51;478:371:11;;;1292:22:0;;1237:10;;478:371:11;;;1292:22:0;;;478:371:11;1292:22:0;;:::i;:::-;478:371:11;1282:33:0;;1268:51;:::i;:::-;1237:82;;;;478:371:11;;;;;;-1:-1:-1;;478:371:11;;;;;;;;693:84:0;717:4;478:371:11;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;478:371:11;929:152:0;;;:::i;:::-;10193:69;10201:11;:15;:11;;478:371:11;;717:4:0;478:371:11;;;;;;;10201:11:0;:15;478:371:11;10201:23:0;10193:69;:::i;:::-;478:371:11;10301:11:0;;478:371:11;;717:4:0;478:371:11;;;;;;;;10332:21:0;-1:-1:-1;10363:220:0;10370:23;;;;;:::i;:::-;478:371:11;10370:35:0;;;10421:14;;;:::i;:::-;478:371:11;;;10454:32:0;;10450:123;;10363:220;;;10450:123;478:371:11;;-1:-1:-1;;;10506:52:0;;478:371:11;;10506:52:0;;478:371:11;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;7544:43:0;10370:35;10593:57;10619:31;10629:20;478:371:11;;10629:20:0;:::i;:::-;10619:31;;:::i;:::-;478:371:11;10593:57:0;;;:::i;:::-;478:371:11;;10660:11:0;;;478:371:11;;717:4:0;478:371:11;;;;;;;10660:11:0;478:371:11;:::i;:::-;10702:24:0;:11;;478:371:11;;717:4:0;478:371:11;;;;;;;10702:24:0;-1:-1:-1;478:371:11;;;7228:15:0;478:371:11;;;;;;10827:167:0;;10834:24;478:371:11;10834:34:0;:24;;;478:371:11;;7228:15:0;478:371:11;;;;;;;;10834:42:0;;;10892:10;;;:::i;:::-;10921:23;;;10827:167;10917:67;11004:34;478:371:11;11041:41:0;11004:78;10964:5;10827:167;11066:15;11041:24;;478:371:11;;7228:15:0;478:371:11;;;;;;;;11004:24:0;;;478:371:11;;7228:15:0;478:371:11;;;;;;;11004:78:0;11092:28;:24;;478:371:11;;7228:15:0;478:371:11;;;;;;;11092:28:0;11182:20;717:4;11148:11;;478:371:11;;717:4:0;478:371:11;;;;;;;11148:11:0;:19;478:371:11;;;11182:20:0;:::i;:::-;:25;11178:74;;10827:167;478:371:11;;11267:35:0;;-1:-1:-1;11267:35:0;;717:4;478:371:11;;;;;11178:74:0;11223:18;11230:11;;478:371:11;;717:4:0;478:371:11;;;;;;;11230:11:0;11223:18;:::i;:::-;11178:74;;10834:42;11004:34;478:371:11;11041:41:0;11004:78;10834:42;;;937:82;478:371:11;929:152:0;968:51;478:371:11;;;992:22:0;;937:10;;478:371:11;;;992:22:0;;;478:371:11;992:22:0;;:::i;968:51::-;937:82;;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;8381:1560:0;478:371:11;;;;;;;:::i;:::-;693:84:0;717:4;478:371:11;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;:::-;8381:1560;:::i;:::-;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;-1:-1:-1;478:371:11;5960:14:0;478:371:11;;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;-1:-1:-1;478:371:11;5422:14:0;478:371:11;;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;478:371:11;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;478:371:11;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12732:22:0;478:371:11;;;;;;;;;;;:::i;:::-;12732:22:0;;:::i;:::-;478:371:11;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3453:52:0;478:371:11;;3453:52:0;478:371:11;;;;;;:::i;:::-;;693:84:0;717:4;478:371:11;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;:::-;-1:-1:-1;478:371:11;3278:25:0;;:34;:25;;;;478:371:11;;3278:11:0;478:371:11;;;;;;;3278:25:0;478:371:11;;-1:-1:-1;;;;;;478:371:11;-1:-1:-1;;;;;478:371:11;;;;;;;;;;3278:34:0;3322:25;717:4;3322:25;;478:371:11;;3278:11:0;478:371:11;;;;;;;3322:25:0;:31;478:371:11;;3372:25:0;:30;:25;;478:371:11;;3278:11:0;478:371:11;;;;;;;3372:25:0;:30;478:371:11;:::i;:::-;3420:17:0;-1:-1:-1;478:371:11;3420:17:0;:::i;:::-;-1:-1:-1;478:371:11;;;-1:-1:-1;;;;;478:371:11;;;;;;;;;;;3453:52:0;:::i;:::-;;;;478:371:11;;;3555:10:0;478:371:11;3544:22:0;;478:371:11;;;3520:51:0;;3544:22;;478:371:11;3544:22:0;;478:371:11;;;;3544:22:0;;478:371:11;;3544:22:0;;;;;;:::i;3520:51::-;3534:33;;;8481:12;;;;:::i;:::-;;478:371:11;;;;;;;;;;;;;3516:255:0;3658:4;3643:20;;:75;;;3516:255;3639:132;3516:255;3639:132;8481:12;;;:::i;:::-;;3516:255;;3643:75;-1:-1:-1;478:371:11;;;3555:10:0;478:371:11;3691:22:0;;478:371:11;;;3667:51:0;;3691:22;;478:371:11;3691:22:0;;478:371:11;;;;3691:22:0;478:371:11;3691:22:0;478:371:11;3681:33:0;;3667:51;:::i;:::-;3643:75;;478:371:11;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;;;478:371:11;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;478:371:11;;2312:34:0;478:371:11;;20108:12:0;478:371:11;20200:4:0;;;;478:371:11;;20107:13:0;:33;;;;478:371:11;20099:76:0;;;:::i;:::-;20185:19;20200:4;478:371:11;;20108:12:0;478:371:11;;;20108:12:0;478:371:11;;20185:19:0;20214;478:371:11;;;20108:12:0;478:371:11;;;20108:12:0;478:371:11;;20214:19:0;478:371:11;;;-1:-1:-1;;;;;478:371:11;;;;20269:32:0;;478:371:11;;;20269:32:0;478:371:11;20269:32:0;;478:371:11;;;;20269:32:0;478:371:11;20269:32:0;478:371:11;20259:43:0;;20312:11;:15;:11;;478:371:11;;717:4:0;478:371:11;;;;;;;20312:11:0;:15;478:371:11;;;;;:::i;:::-;;;;20344:11:0;;478:371:11;;717:4:0;478:371:11;;;;;;;20344:11:0;478:371:11;:::i;:::-;20380:23:0;:11;;;478:371:11;;717:4:0;478:371:11;;;;;;;20380:11:0;:19;20200:4;478:371:11;;;20380:23:0;20200:4;478:371:11;;20312:15:0;478:371:11;;20413:28:0;:17;478:371:11;7634:35:0;:::i;20413:28::-;20456:20;-1:-1:-1;20456:20:0;;478:371:11;20107:33:0;-1:-1:-1;20748:4:0;20839:36;20891:7;20107:33;;478:371:11;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;;;-1:-1:-1;478:371:11;;;;;;;;;;;;16498:24:0;;;478:371:11;16532:24:0;;;478:371:11;;;;;;;-1:-1:-1;;;;;478:371:11;;;;16635:21:0;;;;16603:22;;;;478:371:11;;;;;;16566:27:0;;478:371:11;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;478:371:11;;;;;;-1:-1:-1;478:371:11;4892:5:0;478:371:11;;;;;-1:-1:-1;478:371:11;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;478:371:11;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;478:371:11;;;-1:-1:-1;478:371:11;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;;-1:-1:-1;478:371:11;:::o;:::-;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;478:371:11;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;478:371:11;;;;;;;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11:o;:::-;;;;;-1:-1:-1;478:371:11;;;;-1:-1:-1;478:371:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;-1:-1:-1;478:371:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;;-1:-1:-1;478:371:11;;;;;;;:::i;:::-;;;;;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;658:137:0;717:4;8381:1560;658:137;693:84;478:371:11;;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;478:371:11:-;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;-1:-1:-1;478:371:11;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;478:371:11;;;-1:-1:-1;;478:371:11;;;;;;;;-1:-1:-1;478:371:11:o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;478:371:11;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::i;8381:1560:0:-;;9030:4;8381:1560;8509:73;8523:15;478:371:11;8517:21:0;;8509:73;:::i;:::-;8592:63;8600:26;8601:25;:11;:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;8601:16:0;:25;478:371:11;;;;;;;8601:25:0;8600:26;;478:371:11;8600:26:0;8592:63;:::i;:::-;8669:19;:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;8669:16:0;478:371:11;-1:-1:-1;;;;;478:371:11;;;8669:19:0;8700:4;478:371:11;;;;;;;8669:36:0;8666:299;8700:4;;;478:371:11;;;8764:10:0;8753:22;;;478:371:11;;;8721:99:0;;8729:51;;478:371:11;8753:22:0;;478:371:11;;;;8753:22:0;478:371:11;8729:51:0;8721:99;:::i;:::-;478:371:11;;;;;;;;;8980:23:0;;478:371:11;;8980:23:0;478:371:11;;9018:16:0;9030:4;;9050:32;8601:11;9050:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9050:16:0;:25;478:371:11;;-1:-1:-1;;478:371:11;9030:4:0;478:371:11;;;;9050:32:0;8523:15;9173:16;:19;:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9173:19:0;478:371:11;9030:4:0;9205:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9205:16:0;:22;478:371:11;9230:21:0;:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9230:16:0;:21;478:371:11;;;;;;;:::i;:::-;9173:79:0;;;;;;:::i;:::-;-1:-1:-1;9267:572:0;;;9298:32;8601:11;9298:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9298:16:0;:25;478:371:11;;-1:-1:-1;;478:371:11;;;;;;9298:32:0;9409:19;:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9409:19:0;9030:4;9450:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9450:16:0;:22;478:371:11;9494:16:0;9354:179;;9230:21;9494:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9494:16:0;478:371:11;;-1:-1:-1;;;;;478:371:11;;;;;;;;;9494:21:0;478:371:11;9354:179:0;:::i;:::-;;;;9030:4;9552:11;:::o;9267:572::-;9669:19;:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9669:19:0;9030:4;9710:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9710:16:0;:22;478:371:11;9754:16:0;9607:186;;9230:21;9754:16;;478:371:11;;3278:11:0;478:371:11;;;;;;;9607:186:0;;;;8523:15;9812:12;:::o;9014:899::-;8601:11;9869:16;:33;:16;478:371:11;;3278:11:0;478:371:11;;;;;;;9869:16:0;:25;478:371:11;;-1:-1:-1;;478:371:11;;;;9869:33:0;8523:15;8381:1560;:::o;8666:299::-;478:371:11;;;8902:10:0;8891:22;;;478:371:11;;;8859:95:0;;8867:51;;478:371:11;8891:22:0;;478:371:11;;;;8891:22:0;478:371:11;8867:51:0;8859:95;:::i;:::-;8666:299;;658:137;;;;;;693:84;717:4;478:371:11;701:12:0;478:371:11;;;;;;701:20:0;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;658:137;1229:154;;;:::i;:::-;-1:-1:-1;;;;;478:371:11;;;1259:4:0;12774:24;;12770:168;;658:137;478:371:11;;;-1:-1:-1;;;;;478:371:11;;12976:27:0;;;478:371:11;;;;;;;;;12976:27:0;478:371:11;;;;12976:27:0;478:371:11;12976:27:0;478:371:11;12966:38:0;;13014:16;;;;;;478:371:11;;;;;;;;;;13014:16:0;478:371:11;13055:16:0;717:4;13055:16;;478:371:11;;;;;;;;;;13055:16:0;:23;478:371:11;;13098:16:0;:26;:16;;478:371:11;;;;;;;;;;;;13147:16:0;13014:7;13147:16;;478:371:11;;;;;;;;;;;;13186:16:0;:20;:16;;478:371:11;;;;;;;;;;;13228:16:0;:34;478:371:11;13228:23:0;:16;;478:371:11;;;;;;;;;;;-1:-1:-1;;;;;478:371:11;;;13228:34:0;;;;13278:22;13381:70;13278:22;13328:33;13381:70;13278:22;:36;:22;;;478:371:11;;14422:14:0;478:371:11;;;;;;;13278:36:0;13228:23;13328:16;;478:371:11;;;;;;;;;;13328:16:0;:23;478:371:11;;-1:-1:-1;;;;;;478:371:11;-1:-1:-1;;;;;478:371:11;;;;;;;;;;13328:33:0;478:371:11;;13381:70:0;;;;;:::i;:::-;;;;658:137;:::o;13224:354::-;478:371:11;13495:72:0;478:371:11;13495:72:0;478:371:11;;;13495:72:0;;;;;:::i;12770:168::-;478:371:11;;-1:-1:-1;;;12822:87:0;;;478:371:11;;12822:87:0;1259:4;;;;12822:87;;;;:::i;:::-;;;;;;;;;;12814:113;12822:87;478:371:11;12822:87:0;;;12770:168;12814:113;;:::i;:::-;12770:168;;12822:87;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1237:82::-;478:371:11;1229:154:0;1268:51;478:371:11;;1292:22:0;;;1237:10;;478:371:11;;1292:22:0;;;;478:371:11;1292:22:0;;:::i;1268:51::-;1237:82;;;;478:371:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;478:371:11;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;17861:934:0:-;18700:28;17861:934;18096:39;18406:38;17861:934;;478:371:11;;;18096:39:0;;;;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;:::i;18096:39:0:-;478:371:11;18086:50:0;;478:371:11;;18270:62:0;;;18096:39;18270:62;;;;478:371:11;;;;;;;;;;;;18270:62:0;478:371:11;18260:73:0;;18406:38;;:::i;:::-;478:371:11;;;-1:-1:-1;;;;;478:371:11;;;18096:39:0;18528:21;;478:371:11;;;18528:21:0;478:371:11;18528:21:0;;478:371:11;;;;18528:21:0;478:371:11;18700:28:0;18696:70;;478:371:11;17861:934:0;:::o;18696:70::-;18751:4;18744:11;:::o;19046:719::-;478:371:11;;19287:2:0;478:371:11;;19273:16:0;19269:64;;19455:143;;;;;;;;;;;;;;;19612:7;19617:2;19612:7;;19608:46;;19046:719;19455:143;478:371:11;;;;;;;;;19455:143:0;478:371:11;;;;;;;;;;;;;;;;19691:31:0;;;19455:143;;478:371:11;;19691:31:0;;;;;;478:371:11;19691:31:0;19046:719;:::o;19608:46::-;478:371:11;;19617:2:0;478:371:11;;;;;;;19635:8:0;;;19608:46;;19269:64;19305:17;;;;:::o;478:371:11:-;;;;;;;;;;;;:::i;:::-;;;;:::i;16821:463:0:-;478:371:11;;717:4:0;478:371:11;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;717:4:0;478:371:11;;;;;;;;;;;;;;16990:12:0;16986:30;;478:371:11;17097:17:0;17076:12;;478:371:11;;17058:37:0;;;;;17148:29;;717:4;17148:29;;:::i;:::-;478:371:11;17196:12:0;:35;;;;17097:17;17192:52;;717:4;478:371:11;17032:24:0;;17192:52;17233:11;;717:4;17233:11;:::o;17196:35::-;;;17058:37;;;;478:371:11;16821:463:0;:::o;16986:30::-;17004:12;478:371:11;17004:12:0;:::o;16821:463::-;478:371:11;;16965:5:0;478:371:11;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5:0;478:371:11;;;;;;;;;;;;;;16990:12:0;16986:30;;478:371:11;17097:17:0;17076:12;;478:371:11;;17058:37:0;;;;;17148:29;;;;:::i;:::-;478:371:11;16965:5:0;17196:12;;:35;;;;;17097:17;17192:52;;;16965:5;478:371:11;17032:24:0;;17196:35;1317:1;17212:19;;;17196:35;;;16821:463;478:371:11;;16965:5:0;478:371:11;;;;;3372:30:0;478:371:11;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5:0;478:371:11;;;;;;;;;;;;;;16990:12:0;16986:30;;478:371:11;17097:17:0;17076:12;;478:371:11;;17058:37:0;;;;;17148:29;;;;:::i;:::-;478:371:11;16965:5:0;17196:12;;:35;;;;;17097:17;17192:52;;;16965:5;478:371:11;17032:24:0;;17196:35;3372:30;17212:19;;;17196:35;;;16821:463;478:371:11;;16965:5:0;478:371:11;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5:0;478:371:11;;;;;;;;;;;;;;16990:12:0;16986:30;;478:371:11;17097:17:0;17076:12;;478:371:11;;17058:37:0;;;;;17148:29;;;;:::i;:::-;478:371:11;17196:12:0;16965:5;17196:12;;:35;;;;;17097:17;17192:52;;;;16965:5;478:371:11;17032:24:0;;17192:52;17233:11;;;16965:5;17233:11;:::o;17196:35::-;17212:19;;-1:-1:-1;17196:35:0;;;;17058:37;;;;;478:371:11;16821:463:0;:::o;16986:30::-;17004:12;;478:371:11;17004:12:0;:::o;478:371:11:-;;;;:::o;:::-;;;-1:-1:-1;;;478:371:11;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
              "addKey(bytes32,uint256,uint256)": "1d381240",
              "approve(uint256,bool)": "747442d3",
              "execute(address,uint256,bytes)": "b61d27f6",
              "getClaim(bytes32)": "c9100bcb",
              "getClaimIdsByTopic(uint256)": "80e9e9e1",
              "getKey(bytes32)": "12aaac70",
              "getKeyPurposes(bytes32)": "fb307b34",
              "getKeysByPurpose(uint256)": "9010f726",
              "getRecoveredAddress(bytes,bytes32)": "c3b129e3",
              "initialize(address)": "c4d66de8",
              "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
              "keyHasPurpose(bytes32,uint256)": "d202158d",
              "removeClaim(bytes32)": "4eee424a",
              "removeKey(bytes32,uint256)": "53d413c5",
              "supportsInterface(bytes4)": "01ffc9a7",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"See {IERC735-addClaim}.\",\"params\":{\"_data\":\"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\",\"_issuer\":\"The issuers identity contract address, or the address used to sign the above signature.\",\"_scheme\":\"The scheme with which this claim SHOULD be verified or how it should be processed.\",\"_signature\":\"Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\",\"_topic\":\"The type of claim\",\"_uri\":\"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\"},\"returns\":{\"claimRequestId\":\"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event.\"}},\"addKey(bytes32,uint256,uint256)\":{\"params\":{\"_key\":\"keccak256 representation of an ethereum address\",\"_purpose\":\"a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\",\"_type\":\"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\"},\"returns\":{\"success\":\"Returns TRUE if the addition was successful and FALSE if not\"}},\"approve(uint256,bool)\":{\"details\":\"See {IERC734-approve}.\"},\"execute(address,uint256,bytes)\":{\"details\":\"See {IERC734-execute}.\",\"returns\":{\"executionId\":\"to use in the approve function, to approve or reject this execution.\"}},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"data\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"issuer\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"scheme\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"signature\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"topic\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"uri\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\"}},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}.\",\"params\":{\"_topic\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"claimIds\":\"Returns an array of claim IDs by topic.\"}},\"getKey(bytes32)\":{\"details\":\"See {IERC734-getKey}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"key\":\"Returns the full key data, if present in the identity.\",\"keyType\":\"Returns the full key data, if present in the identity.\",\"purposes\":\"Returns the full key data, if present in the identity.\"}},\"getKeyPurposes(bytes32)\":{\"details\":\"See {IERC734-getKeyPurposes}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"_purposes\":\"Returns the purposes of the specified key\"}},\"getKeysByPurpose(uint256)\":{\"details\":\"See {IERC734-getKeysByPurpose}.\",\"params\":{\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\"},\"returns\":{\"keys\":\"Returns an array of public key bytes32 hold by this identity and having the specified purpose\"}},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"initialize(address)\":{\"params\":{\"initialManagementKey\":\"The ethereum address to be set as the management key of the ONCHAINID.\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"claimValid\":\"true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"See {IERC734-keyHasPurpose}.\"},\"removeClaim(bytes32)\":{\"details\":\"See {IERC735-removeClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"success\":\"Returns TRUE when the claim was removed. triggers ClaimRemoved event\"}},\"removeKey(bytes32,uint256)\":{\"details\":\"See {IERC734-removeKey}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"Returns the string of the current version.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"notice\":\"Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key.\"},\"addKey(bytes32,uint256,uint256)\":{\"notice\":\"implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"notice\":\"Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method.\"},\"getClaim(bytes32)\":{\"notice\":\"Implementation of the getClaim function from the ERC-735 standard.\"},\"getClaimIdsByTopic(uint256)\":{\"notice\":\"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic\"},\"getKey(bytes32)\":{\"notice\":\"Implementation of the getKey function from the ERC-734 standard\"},\"getKeyPurposes(bytes32)\":{\"notice\":\"gets the purposes of a key\"},\"getKeysByPurpose(uint256)\":{\"notice\":\"gets all the keys with a specific purpose from an identity\"},\"initialize(address)\":{\"notice\":\"When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\"},\"keyHasPurpose(bytes32,uint256)\":{\"notice\":\"Returns true if the key has MANAGEMENT purpose or the specified purpose.\"},\"removeClaim(bytes32)\":{\"notice\":\"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself.\"},\"removeKey(bytes32,uint256)\":{\"notice\":\"Remove the purpose from a key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/identity-factory/identities/SMARTIdentityImplementation.sol\":\"SMARTIdentityImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/Identity.sol\":{\"keccak256\":\"0x5bc52be65a62f9dc00b27ceb8722187cdd38eb261461057a90a93e0ed6e6ea96\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://409bc6ccbe2c62849c3643d90f6fd588ab136602119efb98ef916ee5249078d4\",\"dweb:/ipfs/QmR6fAgKkpbinKJTjrzC6hnUebYfXz6B8aQo6HAZM85FSp\"]},\"@onchainid/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3d1aa644ee16edee30a1e5b3a8c2388e99a6b4d46fadf7fea0c377529c3f03a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3714bbd6e289bdd2a61074bad5b6841bbab2f1bbcb4f461d41210cec8811ae\",\"dweb:/ipfs/QmNTvHAANFjFxzZs6uTniiNW5cJSADKh37g8gaCnujNope\"]},\"@onchainid/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]},\"@onchainid/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]},\"@onchainid/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264\",\"dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo\"]},\"@onchainid/contracts/storage/Storage.sol\":{\"keccak256\":\"0x8cc9c1d7c00214df76680b475b99c0f296c6e876d9a3a701e0e4074ea1160571\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://707ecf18de2c2d6da9f5827e2416934de65fae4109369ca8743b2e469661b094\",\"dweb:/ipfs/QmcRV2o4BRvDAHDaG7hjZtHB2WjxBPL1zkfZq7hwpbAYZG\"]},\"@onchainid/contracts/storage/Structs.sol\":{\"keccak256\":\"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c\",\"dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV\"]},\"@onchainid/contracts/version/Version.sol\":{\"keccak256\":\"0x9edca39fb2e35af59f82ce30de0f2b7727e0a2df9cf9b703288db868ea4e8405\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf16acdc9fbada3d392c243f3ded28d654084f2c367c7103b1769f0ee0a7b1a4\",\"dweb:/ipfs/QmeVUtHa9LGdiaxKav6swxHuWTYLhz3FXbQfY4wUMUKd97\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/system/identity-factory/identities/SMARTIdentityImplementation.sol\":{\"keccak256\":\"0x0f81a905e6be93d8b523adfb1fc73737068211fbefe5c75a32c8c833d3e1e701\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e98ef524f191df0c4dfd3e2bc88880029cfe8e7581d7990ec9f326383b175c19\",\"dweb:/ipfs/QmZ7kAphzi3C4gxR7GZw3z2ckDM5iZd6HfEt8zpiNKGDxi\"]}},\"version\":1}"
        }
      },
      "contracts/system/identity-factory/identities/SMARTTokenIdentityImplementation.sol": {
        "SMARTTokenIdentityImplementation": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "Approved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "claimId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "name": "ClaimRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "Executed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "ExecutionRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "purpose",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                }
              ],
              "name": "KeyRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "_uri",
                  "type": "string"
                }
              ],
              "name": "addClaim",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "claimRequestId",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_type",
                  "type": "uint256"
                }
              ],
              "name": "addKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "_approve",
                  "type": "bool"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "executionId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "getClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "topic",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "scheme",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_topic",
                  "type": "uint256"
                }
              ],
              "name": "getClaimIdsByTopic",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "claimIds",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "purposes",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyType",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "getKeyPurposes",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_purposes",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "getKeysByPurpose",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "keys",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataHash",
                  "type": "bytes32"
                }
              ],
              "name": "getRecoveredAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialManagementKey",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IIdentity",
                  "name": "_identity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "claimTopic",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "isClaimValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "claimValid",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "keyHasPurpose",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "result",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_claimId",
                  "type": "bytes32"
                }
              ],
              "name": "removeClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_purpose",
                  "type": "uint256"
                }
              ],
              "name": "removeKey",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346025576006805461ffff1916600117905560405161254b908161002b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461012757806312aaac70146101225780631d3812401461011d5780634eee424a1461011857806353d413c51461011357806354fd4d501461010e578063747442d31461010957806380e9e9e1146101045780639010f726146100ff578063b1a34e0d146100fa578063b61d27f6146100f5578063c0969a6e146100f0578063c3b129e3146100eb578063c4d66de8146100e6578063c9100bcb146100e1578063d202158d146100dc5763fb307b34146100d757600080fd5b6111ef565b6111ce565b61115d565b610f6b565b610f1a565b610eab565b610cf8565b610c45565b610af1565b610a7c565b6109f8565b6109a7565b6106cd565b610423565b61022d565b6101ce565b346101955760203660031901126101955760043563ffffffff60e01b81168091036101955763604b4d3760e11b8114908115610184575b8115610173575b506040519015158152602090f35b6301ffc9a760e01b14905038610165565b6301ffc9a760e01b8114915061015e565b600080fd5b906020808351928381520192019060005b8181106101b85750505090565b82518452602093840193909201916001016101ab565b346101955760203660031901126101955761021e6004356000908152600160208190526040909120908101546002820154916102099061122f565b9160405193849360608552606085019061019a565b91602084015260408301520390f35b34610195576060366003190112610195576004356024356044359161025e600160ff60065460081c1615151461127a565b30331480156103f3575b610271906112e2565b806002610288826000526001602052604060002090565b015403610391576102ab6102a6826000526001602052604060002090565b61122f565b9060005b825181101561032057836102c3828561140a565b51146102d1576001016102af565b60405162461bcd60e51b815260206004820152602160248201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736044820152606560f81b6064820152608490fd5b50929190506103428161033d856000526001602052604060002090565b61143b565b61035a8361033d836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a46001815280602081015b0390f35b91908260026103aa826000526001602052604060002090565b01556103d56103b96020610bc4565b8281526103d0856000526001602052604060002090565b6113bc565b8160016103ec856000526001602052604060002090565b0155610342565b5061027161041c604051602081019033825260208152610414604082610ba2565b51902061227c565b9050610268565b346101955760203660031901126101955760043561044d600160ff60065460081c1615151461127a565b303314801561069d575b61046090611474565b610474816000526004602052604060002090565b54801561064457600091610492826000526005602052604060002090565b54925b816104c06104b6836104b1876000526005602052604060002090565b611423565b90549060031b1c90565b1461062a576104ce906114db565b83811061049557916105296106199361052361050e6104b661061e985b610508610502886000526005602052604060002090565b916114ef565b90611423565b916104b1856000526005602052604060002090565b9061135d565b610545610540826000526005602052604060002090565b611514565b600161055b836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6105a76002610599846000526004602052604060002090565b01546001600160a01b031690565b60036105bd846000526004602052604060002090565b019061060660046105d8866000526004602052604060002090565b0160056105ef876000526004602052604060002090565b019060405194859460018060a01b03169985611607565b0390a46000526004602052604060002090565b61169c565b60405160018152602090f35b916105296106199361052361050e6104b661061e986104eb565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506104606106c66040516020810190338252602081526106be604082610ba2565b519020612303565b9050610457565b34610195576040366003190112610195576004356024356106fa600160ff60065460081c1615151461127a565b303314801561093e575b61070d906112e2565b61072f826002610727826000526001602052604060002090565b0154146116d4565b6107466102a6836000526001602052604060002090565b9060005b81610755828561140a565b51146107cb57610764906114db565b9082518214610773579061074a565b60405162461bcd60e51b815260206004820152602a60248201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604482015269636820707572706f736560b01b6064820152608490fd5b6107e96107e16107db85516114ef565b8561140a565b51918461140a565b5261080782610802856000526001602052604060002090565b61172a565b61081e610540846000526001602052604060002090565b600081815260026020526040812054905b8461084b6104b6836104b1876000526002602052604060002090565b1461092c57610859906114db565b81811061082f576105236108856104b661089a945b610508610502886000526002602052604060002090565b916104b1856000526002602052604060002090565b6108b1610540826000526002602052604060002090565b6108d360016108ca856000526001602052604060002090565b015492516114ef565b1561090b575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b610927610922846000526001602052604060002090565b6117a3565b6108d9565b6105236108856104b661089a9461086e565b5061070d61095f604051602081019033825260208152610414604082610ba2565b9050610704565b919082519283825260005b848110610992575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610971565b346101955760003660031901126101955761038d60408051906109ca8183610ba2565b6005825264322e322e3160d81b602083015251918291602083526020830190610966565b8015150361019557565b34610195576040366003190112610195576020610a38602435600435610a1d826109ee565b610a33600160ff60065460081c1615151461127a565b6119ed565b6040519015158152f35b602060408183019282815284518094520192019060005b818110610a665750505090565b8251845260209384019390920191600101610a59565b34610195576020366003190112610195576004356000526005602052604060002060405190816020825491828152019160005260206000209060005b818110610adb5761038d85610acf81870382610ba2565b60405191829182610a42565b8254845260209093019260019283019201610ab8565b34610195576020366003190112610195576004356000526002602052604060002060405190816020825491828152019160005260206000209060005b818110610b445761038d85610acf81870382610ba2565b8254845260209093019260019283019201610b2d565b6001600160a01b0381160361019557565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b9d57604052565b610b6b565b90601f8019910116810190811067ffffffffffffffff821117610b9d57604052565b90610bd26040519283610ba2565b565b67ffffffffffffffff8111610b9d57601f01601f191660200190565b929192610bfc82610bd4565b91610c0a6040519384610ba2565b829481845281830111610195578281602093846000960137010152565b9080601f8301121561019557816020610c4293359101610bf0565b90565b346101955760c036600319011261019557602435604435600435610c6882610b5a565b60643567ffffffffffffffff811161019557610c88903690600401610c27565b60843567ffffffffffffffff811161019557610ca8903690600401610c27565b9060a4359367ffffffffffffffff851161019557366023860112156101955761038d95610ce2610ce8963690602481600401359101610bf0565b94611cd2565b6040519081529081906020820190565b606036600319011261019557600435610d1081610b5a565b6024359060443567ffffffffffffffff81116101955761038d927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610d5d610e13933690600401610c27565b90610d74600160ff60065460081c1615151461127a565b6000549481610db18793610d92856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610dc8856000526003602052604060002090565b0155610dea846002610de4866000526003602052604060002090565b01612022565b610df56000546114db565b6000556040516001600160a01b03919091169586948291908261211e565b0390a4604080513360208201908152610e409290919061041490829081015b03601f198101835282610ba2565b15610e605750610e4f816117d7565b506040519081529081906020820190565b30141580610e7d575b15610ce857610e77816117d7565b50610ce8565b50604080513360208201908152610ea692909190610e9e9082908101610e32565b51902061237e565b610e69565b3461019557608036600319011261019557600435610ec881610b5a565b6024359060443567ffffffffffffffff811161019557610eec903690600401610c27565b906064359167ffffffffffffffff831161019557602093610f14610a38943690600401610c27565b9261212f565b346101955760403660031901126101955760043567ffffffffffffffff811161019557610f59610f506020923690600401610c27565b602435906121e6565b6040516001600160a01b039091168152f35b3461019557602036600319011261019557600435610f8881610b5a565b6001600160a01b038116156110c757600654600191829160ff161580156110be575b610fb39061248e565b610fc5600160ff196006541617600655565b610fd961010061ff00196006541617600655565b604080516001600160a01b03909216602083019081529190610ffe9082908101610e32565b519020806002611018826000526001602052604060002090565b01556110446110276020610bc4565b6001815261103f836000526001602052604060002090565b6124da565b6110638261105c836000526001602052604060002090565b0160019055565b60016000526002602052611097817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e061143b565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610faa565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b94919361114f93610c429795611141938852602088015260018060a01b0316604087015260c0606087015260c0860190610966565b908482036080860152610966565b9160a0818403910152610966565b34610195576020366003190112610195576004803560009081526020829052604090208054600182015460028301549093919261038d926001600160a01b03909216916005820191908101906111c1906111bb908190600301612261565b92612261565b926040519687968761110c565b34610195576040366003190112610195576020610a386024356004356123f9565b3461019557602036600319011261019557600435600052600160205261038d61121b604060002061122f565b60405191829160208352602083019061019a565b906040519182815491828252602082019060005260206000209260005b818110611261575050610bd292500383610ba2565b845483526001948501948794506020909301920161124c565b1561128157565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b156112e957565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b916113779183549060031b91821b91600019901b19161790565b9055565b818110611386575050565b6000815560010161137b565b805460018255806001106113a4575050565b610bd29160005260016020600020918201910161137b565b906113c682611392565b9060005260206000209060005b600181106113e057505050565b6001906020835193019281850155016113d3565b634e487b7160e01b600052603260045260246000fd5b805182101561141e5760209160051b010190565b6113f4565b805482101561141e5760005260206000200190600090565b805490600160401b821015610b9d578161145d91600161137794018155611423565b819391549060031b91821b91600019901b19161790565b1561147b57565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b60001981146114ea5760010190565b611347565b6000198101919082116114ea57565b634e487b7160e01b600052603160045260246000fd5b8054801561154557600019019061154061152e8383611423565b81929154906000199060031b1b191690565b905555565b6114fe565b90600182811c9216801561157a575b602083101461156457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611559565b600092918154916115948361154a565b80835292600181169081156115ea57506001146115b057505050565b60009081526020812093945091925b8383106115d0575060209250010190565b6001816020929493945483858701015201910191906115bf565b915050602093945060ff929192191683830152151560051b010190565b92611627610c429593611635938652608060208701526080860190611584565b908482036040860152611584565b916060818403910152611584565b61164d815461154a565b9081611657575050565b601f8211600114611669576000905550565b61168b610bd292826000526001601f6020600020920160051c8201910161137b565b600081815260208120918190559055565b6005906000815560006001820155600060028201556116bd60038201611643565b6116c960048201611643565b0161164d815461154a565b156116db57565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b81519167ffffffffffffffff8311610b9d57600160401b8311610b9d576020908254848455808510611786575b500190600052602060002060005b8381106117725750505050565b600190602084519401938184015501611765565b61179d90846000528584600020918201910161137b565b38611757565b60026000918054838255806117be575b508260018201550155565b818452602084206117d19181019061137b565b386117b3565b6001610c4291610a338260ff60065460081c1615151461127a565b156117f957565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b1561185557565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b156118a157565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b156118ed57565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b6000929181549161194e8361154a565b9260018116908115611999575060011461196757505050565b909192935060005260206000206000905b8382106119855750500190565b600181602092548486015201910190611978565b60ff191683525050811515909102019150565b3d156119d7573d906119bd82610bd4565b916119cb6040519384610ba2565b82523d6000602084013e565b606090565b906020610c42928181520190611584565b906001906119fe60005484106117f2565b611a31611a2c611a286003611a1d876000526003602052604060002090565b015460081c60ff1690565b1590565b61184e565b611a55611a48846000526003602052604060002090565b546001600160a01b031690565b3090838060a01b031614600014611ca657604080513360208201908152611a8d92611a8892906104149082908101610e32565b6118e6565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c7d57611aeb6003611add836000526003602052604060002090565b01805460ff19166001179055565b600080611b05611a48846000526003602052604060002090565b611b436001611b1e866000526003602052604060002090565b01546002611b36876000526003602052604060002090565b016040519283809261193e565b03925af1611b4f6119ac565b5015611c0b57611b7e6003611b6e836000526003602052604060002090565b01805461ff001916610100179055565b611b95611a48826000526003602052604060002090565b6001611bab836000526003602052604060002090565b0154917f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8611c036002611be8846000526003602052604060002090565b6040516001600160a01b0390961695928392909101826119dc565b0390a4600190565b611c22611a48826000526003602052604060002090565b6001611c38836000526003602052604060002090565b0154917fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68611c756002611be8846000526003602052604060002090565b0390a4600090565b6003611c96611ca1926000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611ccd92611cc89290610e9e9082908101610e32565b61189a565b611a8d565b9294909394611ced600160ff60065460081c1615151461127a565b3033148015611f20575b611d0090611474565b6001600160a01b03831694308603611ea9575b604080516001600160a01b03861660208201908152918101879052611d3b8160608101610e32565b51902096879486611d56876000526004602052604060002090565b55826001611d6e886000526004602052604060002090565b0155611d8a846003610de4896000526004602052604060002090565b611da4826004610de4896000526004602052604060002090565b611dbe856005610de4896000526004602052604060002090565b87611de7611ddb60026105998a6000526004602052604060002090565b6001600160a01b031690565b14611e765793611e7091611e647f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611e2e8961033d8c6000526005602052604060002090565b6002611e448a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b604051948594856120f0565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611e7091604051948594856120f0565b60405163604b4d3760e11b815260208180611eca8b878b3060048601611f5d565b03818a5afa8015611f1b57611ee791600091611eec575b50611fa1565b611d13565b611f0e915060203d602011611f14575b611f068183610ba2565b810190611f48565b38611ee1565b503d611efc565b611f95565b50611d00611f416040516020810190338252602081526106be604082610ba2565b9050611cf7565b908160209103126101955751610c42816109ee565b92610c429492611f879260018060a01b031685526020850152608060408501526080840190610966565b916060818403910152610966565b6040513d6000823e3d90fd5b15611fa857565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b9190601f8111611fec57505050565b610bd2926000526020600020906020601f840160051c83019310612018575b601f0160051c019061137b565b909150819061200b565b919091825167ffffffffffffffff8111610b9d5761204a81612044845461154a565b84611fdd565b6020601f821160011461208757819061137793949560009261207c575b50508160011b916000199060031b1c19161790565b015190503880612067565b601f1982169061209c84600052602060002090565b9160005b8181106120d8575095836001959697106120bf575b505050811b019055565b015160001960f88460031b161c191690553880806120b5565b9192602060018192868b0151815501940192016120a0565b92612110610c429593611f87938652608060208701526080860190610966565b908482036040860152610966565b906020610c42928181520190610966565b6121d8936121686121b39493610e32604051938492602084019660018060a01b0316875260408401526060808401526080830190610966565b5190206040516121aa81610e32602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b519020906121e6565b604080516001600160a01b039092166020830190815291906106be9082908101610e32565b6121e157600090565b600190565b600090604181510361225b5760208101519160606040830151920151901a91601b8310612245575b6040805194855260ff9093166020858101919091529284015260608301526000808052909160809060015afa15611f1b5760005190565b9091601b019060ff82116114ea5790919061220e565b50905090565b90610bd26122759260405193848092611584565b0383610ba2565b6000526001602052604060002060026040519161229883610b81565b6122a18161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f5576122d48260019261140a565b511480156122f0575b6122e9576001016122bd565b5050600190565b6122dd565b505050600090565b50600090565b6000526001602052604060002060026040519161231f83610b81565b6123288161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123599161140a565b5160018114908115612373575b506122e957600101612344565b600391501438612366565b6000526001602052604060002060026040519161239a83610b81565b6123a38161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123d49161140a565b51600181149081156123ee575b506122e9576001016123bf565b6002915014386123e1565b600052600160205260406000209060026040519261241684610b81565b61241f8161122f565b8452600181015460208501520154806040840152156124875760005b8251805182101561247e57816124509161140a565b518260018214918215612474575b505061246c5760010161243b565b505050600190565b149050823861245e565b50505050600090565b5050600090565b1561249557565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b906124e482611392565b9060005260206000209060005b600181106124fe57505050565b600190602060ff84511693019281850155016124f156fea264697066735822122089799b66a8cf80b1eac9926cb59fadd7e2ed54c7d2ff0faf5e844083a2440d5464736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x25 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x254B SWAP1 DUP2 PUSH2 0x2B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4EEE424A EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x747442D3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x80E9E9E1 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xB1A34E0D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xC0969A6E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC3B129E3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0xDC JUMPI PUSH4 0xFB307B34 EQ PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x195 JUMPI PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x184 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x173 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x165 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x21E PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x209 SWAP1 PUSH2 0x122F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x25E PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x3F3 JUMPI JUMPDEST PUSH2 0x271 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH2 0x288 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x391 JUMPI PUSH2 0x2AB PUSH2 0x2A6 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x320 JUMPI DUP4 PUSH2 0x2C3 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x2D1 JUMPI PUSH1 0x1 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666C6963743A204B657920616C72656164792068617320707572706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 SWAP1 POP PUSH2 0x342 DUP2 PUSH2 0x33D DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST PUSH2 0x35A DUP4 PUSH2 0x33D DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH2 0x3AA DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x3D5 PUSH2 0x3B9 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x3D0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x3EC DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x342 JUMP JUMPDEST POP PUSH2 0x271 PUSH2 0x41C PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP PUSH2 0x268 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x44D PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x460 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x492 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 JUMPDEST DUP2 PUSH2 0x4C0 PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1423 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST EQ PUSH2 0x62A JUMPI PUSH2 0x4CE SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x495 JUMPI SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14EF JUMP JUMPDEST SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x545 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x55B DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 DUP3 PUSH32 0x3CF57863A89432C61C4A27073C6EE39E8A764BFF5A05AEBFBCDCDC80B2E6130A PUSH2 0x5A7 PUSH1 0x2 PUSH2 0x599 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x5BD DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH2 0x606 PUSH1 0x4 PUSH2 0x5D8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x5 PUSH2 0x5EF DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP6 PUSH2 0x1607 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A205468657265206973206E6F20636C61696D2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1A5D1A081D1A1A5CC81251 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH2 0x6C6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2303 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x6FA PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x93E JUMPI JUMPDEST PUSH2 0x70D SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH2 0x72F DUP3 PUSH1 0x2 PUSH2 0x727 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD EQ PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x2A6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 PUSH2 0x755 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x7CB JUMPI PUSH2 0x764 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 DUP3 MLOAD DUP3 EQ PUSH2 0x773 JUMPI SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B657920646F65736E27742068617665207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x636820707572706F7365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x7E9 PUSH2 0x7E1 PUSH2 0x7DB DUP6 MLOAD PUSH2 0x14EF JUMP JUMPDEST DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD SWAP2 DUP5 PUSH2 0x140A JUMP JUMPDEST MSTORE PUSH2 0x807 DUP3 PUSH2 0x802 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH2 0x81E PUSH2 0x540 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 PUSH2 0x84B PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST EQ PUSH2 0x92C JUMPI PUSH2 0x859 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8D3 PUSH1 0x1 PUSH2 0x8CA DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP3 MLOAD PUSH2 0x14EF JUMP JUMPDEST ISZERO PUSH2 0x90B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x927 PUSH2 0x922 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 PUSH2 0x86E JUMP JUMPDEST POP PUSH2 0x70D PUSH2 0x95F PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x704 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x992 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x971 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x38D PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x9CA DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x195 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xA1D DUP3 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA33 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA66 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA59 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xADB JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA42 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB44 JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x195 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xBA2 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xBFC DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0xC0A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x195 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x195 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC42 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xC68 DUP3 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xC88 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xCA8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x195 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x38D SWAP6 PUSH2 0xCE2 PUSH2 0xCE8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP5 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD10 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0x38D SWAP3 PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 SWAP3 PUSH2 0xD5D PUSH2 0xE13 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH2 0xD74 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP5 DUP2 PUSH2 0xDB1 DUP8 SWAP4 PUSH2 0xD92 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH2 0xDC8 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xDEA DUP5 PUSH1 0x2 PUSH2 0xDE4 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2022 JUMP JUMPDEST PUSH2 0xDF5 PUSH1 0x0 SLOAD PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP6 DUP7 SWAP5 DUP3 SWAP2 SWAP1 DUP3 PUSH2 0x211E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xE40 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xBA2 JUMP JUMPDEST ISZERO PUSH2 0xE60 JUMPI POP PUSH2 0xE4F DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST ADDRESS EQ ISZERO DUP1 PUSH2 0xE7D JUMPI JUMPDEST ISZERO PUSH2 0xCE8 JUMPI PUSH2 0xE77 DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH2 0xCE8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xEA6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x237E JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEC8 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xEEC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP4 PUSH2 0xF14 PUSH2 0xA38 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP3 PUSH2 0x212F JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xF59 PUSH2 0xF50 PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF88 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10BE JUMPI JUMPDEST PUSH2 0xFB3 SWAP1 PUSH2 0x248E JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xFD9 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0xFFE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x2 PUSH2 0x1018 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1044 PUSH2 0x1027 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH2 0x103F DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x1063 DUP3 PUSH2 0x105C DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1097 DUP2 PUSH32 0xE90B7BCEB6E7DF5418FB78D8EE546E97C83A08BBCCC01A0644D599CCD2A7C2E0 PUSH2 0x143B JUMP JUMPDEST PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 PUSH2 0x114F SWAP4 PUSH2 0xC42 SWAP8 SWAP6 PUSH2 0x1141 SWAP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x38D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x5 DUP3 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11C1 SWAP1 PUSH2 0x11BB SWAP1 DUP2 SWAP1 PUSH1 0x3 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x110C JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x23F9 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x38D PUSH2 0x121B PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1261 JUMPI POP POP PUSH2 0xBD2 SWAP3 POP SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x124C JUMP JUMPDEST ISZERO PUSH2 0x1281 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E746572616374696E67207769746820746865206C69627261727920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B1BA1034B9903337B93134B23232B717 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x65206D616E6167656D656E74206B6579 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x1377 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1386 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x137B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x13A4 JUMPI POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 PUSH2 0x13C6 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x13E0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x13D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xB9D JUMPI DUP2 PUSH2 0x145D SWAP2 PUSH1 0x1 PUSH2 0x1377 SWAP5 ADD DUP2 SSTORE PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x147B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6520636C61696D207369676E6572206B6579 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x14EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1545 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1540 PUSH2 0x152E DUP4 DUP4 PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x14FE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x157A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1564 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x1594 DUP4 PUSH2 0x154A JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x15B0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x15D0 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1627 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1635 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1657 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1669 JUMPI PUSH1 0x0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x168B PUSH2 0xBD2 SWAP3 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP2 DUP2 SWAP1 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH1 0x0 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x16BD PUSH1 0x3 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x16C9 PUSH1 0x4 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST ADD PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST ISZERO PUSH2 0x16DB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B65792069736E277420726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x1786 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1772 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x179D SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP1 SLOAD DUP4 DUP3 SSTORE DUP1 PUSH2 0x17BE JUMPI JUMPDEST POP DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH2 0x17D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xC42 SWAP2 PUSH2 0xA33 DUP3 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ISZERO PUSH2 0x17F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F76652061206E6F6E2D6578697374696E67206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32B1BABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1855 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F742068617665206D616E6167656D656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B6579 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x194E DUP4 PUSH2 0x154A JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1999 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1967 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1985 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x19BD DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0x19CB PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19FE PUSH1 0x0 SLOAD DUP5 LT PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1A31 PUSH2 0x1A2C PUSH2 0x1A28 PUSH1 0x3 PUSH2 0x1A1D DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1A55 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADDRESS SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x0 EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1A8D SWAP3 PUSH2 0x1A88 SWAP3 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO ISZERO DUP2 MSTORE DUP4 SWAP1 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP1 PUSH1 0x20 SWAP1 LOG2 ISZERO ISZERO SUB PUSH2 0x1C7D JUMPI PUSH2 0x1AEB PUSH1 0x3 PUSH2 0x1ADD DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B05 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x1 PUSH2 0x1B1E DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x2 PUSH2 0x1B36 DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x193E JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH2 0x1B4F PUSH2 0x19AC JUMP JUMPDEST POP ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1B7E PUSH1 0x3 PUSH2 0x1B6E DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B95 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BAB DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 PUSH2 0x1C03 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 ADD DUP3 PUSH2 0x19DC JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1C22 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C38 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 PUSH2 0x1C75 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1C96 PUSH2 0x1CA1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1CCD SWAP3 PUSH2 0x1CC8 SWAP3 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST SWAP3 SWAP5 SWAP1 SWAP4 SWAP5 PUSH2 0x1CED PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x1F20 JUMPI JUMPDEST PUSH2 0x1D00 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 ADDRESS DUP7 SUB PUSH2 0x1EA9 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x1D3B DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP7 PUSH2 0x1D56 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP3 PUSH1 0x1 PUSH2 0x1D6E DUP9 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1D8A DUP5 PUSH1 0x3 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DA4 DUP3 PUSH1 0x4 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DBE DUP6 PUSH1 0x5 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1DE7 PUSH2 0x1DDB PUSH1 0x2 PUSH2 0x599 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1E76 JUMPI SWAP4 PUSH2 0x1E70 SWAP2 PUSH2 0x1E64 PUSH32 0x46149B18AA084502C3F12BC75E19EDA8BDA8D102B82CCE8474677A6D0D5F43C5 SWAP7 PUSH2 0x1E2E DUP10 PUSH2 0x33D DUP13 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1E44 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST POP PUSH32 0x3BAB293FC00DB832D7619A9299914251B8747C036867EC056CBD506F60135B13 SWAP4 PUSH2 0x1E70 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x1ECA DUP12 DUP8 DUP12 ADDRESS PUSH1 0x4 DUP7 ADD PUSH2 0x1F5D JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1EE7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1EEC JUMPI JUMPDEST POP PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1F0E SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F14 JUMPI JUMPDEST PUSH2 0x1F06 DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F48 JUMP JUMPDEST CODESIZE PUSH2 0x1EE1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1F95 JUMP JUMPDEST POP PUSH2 0x1D00 PUSH2 0x1F41 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x195 JUMPI MLOAD PUSH2 0xC42 DUP2 PUSH2 0x9EE JUMP JUMPDEST SWAP3 PUSH2 0xC42 SWAP5 SWAP3 PUSH2 0x1F87 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420636C61696D PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1FEC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2018 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH2 0x204A DUP2 PUSH2 0x2044 DUP5 SLOAD PUSH2 0x154A JUMP JUMPDEST DUP5 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2087 JUMPI DUP2 SWAP1 PUSH2 0x1377 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x207C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH2 0x209C DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20D8 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x20A0 JUMP JUMPDEST SWAP3 PUSH2 0x2110 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1F87 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x21D8 SWAP4 PUSH2 0x2168 PUSH2 0x21B3 SWAP5 SWAP4 PUSH2 0xE32 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x21AA DUP2 PUSH2 0xE32 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH1 0x3C SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP3 MSTORE PUSH1 0x1C DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0x6BE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x21E1 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x41 DUP2 MLOAD SUB PUSH2 0x225B JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 BYTE SWAP2 PUSH1 0x1B DUP4 LT PUSH2 0x2245 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1B ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x14EA JUMPI SWAP1 SWAP2 SWAP1 PUSH2 0x220E JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH2 0x2275 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1584 JUMP JUMPDEST SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2298 DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x22A1 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x22D4 DUP3 PUSH1 0x1 SWAP3 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ DUP1 ISZERO PUSH2 0x22F0 JUMPI JUMPDEST PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x22BD JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x22DD JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x231F DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x2359 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2373 JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP EQ CODESIZE PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x239A DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x23A3 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x23D4 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x23EE JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x23E1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2416 DUP5 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x241F DUP2 PUSH2 0x122F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x247E JUMPI DUP2 PUSH2 0x2450 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD DUP3 PUSH1 0x1 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x2474 JUMPI JUMPDEST POP POP PUSH2 0x246C JUMPI PUSH1 0x1 ADD PUSH2 0x243B JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EQ SWAP1 POP DUP3 CODESIZE PUSH2 0x245E JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x24E4 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x24FE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x24F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH26 0x9B66A8CF80B1EAC9926CB59FADD7E2ED54C7D2FF0FAF5E844083 LOG2 PREVRANDAO 0xD SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "551:376:12:-:0;;;;;;787:5:5;551:376:12;;-1:-1:-1;;551:376:12;665:4;551:376;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_available_length_bytes": {
                  "entryPoint": 3056,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 8008,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes": {
                  "entryPoint": 3111,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_bytes32_dyn": {
                  "entryPoint": 2626,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 410,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_12828": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 8478,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage": {
                  "entryPoint": 6462,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_storage_to_bytes": {
                  "entryPoint": 5508,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_contract_IIdentity_uint256_bytes_bytes": {
                  "entryPoint": 8029,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_packed_stringliteral_178a_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 2406,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_5aba": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_c5c6": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_ced1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes_storage": {
                  "entryPoint": 6620,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bytes_bytes_string": {
                  "entryPoint": 8432,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_bytes_storage_bytes__string": {
                  "entryPoint": 5639,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_address_bytes_bytes_string": {
                  "entryPoint": 4364,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 3012,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 3028,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_uint256_dyn_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_pop_array_bytes32_dyn_storage_ptr": {
                  "entryPoint": 5396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
                  "entryPoint": 5179,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_sub_uint256": {
                  "entryPoint": 5359,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_bytes_storage": {
                  "entryPoint": 8157,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_uint256": {
                  "entryPoint": 4987,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_from_storage_to_memory_array_uint256_dyn": {
                  "entryPoint": 4655,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_bytes": {
                  "entryPoint": 8801,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn": {
                  "entryPoint": 5930,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint256_to_array_uint256_dyn": {
                  "entryPoint": 5052,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_to_storage_from_array_uint8_to_array_uint256_dyn": {
                  "entryPoint": 9434,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_bytes_to_bytes": {
                  "entryPoint": 8226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "external_fun_addClaim": {
                  "entryPoint": 3141,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_addKey": {
                  "entryPoint": 557,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 2552,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_execute": {
                  "entryPoint": 3320,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getClaim": {
                  "entryPoint": 4445,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getClaimIdsByTopic": {
                  "entryPoint": 2684,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKey": {
                  "entryPoint": 462,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKeyPurposes": {
                  "entryPoint": 4591,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKeysByPurpose": {
                  "entryPoint": 2801,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getRecoveredAddress": {
                  "entryPoint": 3866,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_initialize": {
                  "entryPoint": 3947,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isClaimValid": {
                  "entryPoint": 3755,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_keyHasPurpose": {
                  "entryPoint": 4558,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeClaim": {
                  "entryPoint": 1059,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeKey": {
                  "entryPoint": 1741,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_supportsInterface": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_version": {
                  "entryPoint": 2471,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 5450,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 6572,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2978,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_13153": {
                  "entryPoint": 2945,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_approve_inner": {
                  "entryPoint": 6637,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_getRecoveredAddress": {
                  "entryPoint": 8678,
                  "id": 1210,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_isClaimValid": {
                  "entryPoint": 8495,
                  "id": 1157,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_isConstructor": {
                  "entryPoint": null,
                  "id": 1300,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose": {
                  "entryPoint": 9209,
                  "id": 1093,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12819": {
                  "entryPoint": 8828,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12830": {
                  "entryPoint": 8963,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_keyHasPurpose_12879": {
                  "entryPoint": 9086,
                  "id": 1093,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 5339,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12820": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12827": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12831": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12832": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_bytes32_struct_Key_storage_of_bytes32_12892": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 5130,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_delegatedOnly": {
                  "entryPoint": 6103,
                  "id": 24,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "modifier_delegatedOnly_12872": {
                  "entryPoint": 7378,
                  "id": 24,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 4935,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x31": {
                  "entryPoint": 5374,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 5108,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2923,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 6298,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_3c5b": {
                  "entryPoint": 4730,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_6f6b": {
                  "entryPoint": 4834,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_7b35": {
                  "entryPoint": 5236,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_85cd": {
                  "entryPoint": 6130,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ac6b": {
                  "entryPoint": 6374,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_cc19": {
                  "entryPoint": 6222,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e9e2": {
                  "entryPoint": 8097,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ecf7": {
                  "entryPoint": 5844,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_f97b": {
                  "entryPoint": 9358,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "resize_array_array_uint256_dyn_storage": {
                  "entryPoint": 5010,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 8085,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "storage_array_index_access_uint256_dyn_ptr": {
                  "entryPoint": 5155,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_set_to_zero_bytes": {
                  "entryPoint": 5699,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_struct_Claim": {
                  "entryPoint": 5788,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_struct_Key": {
                  "entryPoint": 6051,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "transit_byte_array_long_to_short_bytes_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_dynamic32_12959": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_12884": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_13084": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool_13086": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bytes32_to_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_t_bool_to_t_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 4957,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 2906,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 2542,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_uint8": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461012757806312aaac70146101225780631d3812401461011d5780634eee424a1461011857806353d413c51461011357806354fd4d501461010e578063747442d31461010957806380e9e9e1146101045780639010f726146100ff578063b1a34e0d146100fa578063b61d27f6146100f5578063c0969a6e146100f0578063c3b129e3146100eb578063c4d66de8146100e6578063c9100bcb146100e1578063d202158d146100dc5763fb307b34146100d757600080fd5b6111ef565b6111ce565b61115d565b610f6b565b610f1a565b610eab565b610cf8565b610c45565b610af1565b610a7c565b6109f8565b6109a7565b6106cd565b610423565b61022d565b6101ce565b346101955760203660031901126101955760043563ffffffff60e01b81168091036101955763604b4d3760e11b8114908115610184575b8115610173575b506040519015158152602090f35b6301ffc9a760e01b14905038610165565b6301ffc9a760e01b8114915061015e565b600080fd5b906020808351928381520192019060005b8181106101b85750505090565b82518452602093840193909201916001016101ab565b346101955760203660031901126101955761021e6004356000908152600160208190526040909120908101546002820154916102099061122f565b9160405193849360608552606085019061019a565b91602084015260408301520390f35b34610195576060366003190112610195576004356024356044359161025e600160ff60065460081c1615151461127a565b30331480156103f3575b610271906112e2565b806002610288826000526001602052604060002090565b015403610391576102ab6102a6826000526001602052604060002090565b61122f565b9060005b825181101561032057836102c3828561140a565b51146102d1576001016102af565b60405162461bcd60e51b815260206004820152602160248201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736044820152606560f81b6064820152608490fd5b50929190506103428161033d856000526001602052604060002090565b61143b565b61035a8361033d836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a46001815280602081015b0390f35b91908260026103aa826000526001602052604060002090565b01556103d56103b96020610bc4565b8281526103d0856000526001602052604060002090565b6113bc565b8160016103ec856000526001602052604060002090565b0155610342565b5061027161041c604051602081019033825260208152610414604082610ba2565b51902061227c565b9050610268565b346101955760203660031901126101955760043561044d600160ff60065460081c1615151461127a565b303314801561069d575b61046090611474565b610474816000526004602052604060002090565b54801561064457600091610492826000526005602052604060002090565b54925b816104c06104b6836104b1876000526005602052604060002090565b611423565b90549060031b1c90565b1461062a576104ce906114db565b83811061049557916105296106199361052361050e6104b661061e985b610508610502886000526005602052604060002090565b916114ef565b90611423565b916104b1856000526005602052604060002090565b9061135d565b610545610540826000526005602052604060002090565b611514565b600161055b836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6105a76002610599846000526004602052604060002090565b01546001600160a01b031690565b60036105bd846000526004602052604060002090565b019061060660046105d8866000526004602052604060002090565b0160056105ef876000526004602052604060002090565b019060405194859460018060a01b03169985611607565b0390a46000526004602052604060002090565b61169c565b60405160018152602090f35b916105296106199361052361050e6104b661061e986104eb565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506104606106c66040516020810190338252602081526106be604082610ba2565b519020612303565b9050610457565b34610195576040366003190112610195576004356024356106fa600160ff60065460081c1615151461127a565b303314801561093e575b61070d906112e2565b61072f826002610727826000526001602052604060002090565b0154146116d4565b6107466102a6836000526001602052604060002090565b9060005b81610755828561140a565b51146107cb57610764906114db565b9082518214610773579061074a565b60405162461bcd60e51b815260206004820152602a60248201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604482015269636820707572706f736560b01b6064820152608490fd5b6107e96107e16107db85516114ef565b8561140a565b51918461140a565b5261080782610802856000526001602052604060002090565b61172a565b61081e610540846000526001602052604060002090565b600081815260026020526040812054905b8461084b6104b6836104b1876000526002602052604060002090565b1461092c57610859906114db565b81811061082f576105236108856104b661089a945b610508610502886000526002602052604060002090565b916104b1856000526002602052604060002090565b6108b1610540826000526002602052604060002090565b6108d360016108ca856000526001602052604060002090565b015492516114ef565b1561090b575b604051927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b610927610922846000526001602052604060002090565b6117a3565b6108d9565b6105236108856104b661089a9461086e565b5061070d61095f604051602081019033825260208152610414604082610ba2565b9050610704565b919082519283825260005b848110610992575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610971565b346101955760003660031901126101955761038d60408051906109ca8183610ba2565b6005825264322e322e3160d81b602083015251918291602083526020830190610966565b8015150361019557565b34610195576040366003190112610195576020610a38602435600435610a1d826109ee565b610a33600160ff60065460081c1615151461127a565b6119ed565b6040519015158152f35b602060408183019282815284518094520192019060005b818110610a665750505090565b8251845260209384019390920191600101610a59565b34610195576020366003190112610195576004356000526005602052604060002060405190816020825491828152019160005260206000209060005b818110610adb5761038d85610acf81870382610ba2565b60405191829182610a42565b8254845260209093019260019283019201610ab8565b34610195576020366003190112610195576004356000526002602052604060002060405190816020825491828152019160005260206000209060005b818110610b445761038d85610acf81870382610ba2565b8254845260209093019260019283019201610b2d565b6001600160a01b0381160361019557565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610b9d57604052565b610b6b565b90601f8019910116810190811067ffffffffffffffff821117610b9d57604052565b90610bd26040519283610ba2565b565b67ffffffffffffffff8111610b9d57601f01601f191660200190565b929192610bfc82610bd4565b91610c0a6040519384610ba2565b829481845281830111610195578281602093846000960137010152565b9080601f8301121561019557816020610c4293359101610bf0565b90565b346101955760c036600319011261019557602435604435600435610c6882610b5a565b60643567ffffffffffffffff811161019557610c88903690600401610c27565b60843567ffffffffffffffff811161019557610ca8903690600401610c27565b9060a4359367ffffffffffffffff851161019557366023860112156101955761038d95610ce2610ce8963690602481600401359101610bf0565b94611cd2565b6040519081529081906020820190565b606036600319011261019557600435610d1081610b5a565b6024359060443567ffffffffffffffff81116101955761038d927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610d5d610e13933690600401610c27565b90610d74600160ff60065460081c1615151461127a565b6000549481610db18793610d92856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610dc8856000526003602052604060002090565b0155610dea846002610de4866000526003602052604060002090565b01612022565b610df56000546114db565b6000556040516001600160a01b03919091169586948291908261211e565b0390a4604080513360208201908152610e409290919061041490829081015b03601f198101835282610ba2565b15610e605750610e4f816117d7565b506040519081529081906020820190565b30141580610e7d575b15610ce857610e77816117d7565b50610ce8565b50604080513360208201908152610ea692909190610e9e9082908101610e32565b51902061237e565b610e69565b3461019557608036600319011261019557600435610ec881610b5a565b6024359060443567ffffffffffffffff811161019557610eec903690600401610c27565b906064359167ffffffffffffffff831161019557602093610f14610a38943690600401610c27565b9261212f565b346101955760403660031901126101955760043567ffffffffffffffff811161019557610f59610f506020923690600401610c27565b602435906121e6565b6040516001600160a01b039091168152f35b3461019557602036600319011261019557600435610f8881610b5a565b6001600160a01b038116156110c757600654600191829160ff161580156110be575b610fb39061248e565b610fc5600160ff196006541617600655565b610fd961010061ff00196006541617600655565b604080516001600160a01b03909216602083019081529190610ffe9082908101610e32565b519020806002611018826000526001602052604060002090565b01556110446110276020610bc4565b6001815261103f836000526001602052604060002090565b6124da565b6110638261105c836000526001602052604060002090565b0160019055565b60016000526002602052611097817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e061143b565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610faa565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b94919361114f93610c429795611141938852602088015260018060a01b0316604087015260c0606087015260c0860190610966565b908482036080860152610966565b9160a0818403910152610966565b34610195576020366003190112610195576004803560009081526020829052604090208054600182015460028301549093919261038d926001600160a01b03909216916005820191908101906111c1906111bb908190600301612261565b92612261565b926040519687968761110c565b34610195576040366003190112610195576020610a386024356004356123f9565b3461019557602036600319011261019557600435600052600160205261038d61121b604060002061122f565b60405191829160208352602083019061019a565b906040519182815491828252602082019060005260206000209260005b818110611261575050610bd292500383610ba2565b845483526001948501948794506020909301920161124c565b1561128157565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b156112e957565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b916113779183549060031b91821b91600019901b19161790565b9055565b818110611386575050565b6000815560010161137b565b805460018255806001106113a4575050565b610bd29160005260016020600020918201910161137b565b906113c682611392565b9060005260206000209060005b600181106113e057505050565b6001906020835193019281850155016113d3565b634e487b7160e01b600052603260045260246000fd5b805182101561141e5760209160051b010190565b6113f4565b805482101561141e5760005260206000200190600090565b805490600160401b821015610b9d578161145d91600161137794018155611423565b819391549060031b91821b91600019901b19161790565b1561147b57565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b60001981146114ea5760010190565b611347565b6000198101919082116114ea57565b634e487b7160e01b600052603160045260246000fd5b8054801561154557600019019061154061152e8383611423565b81929154906000199060031b1b191690565b905555565b6114fe565b90600182811c9216801561157a575b602083101461156457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611559565b600092918154916115948361154a565b80835292600181169081156115ea57506001146115b057505050565b60009081526020812093945091925b8383106115d0575060209250010190565b6001816020929493945483858701015201910191906115bf565b915050602093945060ff929192191683830152151560051b010190565b92611627610c429593611635938652608060208701526080860190611584565b908482036040860152611584565b916060818403910152611584565b61164d815461154a565b9081611657575050565b601f8211600114611669576000905550565b61168b610bd292826000526001601f6020600020920160051c8201910161137b565b600081815260208120918190559055565b6005906000815560006001820155600060028201556116bd60038201611643565b6116c960048201611643565b0161164d815461154a565b156116db57565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b81519167ffffffffffffffff8311610b9d57600160401b8311610b9d576020908254848455808510611786575b500190600052602060002060005b8381106117725750505050565b600190602084519401938184015501611765565b61179d90846000528584600020918201910161137b565b38611757565b60026000918054838255806117be575b508260018201550155565b818452602084206117d19181019061137b565b386117b3565b6001610c4291610a338260ff60065460081c1615151461127a565b156117f957565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b1561185557565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b156118a157565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b156118ed57565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b6000929181549161194e8361154a565b9260018116908115611999575060011461196757505050565b909192935060005260206000206000905b8382106119855750500190565b600181602092548486015201910190611978565b60ff191683525050811515909102019150565b3d156119d7573d906119bd82610bd4565b916119cb6040519384610ba2565b82523d6000602084013e565b606090565b906020610c42928181520190611584565b906001906119fe60005484106117f2565b611a31611a2c611a286003611a1d876000526003602052604060002090565b015460081c60ff1690565b1590565b61184e565b611a55611a48846000526003602052604060002090565b546001600160a01b031690565b3090838060a01b031614600014611ca657604080513360208201908152611a8d92611a8892906104149082908101610e32565b6118e6565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611c7d57611aeb6003611add836000526003602052604060002090565b01805460ff19166001179055565b600080611b05611a48846000526003602052604060002090565b611b436001611b1e866000526003602052604060002090565b01546002611b36876000526003602052604060002090565b016040519283809261193e565b03925af1611b4f6119ac565b5015611c0b57611b7e6003611b6e836000526003602052604060002090565b01805461ff001916610100179055565b611b95611a48826000526003602052604060002090565b6001611bab836000526003602052604060002090565b0154917f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8611c036002611be8846000526003602052604060002090565b6040516001600160a01b0390961695928392909101826119dc565b0390a4600190565b611c22611a48826000526003602052604060002090565b6001611c38836000526003602052604060002090565b0154917fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68611c756002611be8846000526003602052604060002090565b0390a4600090565b6003611c96611ca1926000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611ccd92611cc89290610e9e9082908101610e32565b61189a565b611a8d565b9294909394611ced600160ff60065460081c1615151461127a565b3033148015611f20575b611d0090611474565b6001600160a01b03831694308603611ea9575b604080516001600160a01b03861660208201908152918101879052611d3b8160608101610e32565b51902096879486611d56876000526004602052604060002090565b55826001611d6e886000526004602052604060002090565b0155611d8a846003610de4896000526004602052604060002090565b611da4826004610de4896000526004602052604060002090565b611dbe856005610de4896000526004602052604060002090565b87611de7611ddb60026105998a6000526004602052604060002090565b6001600160a01b031690565b14611e765793611e7091611e647f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c596611e2e8961033d8c6000526005602052604060002090565b6002611e448a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b604051948594856120f0565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b1393611e7091604051948594856120f0565b60405163604b4d3760e11b815260208180611eca8b878b3060048601611f5d565b03818a5afa8015611f1b57611ee791600091611eec575b50611fa1565b611d13565b611f0e915060203d602011611f14575b611f068183610ba2565b810190611f48565b38611ee1565b503d611efc565b611f95565b50611d00611f416040516020810190338252602081526106be604082610ba2565b9050611cf7565b908160209103126101955751610c42816109ee565b92610c429492611f879260018060a01b031685526020850152608060408501526080840190610966565b916060818403910152610966565b6040513d6000823e3d90fd5b15611fa857565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b9190601f8111611fec57505050565b610bd2926000526020600020906020601f840160051c83019310612018575b601f0160051c019061137b565b909150819061200b565b919091825167ffffffffffffffff8111610b9d5761204a81612044845461154a565b84611fdd565b6020601f821160011461208757819061137793949560009261207c575b50508160011b916000199060031b1c19161790565b015190503880612067565b601f1982169061209c84600052602060002090565b9160005b8181106120d8575095836001959697106120bf575b505050811b019055565b015160001960f88460031b161c191690553880806120b5565b9192602060018192868b0151815501940192016120a0565b92612110610c429593611f87938652608060208701526080860190610966565b908482036040860152610966565b906020610c42928181520190610966565b6121d8936121686121b39493610e32604051938492602084019660018060a01b0316875260408401526060808401526080830190610966565b5190206040516121aa81610e32602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b519020906121e6565b604080516001600160a01b039092166020830190815291906106be9082908101610e32565b6121e157600090565b600190565b600090604181510361225b5760208101519160606040830151920151901a91601b8310612245575b6040805194855260ff9093166020858101919091529284015260608301526000808052909160809060015afa15611f1b5760005190565b9091601b019060ff82116114ea5790919061220e565b50905090565b90610bd26122759260405193848092611584565b0383610ba2565b6000526001602052604060002060026040519161229883610b81565b6122a18161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f5576122d48260019261140a565b511480156122f0575b6122e9576001016122bd565b5050600190565b6122dd565b505050600090565b50600090565b6000526001602052604060002060026040519161231f83610b81565b6123288161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123599161140a565b5160018114908115612373575b506122e957600101612344565b600391501438612366565b6000526001602052604060002060026040519161239a83610b81565b6123a38161122f565b8352600181015460208401520154806040830152156122fd5760005b815180518210156122f557816123d49161140a565b51600181149081156123ee575b506122e9576001016123bf565b6002915014386123e1565b600052600160205260406000209060026040519261241684610b81565b61241f8161122f565b8452600181015460208501520154806040840152156124875760005b8251805182101561247e57816124509161140a565b518260018214918215612474575b505061246c5760010161243b565b505050600190565b149050823861245e565b50505050600090565b5050600090565b1561249557565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b906124e482611392565b9060005260206000209060005b600181106124fe57505050565b600190602060ff84511693019281850155016124f156fea264697066735822122089799b66a8cf80b1eac9926cb59fadd7e2ed54c7d2ff0faf5e844083a2440d5464736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4EEE424A EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x53D413C5 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x747442D3 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x80E9E9E1 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xB1A34E0D EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xC0969A6E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC3B129E3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0xDC JUMPI PUSH4 0xFB307B34 EQ PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xC45 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x195 JUMPI PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x184 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x173 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x165 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x15E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1AB JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x21E PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x209 SWAP1 PUSH2 0x122F JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x25E PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x3F3 JUMPI JUMPDEST PUSH2 0x271 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH2 0x288 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SUB PUSH2 0x391 JUMPI PUSH2 0x2AB PUSH2 0x2A6 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x320 JUMPI DUP4 PUSH2 0x2C3 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x2D1 JUMPI PUSH1 0x1 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666C6963743A204B657920616C72656164792068617320707572706F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 SWAP1 POP PUSH2 0x342 DUP2 PUSH2 0x33D DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST PUSH2 0x35A DUP4 PUSH2 0x33D DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH2 0x3AA DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x3D5 PUSH2 0x3B9 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x3D0 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x3EC DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x342 JUMP JUMPDEST POP PUSH2 0x271 PUSH2 0x41C PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP PUSH2 0x268 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x44D PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x69D JUMPI JUMPDEST PUSH2 0x460 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x492 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP3 JUMPDEST DUP2 PUSH2 0x4C0 PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1423 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 JUMP JUMPDEST EQ PUSH2 0x62A JUMPI PUSH2 0x4CE SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x495 JUMPI SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14EF JUMP JUMPDEST SWAP1 PUSH2 0x1423 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x545 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x55B DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 DUP3 PUSH32 0x3CF57863A89432C61C4A27073C6EE39E8A764BFF5A05AEBFBCDCDC80B2E6130A PUSH2 0x5A7 PUSH1 0x2 PUSH2 0x599 DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x5BD DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH2 0x606 PUSH1 0x4 PUSH2 0x5D8 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x5 PUSH2 0x5EF DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP10 DUP6 PUSH2 0x1607 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH2 0x529 PUSH2 0x619 SWAP4 PUSH2 0x523 PUSH2 0x50E PUSH2 0x4B6 PUSH2 0x61E SWAP9 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A205468657265206973206E6F20636C61696D2077 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1A5D1A081D1A1A5CC81251 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH2 0x6C6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x2303 JUMP JUMPDEST SWAP1 POP PUSH2 0x457 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x6FA PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x93E JUMPI JUMPDEST PUSH2 0x70D SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH2 0x72F DUP3 PUSH1 0x2 PUSH2 0x727 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD EQ PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x746 PUSH2 0x2A6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 PUSH2 0x755 DUP3 DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ PUSH2 0x7CB JUMPI PUSH2 0x764 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 DUP3 MLOAD DUP3 EQ PUSH2 0x773 JUMPI SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B657920646F65736E27742068617665207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x636820707572706F7365 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x7E9 PUSH2 0x7E1 PUSH2 0x7DB DUP6 MLOAD PUSH2 0x14EF JUMP JUMPDEST DUP6 PUSH2 0x140A JUMP JUMPDEST MLOAD SWAP2 DUP5 PUSH2 0x140A JUMP JUMPDEST MSTORE PUSH2 0x807 DUP3 PUSH2 0x802 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST PUSH2 0x81E PUSH2 0x540 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP5 PUSH2 0x84B PUSH2 0x4B6 DUP4 PUSH2 0x4B1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST EQ PUSH2 0x92C JUMPI PUSH2 0x859 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 JUMPDEST PUSH2 0x508 PUSH2 0x502 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x4B1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0x540 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x8D3 PUSH1 0x1 PUSH2 0x8CA DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP3 MLOAD PUSH2 0x14EF JUMP JUMPDEST ISZERO PUSH2 0x90B JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x927 PUSH2 0x922 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x523 PUSH2 0x885 PUSH2 0x4B6 PUSH2 0x89A SWAP5 PUSH2 0x86E JUMP JUMPDEST POP PUSH2 0x70D PUSH2 0x95F PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x414 PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x704 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x992 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x971 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH2 0x38D PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0x9CA DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x322E322E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x195 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xA1D DUP3 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA33 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP5 MLOAD DUP1 SWAP5 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA66 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA59 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xADB JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA42 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB44 JUMPI PUSH2 0x38D DUP6 PUSH2 0xACF DUP2 DUP8 SUB DUP3 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x195 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB9D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xBA2 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xBFC DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0xC0A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x195 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x195 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC42 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xC68 DUP3 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xC88 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xCA8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x195 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x38D SWAP6 PUSH2 0xCE2 PUSH2 0xCE8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xBF0 JUMP JUMPDEST SWAP5 PUSH2 0x1CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD10 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0x38D SWAP3 PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 SWAP3 PUSH2 0xD5D PUSH2 0xE13 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH2 0xD74 PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP5 DUP2 PUSH2 0xDB1 DUP8 SWAP4 PUSH2 0xD92 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH2 0xDC8 DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0xDEA DUP5 PUSH1 0x2 PUSH2 0xDE4 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x2022 JUMP JUMPDEST PUSH2 0xDF5 PUSH1 0x0 SLOAD PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP6 DUP7 SWAP5 DUP3 SWAP2 SWAP1 DUP3 PUSH2 0x211E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xE40 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xBA2 JUMP JUMPDEST ISZERO PUSH2 0xE60 JUMPI POP PUSH2 0xE4F DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST ADDRESS EQ ISZERO DUP1 PUSH2 0xE7D JUMPI JUMPDEST ISZERO PUSH2 0xCE8 JUMPI PUSH2 0xE77 DUP2 PUSH2 0x17D7 JUMP JUMPDEST POP PUSH2 0xCE8 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0xEA6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x237E JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEC8 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xEEC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x195 JUMPI PUSH1 0x20 SWAP4 PUSH2 0xF14 PUSH2 0xA38 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP3 PUSH2 0x212F JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x195 JUMPI PUSH2 0xF59 PUSH2 0xF50 PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xF88 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 SWAP2 DUP3 SWAP2 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10BE JUMPI JUMPDEST PUSH2 0xFB3 SWAP1 PUSH2 0x248E JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xFD9 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0xFFE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP1 PUSH1 0x2 PUSH2 0x1018 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1044 PUSH2 0x1027 PUSH1 0x20 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH2 0x103F DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x1063 DUP3 PUSH2 0x105C DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1097 DUP2 PUSH32 0xE90B7BCEB6E7DF5418FB78D8EE546E97C83A08BBCCC01A0644D599CCD2A7C2E0 PUSH2 0x143B JUMP JUMPDEST PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 PUSH2 0x114F SWAP4 PUSH2 0xC42 SWAP8 SWAP6 PUSH2 0x1141 SWAP4 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x38D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x5 DUP3 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11C1 SWAP1 PUSH2 0x11BB SWAP1 DUP2 SWAP1 PUSH1 0x3 ADD PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH2 0x2261 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x110C JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x20 PUSH2 0xA38 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x23F9 JUMP JUMPDEST CALLVALUE PUSH2 0x195 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x195 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x38D PUSH2 0x121B PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1261 JUMPI POP POP PUSH2 0xBD2 SWAP3 POP SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x124C JUMP JUMPDEST ISZERO PUSH2 0x1281 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E746572616374696E67207769746820746865206C69627261727920636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A3930B1BA1034B9903337B93134B23232B717 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x65206D616E6167656D656E74206B6579 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH2 0x1377 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1386 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x137B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 SSTORE DUP1 PUSH1 0x1 LT PUSH2 0x13A4 JUMPI POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 PUSH2 0x13C6 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x13E0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x13D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xB9D JUMPI DUP2 PUSH2 0x145D SWAP2 PUSH1 0x1 PUSH2 0x1377 SWAP5 ADD DUP2 SSTORE PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x147B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5065726D697373696F6E733A2053656E64657220646F6573206E6F7420686176 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6520636C61696D207369676E6572206B6579 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x14EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1545 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1540 PUSH2 0x152E DUP4 DUP4 PUSH2 0x1423 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x14FE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x157A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1564 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x1594 DUP4 PUSH2 0x154A JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x15B0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x15D0 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1627 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1635 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1657 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1669 JUMPI PUSH1 0x0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x168B PUSH2 0xBD2 SWAP3 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP2 DUP2 SWAP1 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH1 0x0 DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x16BD PUSH1 0x3 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x16C9 PUSH1 0x4 DUP3 ADD PUSH2 0x1643 JUMP JUMPDEST ADD PUSH2 0x164D DUP2 SLOAD PUSH2 0x154A JUMP JUMPDEST ISZERO PUSH2 0x16DB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E4578697374696E673A204B65792069736E277420726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xB9D JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x1786 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1772 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x179D SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP2 DUP1 SLOAD DUP4 DUP3 SSTORE DUP1 PUSH2 0x17BE JUMPI JUMPDEST POP DUP3 PUSH1 0x1 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH2 0x17D1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST CODESIZE PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xC42 SWAP2 PUSH2 0xA33 DUP3 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ISZERO PUSH2 0x17F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F76652061206E6F6E2D6578697374696E67206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32B1BABA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1855 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792065786563757465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F742068617665206D616E6167656D656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B6579 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x194E DUP4 PUSH2 0x154A JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1999 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1967 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x1985 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x19BD DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP2 PUSH2 0x19CB PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1584 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19FE PUSH1 0x0 SLOAD DUP5 LT PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1A31 PUSH2 0x1A2C PUSH2 0x1A28 PUSH1 0x3 PUSH2 0x1A1D DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x184E JUMP JUMPDEST PUSH2 0x1A55 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADDRESS SWAP1 DUP4 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x0 EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1A8D SWAP3 PUSH2 0x1A88 SWAP3 SWAP1 PUSH2 0x414 SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO ISZERO DUP2 MSTORE DUP4 SWAP1 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP1 PUSH1 0x20 SWAP1 LOG2 ISZERO ISZERO SUB PUSH2 0x1C7D JUMPI PUSH2 0x1AEB PUSH1 0x3 PUSH2 0x1ADD DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B05 PUSH2 0x1A48 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x1 PUSH2 0x1B1E DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH1 0x2 PUSH2 0x1B36 DUP8 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x193E JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH2 0x1B4F PUSH2 0x19AC JUMP JUMPDEST POP ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1B7E PUSH1 0x3 PUSH2 0x1B6E DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B95 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BAB DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 PUSH2 0x1C03 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 ADD DUP3 PUSH2 0x19DC JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1C22 PUSH2 0x1A48 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C38 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD SWAP2 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 PUSH2 0x1C75 PUSH1 0x2 PUSH2 0x1BE8 DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1C96 PUSH2 0x1CA1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x1CCD SWAP3 PUSH2 0x1CC8 SWAP3 SWAP1 PUSH2 0xE9E SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST SWAP3 SWAP5 SWAP1 SWAP4 SWAP5 PUSH2 0x1CED PUSH1 0x1 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO EQ PUSH2 0x127A JUMP JUMPDEST ADDRESS CALLER EQ DUP1 ISZERO PUSH2 0x1F20 JUMPI JUMPDEST PUSH2 0x1D00 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 ADDRESS DUP7 SUB PUSH2 0x1EA9 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x1D3B DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 DUP8 SWAP5 DUP7 PUSH2 0x1D56 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP3 PUSH1 0x1 PUSH2 0x1D6E DUP9 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SSTORE PUSH2 0x1D8A DUP5 PUSH1 0x3 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DA4 DUP3 PUSH1 0x4 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1DBE DUP6 PUSH1 0x5 PUSH2 0xDE4 DUP10 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x1DE7 PUSH2 0x1DDB PUSH1 0x2 PUSH2 0x599 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1E76 JUMPI SWAP4 PUSH2 0x1E70 SWAP2 PUSH2 0x1E64 PUSH32 0x46149B18AA084502C3F12BC75E19EDA8BDA8D102B82CCE8474677A6D0D5F43C5 SWAP7 PUSH2 0x1E2E DUP10 PUSH2 0x33D DUP13 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1E44 DUP11 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST POP PUSH32 0x3BAB293FC00DB832D7619A9299914251B8747C036867EC056CBD506F60135B13 SWAP4 PUSH2 0x1E70 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x604B4D37 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x1ECA DUP12 DUP8 DUP12 ADDRESS PUSH1 0x4 DUP7 ADD PUSH2 0x1F5D JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1EE7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1EEC JUMPI JUMPDEST POP PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1D13 JUMP JUMPDEST PUSH2 0x1F0E SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1F14 JUMPI JUMPDEST PUSH2 0x1F06 DUP2 DUP4 PUSH2 0xBA2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F48 JUMP JUMPDEST CODESIZE PUSH2 0x1EE1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1F95 JUMP JUMPDEST POP PUSH2 0x1D00 PUSH2 0x1F41 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x6BE PUSH1 0x40 DUP3 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x195 JUMPI MLOAD PUSH2 0xC42 DUP2 PUSH2 0x9EE JUMP JUMPDEST SWAP3 PUSH2 0xC42 SWAP5 SWAP3 PUSH2 0x1F87 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FA8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420636C61696D PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1FEC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xBD2 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2018 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x200B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB9D JUMPI PUSH2 0x204A DUP2 PUSH2 0x2044 DUP5 SLOAD PUSH2 0x154A JUMP JUMPDEST DUP5 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2087 JUMPI DUP2 SWAP1 PUSH2 0x1377 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x207C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH2 0x209C DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20D8 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x20A0 JUMP JUMPDEST SWAP3 PUSH2 0x2110 PUSH2 0xC42 SWAP6 SWAP4 PUSH2 0x1F87 SWAP4 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x966 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xC42 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST PUSH2 0x21D8 SWAP4 PUSH2 0x2168 PUSH2 0x21B3 SWAP5 SWAP4 PUSH2 0xE32 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x966 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x21AA DUP2 PUSH2 0xE32 PUSH1 0x20 DUP3 ADD SWAP5 DUP6 PUSH1 0x3C SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP3 MSTORE PUSH1 0x1C DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 PUSH2 0x6BE SWAP1 DUP3 SWAP1 DUP2 ADD PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x21E1 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x41 DUP2 MLOAD SUB PUSH2 0x225B JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 BYTE SWAP2 PUSH1 0x1B DUP4 LT PUSH2 0x2245 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x80 SWAP1 PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x0 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1B ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x14EA JUMPI SWAP1 SWAP2 SWAP1 PUSH2 0x220E JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBD2 PUSH2 0x2275 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1584 JUMP JUMPDEST SUB DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2298 DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x22A1 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI PUSH2 0x22D4 DUP3 PUSH1 0x1 SWAP3 PUSH2 0x140A JUMP JUMPDEST MLOAD EQ DUP1 ISZERO PUSH2 0x22F0 JUMPI JUMPDEST PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x22BD JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x22DD JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x231F DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x2359 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2373 JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP EQ CODESIZE PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x239A DUP4 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x23A3 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP4 ADD MSTORE ISZERO PUSH2 0x22FD JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22F5 JUMPI DUP2 PUSH2 0x23D4 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x23EE JUMPI JUMPDEST POP PUSH2 0x22E9 JUMPI PUSH1 0x1 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x23E1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2416 DUP5 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x241F DUP2 PUSH2 0x122F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x247E JUMPI DUP2 PUSH2 0x2450 SWAP2 PUSH2 0x140A JUMP JUMPDEST MLOAD DUP3 PUSH1 0x1 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x2474 JUMPI JUMPDEST POP POP PUSH2 0x246C JUMPI PUSH1 0x1 ADD PUSH2 0x243B JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EQ SWAP1 POP DUP3 CODESIZE PUSH2 0x245E JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206B65792077617320616C72656164792073657475702E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x24E4 DUP3 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x24FE JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 DUP6 ADD SSTORE ADD PUSH2 0x24F1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH26 0x9B66A8CF80B1EAC9926CB59FADD7E2ED54C7D2FF0FAF5E844083 LOG2 PREVRANDAO 0xD SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "551:376:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;;;;;;;;-1:-1:-1;;;780:42:12;;;:86;;;;551:376;780:138;;;;551:376;-1:-1:-1;551:376:12;;;;;;;;;;780:138;-1:-1:-1;;;1134:40:9;;-1:-1:-1;780:138:12;;;:86;-1:-1:-1;;;826:40:12;;;-1:-1:-1;780:86:12;;551:376;-1:-1:-1;551:376:12;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;-1:-1:-1;551:376:12;;;4426:5:0;551:376:12;;;;;;;;4448:19:0;;;551:376:12;4469:15:0;;;551:376:12;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;;;693:84:0;717:4;551:376:12;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;551:376:12;929:152:0;;;:::i;:::-;7228:11;:15;:11;;551:376:12;;717:4:0;551:376:12;;;;;;;7228:11:0;:15;551:376:12;7228:23:0;;;551:376:12;7296:11:0;;551:376:12;;717:4:0;551:376:12;;;;;;;7296:11:0;551:376:12;:::i;:::-;7335:24:0;-1:-1:-1;7397:17:0;551:376:12;;7361:34:0;;;;;7452:26;;;;;:::i;:::-;551:376:12;7501:19:0;7497:109;;717:4;551:376:12;7335:24:0;;7497:109;551:376:12;;-1:-1:-1;;;7544:43:0;;551:376:12;;7544:43:0;;551:376:12;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;7544:43:0;7361:34;;;;;;7634:35;:11;;;551:376:12;;717:4:0;551:376:12;;;;;;;7634:11:0;:35;:::i;:::-;7831;:24;;;551:376:12;;7228:15:0;551:376:12;;;;;;;7831:35:0;551:376:12;;7882:31:0;;-1:-1:-1;7882:31:0;;717:4;551:376:12;;;;;;;;;;7224:597:0;7700:11;;;7228:15;7700:11;;551:376:12;;717:4:0;551:376:12;;;;;;;7700:11:0;:15;551:376:12;;;;;:::i;:::-;;;;7736:11:0;;551:376:12;;717:4:0;551:376:12;;;;;;;7736:11:0;551:376:12;:::i;:::-;7783:11:0;717:4;7783:11;;551:376:12;;717:4:0;551:376:12;;;;;;;7783:11:0;:19;551:376:12;7224:597:0;;937:82;551:376:12;929:152:0;968:51;551:376:12;;;992:22:0;;937:10;;551:376:12;;;992:22:0;;;551:376:12;992:22:0;;:::i;:::-;551:376:12;982:33:0;;968:51;:::i;:::-;937:82;;;;551:376:12;;;;;;-1:-1:-1;;551:376:12;;;;;;693:84:0;717:4;551:376:12;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;551:376:12;1229:154:0;;;:::i;:::-;14236:17;;551:376:12;;;;;;;;;;14236:17:0;551:376:12;14273:11:0;;14269:95;;-1:-1:-1;14422:22:0;;;551:376:12;;14422:14:0;551:376:12;;;;;;;14422:22:0;551:376:12;14461:175:0;;14468:22;551:376:12;14468:34:0;:22;;;551:376:12;;14422:14:0;551:376:12;;;;;;;14468:22:0;:34;:::i;:::-;551:376:12;;;;;;;;;14468:46:0;;;14530:12;;;:::i;:::-;14561:25;;;14461:175;14557:69;14606:5;14646:84;15054:17;14606:5;14646:34;551:376:12;14691:39:0;15047:24;14606:5;14461:175;14714:15;14691:22;;551:376:12;;14422:14:0;551:376:12;;;;;;;14691:22:0;14714:15;;:::i;:::-;14691:39;;:::i;551:376:12:-;14646:22:0;;;551:376:12;;14422:14:0;551:376:12;;;;;;;14646:34:0;:84;;:::i;:::-;14740:26;:22;;551:376:12;;14422:14:0;551:376:12;;;;;;;14740:22:0;:26;:::i;:::-;717:4;14852:17;;551:376:12;;;;;;;;;;14852:17:0;:24;551:376:12;14890:17:0;;14784:252;551:376:12;14890:24:0;:17;;551:376:12;;;;;;;;;;14890:17:0;:24;551:376:12;-1:-1:-1;;;;;551:376:12;;;;14928:27:0;:17;;551:376:12;;;;;;;;;;14928:17:0;:27;14969:17;14784:252;551:376:12;14969:17:0;;551:376:12;;;;;;;;;;14969:17:0;:22;14422:14;15005:17;;551:376:12;;;;;;;;;;15005:17:0;:21;551:376:12;;;;;;;;;;;;14784:252:0;;;:::i;:::-;;;;551:376:12;;;;;;;;;;15054:17:0;15047:24;:::i;:::-;551:376:12;;717:4:0;551:376:12;;;;;14468:46:0;;14646:84;15054:17;14468:46;14646:34;551:376:12;14691:39:0;15047:24;14468:46;;;14269:95;551:376:12;;-1:-1:-1;;;14300:53:0;;551:376:12;;14300:53:0;;551:376:12;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;7544:43:0;1237:82;551:376:12;1229:154:0;1268:51;551:376:12;;;1292:22:0;;1237:10;;551:376:12;;;1292:22:0;;;551:376:12;1292:22:0;;:::i;:::-;551:376:12;1282:33:0;;1268:51;:::i;:::-;1237:82;;;;551:376:12;;;;;;-1:-1:-1;;551:376:12;;;;;;;;693:84:0;717:4;551:376:12;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;:::-;959:4;937:10;:27;:82;;;;551:376:12;929:152:0;;;:::i;:::-;10193:69;10201:11;:15;:11;;551:376:12;;717:4:0;551:376:12;;;;;;;10201:11:0;:15;551:376:12;10201:23:0;10193:69;:::i;:::-;551:376:12;10301:11:0;;551:376:12;;717:4:0;551:376:12;;;;;;;;10332:21:0;-1:-1:-1;10363:220:0;10370:23;;;;;:::i;:::-;551:376:12;10370:35:0;;;10421:14;;;:::i;:::-;551:376:12;;;10454:32:0;;10450:123;;10363:220;;;10450:123;551:376:12;;-1:-1:-1;;;10506:52:0;;551:376:12;;10506:52:0;;551:376:12;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;7544:43:0;10370:35;10593:57;10619:31;10629:20;551:376:12;;10629:20:0;:::i;:::-;10619:31;;:::i;:::-;551:376:12;10593:57:0;;;:::i;:::-;551:376:12;;10660:11:0;;;551:376:12;;717:4:0;551:376:12;;;;;;;10660:11:0;551:376:12;:::i;:::-;10702:24:0;:11;;551:376:12;;717:4:0;551:376:12;;;;;;;10702:24:0;-1:-1:-1;551:376:12;;;7228:15:0;551:376:12;;;;;;10827:167:0;;10834:24;551:376:12;10834:34:0;:24;;;551:376:12;;7228:15:0;551:376:12;;;;;;;;10834:42:0;;;10892:10;;;:::i;:::-;10921:23;;;10827:167;10917:67;11004:34;551:376:12;11041:41:0;11004:78;10964:5;10827:167;11066:15;11041:24;;551:376:12;;7228:15:0;551:376:12;;;;;;;;11004:24:0;;;551:376:12;;7228:15:0;551:376:12;;;;;;;11004:78:0;11092:28;:24;;551:376:12;;7228:15:0;551:376:12;;;;;;;11092:28:0;11182:20;717:4;11148:11;;551:376:12;;717:4:0;551:376:12;;;;;;;11148:11:0;:19;551:376:12;;;11182:20:0;:::i;:::-;:25;11178:74;;10827:167;551:376:12;;11267:35:0;;-1:-1:-1;11267:35:0;;717:4;551:376:12;;;;;11178:74:0;11223:18;11230:11;;551:376:12;;717:4:0;551:376:12;;;;;;;11230:11:0;11223:18;:::i;:::-;11178:74;;10834:42;11004:34;551:376:12;11041:41:0;11004:78;10834:42;;;937:82;551:376:12;929:152:0;968:51;551:376:12;;;992:22:0;;937:10;;551:376:12;;;992:22:0;;;551:376:12;992:22:0;;:::i;968:51::-;937:82;;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;8381:1560:0;551:376:12;;;;;;;:::i;:::-;693:84:0;717:4;551:376:12;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;:::-;8381:1560;:::i;:::-;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;-1:-1:-1;551:376:12;5960:14:0;551:376:12;;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;-1:-1:-1;551:376:12;5422:14:0;551:376:12;;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;551:376:12;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;551:376:12;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12732:22:0;551:376:12;;;;;;;;;;;:::i;:::-;12732:22:0;;:::i;:::-;551:376:12;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3453:52:0;551:376:12;;3453:52:0;551:376:12;;;;;;:::i;:::-;;693:84:0;717:4;551:376:12;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;:::-;-1:-1:-1;551:376:12;3278:25:0;;:34;:25;;;;551:376:12;;3278:11:0;551:376:12;;;;;;;3278:25:0;551:376:12;;-1:-1:-1;;;;;;551:376:12;-1:-1:-1;;;;;551:376:12;;;;;;;;;;3278:34:0;3322:25;717:4;3322:25;;551:376:12;;3278:11:0;551:376:12;;;;;;;3322:25:0;:31;551:376:12;;3372:25:0;:30;:25;;551:376:12;;3278:11:0;551:376:12;;;;;;;3372:25:0;:30;551:376:12;:::i;:::-;3420:17:0;-1:-1:-1;551:376:12;3420:17:0;:::i;:::-;-1:-1:-1;551:376:12;;;-1:-1:-1;;;;;551:376:12;;;;;;;;;;;3453:52:0;:::i;:::-;;;;551:376:12;;;3555:10:0;551:376:12;3544:22:0;;551:376:12;;;3520:51:0;;3544:22;;551:376:12;3544:22:0;;551:376:12;;;;3544:22:0;;551:376:12;;3544:22:0;;;;;;:::i;3520:51::-;3534:33;;;8481:12;;;;:::i;:::-;;551:376:12;;;;;;;;;;;;;3516:255:0;3658:4;3643:20;;:75;;;3516:255;3639:132;3516:255;3639:132;8481:12;;;:::i;:::-;;3516:255;;3643:75;-1:-1:-1;551:376:12;;;3555:10:0;551:376:12;3691:22:0;;551:376:12;;;3667:51:0;;3691:22;;551:376:12;3691:22:0;;551:376:12;;;;3691:22:0;551:376:12;3691:22:0;551:376:12;3681:33:0;;3667:51;:::i;:::-;3643:75;;551:376:12;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;;;551:376:12;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;551:376:12;;2312:34:0;551:376:12;;20108:12:0;551:376:12;20200:4:0;;;;551:376:12;;20107:13:0;:33;;;;551:376:12;20099:76:0;;;:::i;:::-;20185:19;20200:4;551:376:12;;20108:12:0;551:376:12;;;20108:12:0;551:376:12;;20185:19:0;20214;551:376:12;;;20108:12:0;551:376:12;;;20108:12:0;551:376:12;;20214:19:0;551:376:12;;;-1:-1:-1;;;;;551:376:12;;;;20269:32:0;;551:376:12;;;20269:32:0;551:376:12;20269:32:0;;551:376:12;;;;20269:32:0;551:376:12;20269:32:0;551:376:12;20259:43:0;;20312:11;:15;:11;;551:376:12;;717:4:0;551:376:12;;;;;;;20312:11:0;:15;551:376:12;;;;;:::i;:::-;;;;20344:11:0;;551:376:12;;717:4:0;551:376:12;;;;;;;20344:11:0;551:376:12;:::i;:::-;20380:23:0;:11;;;551:376:12;;717:4:0;551:376:12;;;;;;;20380:11:0;:19;20200:4;551:376:12;;;20380:23:0;20200:4;551:376:12;;20312:15:0;551:376:12;;20413:28:0;:17;551:376:12;7634:35:0;:::i;20413:28::-;20456:20;-1:-1:-1;20456:20:0;;551:376:12;20107:33:0;-1:-1:-1;20748:4:0;20839:36;20891:7;20107:33;;551:376:12;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;;;-1:-1:-1;551:376:12;;;;;;;;;;;;16498:24:0;;;551:376:12;16532:24:0;;;551:376:12;;;;;;;-1:-1:-1;;;;;551:376:12;;;;16635:21:0;;;;16603:22;;;;551:376:12;;;;;;16566:27:0;;551:376:12;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;551:376:12;;;;;;-1:-1:-1;551:376:12;4892:5:0;551:376:12;;;;;-1:-1:-1;551:376:12;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;551:376:12;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;551:376:12;;;-1:-1:-1;551:376:12;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;;-1:-1:-1;551:376:12;:::o;:::-;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;551:376:12;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;551:376:12;;;;;;;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12:o;:::-;;;;;-1:-1:-1;551:376:12;;;;-1:-1:-1;551:376:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;-1:-1:-1;551:376:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;;-1:-1:-1;551:376:12;;;;;;;:::i;:::-;;;;;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;658:137:0;717:4;8381:1560;658:137;693:84;551:376:12;;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;551:376:12:-;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;-1:-1:-1;551:376:12;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;551:376:12;;;-1:-1:-1;;551:376:12;;;;;;;;-1:-1:-1;551:376:12:o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;551:376:12;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::i;8381:1560:0:-;;9030:4;8381:1560;8509:73;8523:15;551:376:12;8517:21:0;;8509:73;:::i;:::-;8592:63;8600:26;8601:25;:11;:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;8601:16:0;:25;551:376:12;;;;;;;8601:25:0;8600:26;;551:376:12;8600:26:0;8592:63;:::i;:::-;8669:19;:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;8669:16:0;551:376:12;-1:-1:-1;;;;;551:376:12;;;8669:19:0;8700:4;551:376:12;;;;;;;8669:36:0;8666:299;8700:4;;;551:376:12;;;8764:10:0;8753:22;;;551:376:12;;;8721:99:0;;8729:51;;551:376:12;8753:22:0;;551:376:12;;;;8753:22:0;551:376:12;8729:51:0;8721:99;:::i;:::-;551:376:12;;;;;;;;;8980:23:0;;551:376:12;;8980:23:0;551:376:12;;9018:16:0;9030:4;;9050:32;8601:11;9050:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9050:16:0;:25;551:376:12;;-1:-1:-1;;551:376:12;9030:4:0;551:376:12;;;;9050:32:0;8523:15;9173:16;:19;:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9173:19:0;551:376:12;9030:4:0;9205:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9205:16:0;:22;551:376:12;9230:21:0;:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9230:16:0;:21;551:376:12;;;;;;;:::i;:::-;9173:79:0;;;;;;:::i;:::-;-1:-1:-1;9267:572:0;;;9298:32;8601:11;9298:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9298:16:0;:25;551:376:12;;-1:-1:-1;;551:376:12;;;;;;9298:32:0;9409:19;:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9409:19:0;9030:4;9450:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9450:16:0;:22;551:376:12;9494:16:0;9354:179;;9230:21;9494:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9494:16:0;551:376:12;;-1:-1:-1;;;;;551:376:12;;;;;;;;;9494:21:0;551:376:12;9354:179:0;:::i;:::-;;;;9030:4;9552:11;:::o;9267:572::-;9669:19;:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9669:19:0;9030:4;9710:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9710:16:0;:22;551:376:12;9754:16:0;9607:186;;9230:21;9754:16;;551:376:12;;3278:11:0;551:376:12;;;;;;;9607:186:0;;;;8523:15;9812:12;:::o;9014:899::-;8601:11;9869:16;:33;:16;551:376:12;;3278:11:0;551:376:12;;;;;;;9869:16:0;:25;551:376:12;;-1:-1:-1;;551:376:12;;;;9869:33:0;8523:15;8381:1560;:::o;8666:299::-;551:376:12;;;8902:10:0;8891:22;;;551:376:12;;;8859:95:0;;8867:51;;551:376:12;8891:22:0;;551:376:12;;;;8891:22:0;551:376:12;8867:51:0;8859:95;:::i;:::-;8666:299;;658:137;;;;;;693:84;717:4;551:376:12;701:12:0;551:376:12;;;;;;701:20:0;693:84;:::i;:::-;1259:4;1237:10;:27;:82;;;;658:137;1229:154;;;:::i;:::-;-1:-1:-1;;;;;551:376:12;;;1259:4:0;12774:24;;12770:168;;658:137;551:376:12;;;-1:-1:-1;;;;;551:376:12;;12976:27:0;;;551:376:12;;;;;;;;;12976:27:0;551:376:12;;;;12976:27:0;551:376:12;12976:27:0;551:376:12;12966:38:0;;13014:16;;;;;;551:376:12;;;;;;;;;;13014:16:0;551:376:12;13055:16:0;717:4;13055:16;;551:376:12;;;;;;;;;;13055:16:0;:23;551:376:12;;13098:16:0;:26;:16;;551:376:12;;;;;;;;;;;;13147:16:0;13014:7;13147:16;;551:376:12;;;;;;;;;;;;13186:16:0;:20;:16;;551:376:12;;;;;;;;;;;13228:16:0;:34;551:376:12;13228:23:0;:16;;551:376:12;;;;;;;;;;;-1:-1:-1;;;;;551:376:12;;;13228:34:0;;;;13278:22;13381:70;13278:22;13328:33;13381:70;13278:22;:36;:22;;;551:376:12;;14422:14:0;551:376:12;;;;;;;13278:36:0;13228:23;13328:16;;551:376:12;;;;;;;;;;13328:16:0;:23;551:376:12;;-1:-1:-1;;;;;;551:376:12;-1:-1:-1;;;;;551:376:12;;;;;;;;;;13328:33:0;551:376:12;;13381:70:0;;;;;:::i;:::-;;;;658:137;:::o;13224:354::-;551:376:12;13495:72:0;551:376:12;13495:72:0;551:376:12;;;13495:72:0;;;;;:::i;12770:168::-;551:376:12;;-1:-1:-1;;;12822:87:0;;;551:376:12;;12822:87:0;1259:4;;;;12822:87;;;;:::i;:::-;;;;;;;;;;12814:113;12822:87;551:376:12;12822:87:0;;;12770:168;12814:113;;:::i;:::-;12770:168;;12822:87;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1237:82::-;551:376:12;1229:154:0;1268:51;551:376:12;;1292:22:0;;;1237:10;;551:376:12;;1292:22:0;;;;551:376:12;1292:22:0;;:::i;1268:51::-;1237:82;;;;551:376:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;551:376:12;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;17861:934:0:-;18700:28;17861:934;18096:39;18406:38;17861:934;;551:376:12;;;18096:39:0;;;;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;:::i;18096:39:0:-;551:376:12;18086:50:0;;551:376:12;;18270:62:0;;;18096:39;18270:62;;;;551:376:12;;;;;;;;;;;;18270:62:0;551:376:12;18260:73:0;;18406:38;;:::i;:::-;551:376:12;;;-1:-1:-1;;;;;551:376:12;;;18096:39:0;18528:21;;551:376:12;;;18528:21:0;551:376:12;18528:21:0;;551:376:12;;;;18528:21:0;551:376:12;18700:28:0;18696:70;;551:376:12;17861:934:0;:::o;18696:70::-;18751:4;18744:11;:::o;19046:719::-;551:376:12;;19287:2:0;551:376:12;;19273:16:0;19269:64;;19455:143;;;;;;;;;;;;;;;19612:7;19617:2;19612:7;;19608:46;;19046:719;19455:143;551:376:12;;;;;;;;;19455:143:0;551:376:12;;;;;;;;;;;;;;;;19691:31:0;;;19455:143;;551:376:12;;19691:31:0;;;;;;551:376:12;19691:31:0;19046:719;:::o;19608:46::-;551:376:12;;19617:2:0;551:376:12;;;;;;;19635:8:0;;;19608:46;;19269:64;19305:17;;;;:::o;551:376:12:-;;;;;;;;;;;;:::i;:::-;;;;:::i;16821:463:0:-;551:376:12;;717:4:0;551:376:12;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;717:4:0;551:376:12;;;;;;;;;;;;;;16990:12:0;16986:30;;551:376:12;17097:17:0;17076:12;;551:376:12;;17058:37:0;;;;;17148:29;;717:4;17148:29;;:::i;:::-;551:376:12;17196:12:0;:35;;;;17097:17;17192:52;;717:4;551:376:12;17032:24:0;;17192:52;17233:11;;717:4;17233:11;:::o;17196:35::-;;;17058:37;;;;551:376:12;16821:463:0;:::o;16986:30::-;17004:12;551:376:12;17004:12:0;:::o;16821:463::-;551:376:12;;16965:5:0;551:376:12;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5:0;551:376:12;;;;;;;;;;;;;;16990:12:0;16986:30;;551:376:12;17097:17:0;17076:12;;551:376:12;;17058:37:0;;;;;17148:29;;;;:::i;:::-;551:376:12;16965:5:0;17196:12;;:35;;;;;17097:17;17192:52;;;16965:5;551:376:12;17032:24:0;;17196:35;1317:1;17212:19;;;17196:35;;;16821:463;551:376:12;;16965:5:0;551:376:12;;;;;3372:30:0;551:376:12;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5:0;551:376:12;;;;;;;;;;;;;;16990:12:0;16986:30;;551:376:12;17097:17:0;17076:12;;551:376:12;;17058:37:0;;;;;17148:29;;;;:::i;:::-;551:376:12;16965:5:0;17196:12;;:35;;;;;17097:17;17192:52;;;16965:5;551:376:12;17032:24:0;;17196:35;3372:30;17212:19;;;17196:35;;;16821:463;551:376:12;;16965:5:0;551:376:12;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;16965:5:0;551:376:12;;;;;;;;;;;;;;16990:12:0;16986:30;;551:376:12;17097:17:0;17076:12;;551:376:12;;17058:37:0;;;;;17148:29;;;;:::i;:::-;551:376:12;17196:12:0;16965:5;17196:12;;:35;;;;;17097:17;17192:52;;;;16965:5;551:376:12;17032:24:0;;17192:52;17233:11;;;16965:5;17233:11;:::o;17196:35::-;17212:19;;-1:-1:-1;17196:35:0;;;;17058:37;;;;;551:376:12;16821:463:0;:::o;16986:30::-;17004:12;;551:376:12;17004:12:0;:::o;551:376:12:-;;;;:::o;:::-;;;-1:-1:-1;;;551:376:12;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
              "addKey(bytes32,uint256,uint256)": "1d381240",
              "approve(uint256,bool)": "747442d3",
              "execute(address,uint256,bytes)": "b61d27f6",
              "getClaim(bytes32)": "c9100bcb",
              "getClaimIdsByTopic(uint256)": "80e9e9e1",
              "getKey(bytes32)": "12aaac70",
              "getKeyPurposes(bytes32)": "fb307b34",
              "getKeysByPurpose(uint256)": "9010f726",
              "getRecoveredAddress(bytes,bytes32)": "c3b129e3",
              "initialize(address)": "c4d66de8",
              "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
              "keyHasPurpose(bytes32,uint256)": "d202158d",
              "removeClaim(bytes32)": "4eee424a",
              "removeKey(bytes32,uint256)": "53d413c5",
              "supportsInterface(bytes4)": "01ffc9a7",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"See {IERC735-addClaim}.\",\"params\":{\"_data\":\"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\",\"_issuer\":\"The issuers identity contract address, or the address used to sign the above signature.\",\"_scheme\":\"The scheme with which this claim SHOULD be verified or how it should be processed.\",\"_signature\":\"Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\",\"_topic\":\"The type of claim\",\"_uri\":\"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\"},\"returns\":{\"claimRequestId\":\"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event.\"}},\"addKey(bytes32,uint256,uint256)\":{\"params\":{\"_key\":\"keccak256 representation of an ethereum address\",\"_purpose\":\"a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\",\"_type\":\"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\"},\"returns\":{\"success\":\"Returns TRUE if the addition was successful and FALSE if not\"}},\"approve(uint256,bool)\":{\"details\":\"See {IERC734-approve}.\"},\"execute(address,uint256,bytes)\":{\"details\":\"See {IERC734-execute}.\",\"returns\":{\"executionId\":\"to use in the approve function, to approve or reject this execution.\"}},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"data\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"issuer\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"scheme\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"signature\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"topic\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"uri\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\"}},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}.\",\"params\":{\"_topic\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"claimIds\":\"Returns an array of claim IDs by topic.\"}},\"getKey(bytes32)\":{\"details\":\"See {IERC734-getKey}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"key\":\"Returns the full key data, if present in the identity.\",\"keyType\":\"Returns the full key data, if present in the identity.\",\"purposes\":\"Returns the full key data, if present in the identity.\"}},\"getKeyPurposes(bytes32)\":{\"details\":\"See {IERC734-getKeyPurposes}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"_purposes\":\"Returns the purposes of the specified key\"}},\"getKeysByPurpose(uint256)\":{\"details\":\"See {IERC734-getKeysByPurpose}.\",\"params\":{\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\"},\"returns\":{\"keys\":\"Returns an array of public key bytes32 hold by this identity and having the specified purpose\"}},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"initialize(address)\":{\"params\":{\"initialManagementKey\":\"The ethereum address to be set as the management key of the ONCHAINID.\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"claimValid\":\"true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"See {IERC734-keyHasPurpose}.\"},\"removeClaim(bytes32)\":{\"details\":\"See {IERC735-removeClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"success\":\"Returns TRUE when the claim was removed. triggers ClaimRemoved event\"}},\"removeKey(bytes32,uint256)\":{\"details\":\"See {IERC734-removeKey}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"Returns the string of the current version.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"notice\":\"Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key.\"},\"addKey(bytes32,uint256,uint256)\":{\"notice\":\"implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"notice\":\"Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method.\"},\"getClaim(bytes32)\":{\"notice\":\"Implementation of the getClaim function from the ERC-735 standard.\"},\"getClaimIdsByTopic(uint256)\":{\"notice\":\"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic\"},\"getKey(bytes32)\":{\"notice\":\"Implementation of the getKey function from the ERC-734 standard\"},\"getKeyPurposes(bytes32)\":{\"notice\":\"gets the purposes of a key\"},\"getKeysByPurpose(uint256)\":{\"notice\":\"gets all the keys with a specific purpose from an identity\"},\"initialize(address)\":{\"notice\":\"When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\"},\"keyHasPurpose(bytes32,uint256)\":{\"notice\":\"Returns true if the key has MANAGEMENT purpose or the specified purpose.\"},\"removeClaim(bytes32)\":{\"notice\":\"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself.\"},\"removeKey(bytes32,uint256)\":{\"notice\":\"Remove the purpose from a key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/system/identity-factory/identities/SMARTTokenIdentityImplementation.sol\":\"SMARTTokenIdentityImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@onchainid/contracts/Identity.sol\":{\"keccak256\":\"0x5bc52be65a62f9dc00b27ceb8722187cdd38eb261461057a90a93e0ed6e6ea96\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://409bc6ccbe2c62849c3643d90f6fd588ab136602119efb98ef916ee5249078d4\",\"dweb:/ipfs/QmR6fAgKkpbinKJTjrzC6hnUebYfXz6B8aQo6HAZM85FSp\"]},\"@onchainid/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3d1aa644ee16edee30a1e5b3a8c2388e99a6b4d46fadf7fea0c377529c3f03a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3714bbd6e289bdd2a61074bad5b6841bbab2f1bbcb4f461d41210cec8811ae\",\"dweb:/ipfs/QmNTvHAANFjFxzZs6uTniiNW5cJSADKh37g8gaCnujNope\"]},\"@onchainid/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x1176024fe195d6776b18c639a7aae7f41cec2e42a1512a8653372d60c89e6b55\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://645998579c349ef1ff2dcf49477a21d0c1ed48784e54bda4e49c48de1de3cb8f\",\"dweb:/ipfs/QmVpGS1VZ54KtzJapCaBZ7dBMCk5fFpKn1rybYzhQdbYiH\"]},\"@onchainid/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x8484095fb545237cbaf3ea70761bf168c77fc54323dab5f8ad74ee4dcd416aaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://955c3fa2a62da7504d4d8be49b23c3ea31ac7f577038b204d7681573f8791b97\",\"dweb:/ipfs/QmVFDPFZiGGcy3cbgYXAhRPRLGJfpEw3YvwWaGMMkdQf2d\"]},\"@onchainid/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x908fef4a1a0962facdd9c6b14417edc284864d78805e07eac256d54e415f6186\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cdf0abb91e57adc8111ebeec931a15ea28d86216354917e9de34f40a998bb264\",\"dweb:/ipfs/QmarS6ikrWSV7vBY56WmC3ENbsLgf15PTPRoa5HYCfr9vo\"]},\"@onchainid/contracts/storage/Storage.sol\":{\"keccak256\":\"0x8cc9c1d7c00214df76680b475b99c0f296c6e876d9a3a701e0e4074ea1160571\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://707ecf18de2c2d6da9f5827e2416934de65fae4109369ca8743b2e469661b094\",\"dweb:/ipfs/QmcRV2o4BRvDAHDaG7hjZtHB2WjxBPL1zkfZq7hwpbAYZG\"]},\"@onchainid/contracts/storage/Structs.sol\":{\"keccak256\":\"0x4cc1dc80265e110342fc791e6bb95392c8698ff701fd41c9e35bf9cf7ff5bd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3f2ad40831a23a7d8ea156b26a7ad9152785a78aa70ff0463bcdbbbda791cc2c\",\"dweb:/ipfs/QmX8DicmSMnARZctXdMaKRatBb5e2djdqGHwrwLP3SFMVV\"]},\"@onchainid/contracts/version/Version.sol\":{\"keccak256\":\"0x9edca39fb2e35af59f82ce30de0f2b7727e0a2df9cf9b703288db868ea4e8405\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf16acdc9fbada3d392c243f3ded28d654084f2c367c7103b1769f0ee0a7b1a4\",\"dweb:/ipfs/QmeVUtHa9LGdiaxKav6swxHuWTYLhz3FXbQfY4wUMUKd97\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/system/identity-factory/identities/SMARTTokenIdentityImplementation.sol\":{\"keccak256\":\"0xfb3226e40ef6a950a8f4c09d66d778320a356d12f2f00154926052b83227b2dd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://63dea7a7209ccafd1dc6b02ef3f1c07563df4d17aaa3bd6d4626fffc556708e2\",\"dweb:/ipfs/Qmd3XLGv72XSYziSxWUeFtsJSn2abBZEeXyaiwpKdBSfGf\"]}},\"version\":1}"
        }
      }
    }
  }
}